//////////////////////////////////////////////////////////
//   This class has been automatically generated 
//     (Wed Oct 10 12:20:29 2001 by ROOT version3.02/00)
//   from TTree T/Output DST
//   found on file: Afile.root
//////////////////////////////////////////////////////////


#ifndef demo_VDC_h
#define demo_VDC_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

class demo_VDC {
  public :
    TTree          *fChain;   //pointer to the analyzed TTree or TChain
  Int_t           fCurrent; //current Tree number in a TChain
  //Declaration of leaves types
  THaRawEvent     *THaEvent;
  Float_t         fB_X4a[6];
  Float_t         fB_Y4a[6];
  Float_t         fB_X4b[6];
  Float_t         fB_Y4b[6];
  Float_t         fB_Xcur;
  Float_t         fB_Ycur;
  Float_t         fB_Xder;
  Float_t         fB_Yder;
  Int_t           fR_U1_nhit;
  Int_t           fR_U1_nclust;
  Int_t           fR_V1_nhit;
  Int_t           fR_V1_nclust;
  Int_t           fR_U2_nhit;
  Int_t           fR_U2_nclust;
  Int_t           fR_V2_nhit;
  Int_t           fR_V2_nclust;
  Int_t           fR_TR_n;
  Float_t         fR_TR_x;
  Float_t         fR_TR_y;
  Float_t         fR_TR_z;
  Float_t         fR_TR_th;
  Float_t         fR_TR_ph;
  Int_t           fR_S1L_nthit;
  Float_t         fR_S1L_tdc[6];
  Float_t         fR_S1L_tdc_c[6];
  Int_t           fR_S1R_nthit;
  Float_t         fR_S1R_tdc[6];
  Float_t         fR_S1R_tdc_c[6];
  Int_t           fR_S1L_nahit;
  Float_t         fR_S1L_adc[6];
  Float_t         fR_S1L_adc_p[6];
  Float_t         fR_S1L_adc_c[6];
  Int_t           fR_S1R_nahit;
  Float_t         fR_S1R_adc[6];
  Float_t         fR_S1R_adc_p[6];
  Float_t         fR_S1R_adc_c[6];
  Float_t         fR_S1_trx;
  Float_t         fR_S1_try;
  Int_t           fR_S2L_nthit;
  Float_t         fR_S2L_tdc[6];
  Float_t         fR_S2L_tdc_c[6];
  Int_t           fR_S2R_nthit;
  Float_t         fR_S2R_tdc[6];
  Float_t         fR_S2R_tdc_c[6];
  Int_t           fR_S2L_nahit;
  Float_t         fR_S2L_adc[6];
  Float_t         fR_S2L_adc_p[6];
  Float_t         fR_S2L_adc_c[6];
  Int_t           fR_S2R_nahit;
  Float_t         fR_S2R_adc[6];
  Float_t         fR_S2R_adc_p[6];
  Float_t         fR_S2R_adc_c[6];
  Float_t         fR_S2_trx;
  Float_t         fR_S2_try;
  Int_t           fR_AR_nthit;
  Float_t         fR_AR_tdc[26];
  Float_t         fR_AR_tdc_c[26];
  Int_t           fR_AR_nahit;
  Float_t         fR_AR_adc[26];
  Float_t         fR_AR_adc_p[26];
  Float_t         fR_AR_adc_c[26];
  Float_t         fR_AR_asum_p;
  Float_t         fR_AR_asum_c;
  Float_t         fR_AR_trx;
  Float_t         fR_AR_try;
  Int_t           fR_CH_nthit;
  Float_t         fR_CH_tdc[10];
  Float_t         fR_CH_tdc_c[10];
  Int_t           fR_CH_nahit;
  Float_t         fR_CH_adc[10];
  Float_t         fR_CH_adc_p[10];
  Float_t         fR_CH_adc_c[10];
  Float_t         fR_CH_asum_p;
  Float_t         fR_CH_asum_c;
  Float_t         fR_CH_trx;
  Float_t         fR_CH_try;
  Int_t           fR_PSH_nhit;
  Float_t         fR_PSH_adc[48];
  Float_t         fR_PSH_adc_p[48];
  Float_t         fR_PSH_adc_c[48];
  Float_t         fR_PSH_asum_p;
  Float_t         fR_PSH_asum_c;
  Int_t           fR_PSH_nclust;
  Float_t         fR_PSH_e;
  Float_t         fR_PSH_x;
  Float_t         fR_PSH_y;
  Int_t           fR_PSH_mult;
  Int_t           fR_PSH_nblk[6];
  Float_t         fR_PSH_eblk[6];
  Float_t         fR_PSH_trx;
  Float_t         fR_PSH_try;
  Int_t           fR_SHR_nhit;
  Float_t         fR_SHR_adc[96];
  Float_t         fR_SHR_adc_p[96];
  Float_t         fR_SHR_adc_c[96];
  Float_t         fR_SHR_asum_p;
  Float_t         fR_SHR_asum_c;
  Int_t           fR_SHR_nclust;
  Float_t         fR_SHR_e;
  Float_t         fR_SHR_x;
  Float_t         fR_SHR_y;
  Int_t           fR_SHR_mult;
  Int_t           fR_SHR_nblk[9];
  Float_t         fR_SHR_eblk[9];
  Float_t         fR_SHR_trx;
  Float_t         fR_SHR_try;
  Float_t         fR_TSH_e;
  Int_t           fR_TSH_id;
  Int_t           fL_U1_nhit;
  Int_t           fL_U1_nclust;
  Int_t           fL_V1_nhit;
  Int_t           fL_V1_nclust;
  Int_t           fL_U2_nhit;
  Int_t           fL_U2_nclust;
  Int_t           fL_V2_nhit;
  Int_t           fL_V2_nclust;
  Int_t           fL_TR_n;
  Float_t         fL_TR_x;
  Float_t         fL_TR_y;
  Float_t         fL_TR_z;
  Float_t         fL_TR_th;
  Float_t         fL_TR_ph;
  Int_t           fL_S1L_nthit;
  Float_t         fL_S1L_tdc[6];
  Float_t         fL_S1L_tdc_c[6];
  Int_t           fL_S1R_nthit;
  Float_t         fL_S1R_tdc[6];
  Float_t         fL_S1R_tdc_c[6];
  Int_t           fL_S1L_nahit;
  Float_t         fL_S1L_adc[6];
  Float_t         fL_S1L_adc_p[6];
  Float_t         fL_S1L_adc_c[6];
  Int_t           fL_S1R_nahit;
  Float_t         fL_S1R_adc[6];
  Float_t         fL_S1R_adc_p[6];
  Float_t         fL_S1R_adc_c[6];
  Float_t         fL_S1_trx;
  Float_t         fL_S1_try;
  Int_t           fL_S2L_nthit;
  Float_t         fL_S2L_tdc[6];
  Float_t         fL_S2L_tdc_c[6];
  Int_t           fL_S2R_nthit;
  Float_t         fL_S2R_tdc[6];
  Float_t         fL_S2R_tdc_c[6];
  Int_t           fL_S2L_nahit;
  Float_t         fL_S2L_adc[6];
  Float_t         fL_S2L_adc_p[6];
  Float_t         fL_S2L_adc_c[6];
  Int_t           fL_S2R_nahit;
  Float_t         fL_S2R_adc[6];
  Float_t         fL_S2R_adc_p[6];
  Float_t         fL_S2R_adc_c[6];
  Float_t         fL_S2_trx;
  Float_t         fL_S2_try;
  Int_t           fR_U1_wire[50];
  Float_t         fR_U1_time[50];
  Float_t         fR_U1_clpos[8];
  Int_t           fR_U1_clsiz[8];
  Int_t           fR_V1_wire[46];
  Float_t         fR_V1_time[46];
  Float_t         fR_V1_clpos[6];
  Int_t           fR_V1_clsiz[6];
  Int_t           fR_U2_wire[50];
  Float_t         fR_U2_time[50];
  Float_t         fR_U2_clpos[6];
  Int_t           fR_U2_clsiz[6];
  Int_t           fR_V2_wire[50];
  Float_t         fR_V2_time[50];
  Float_t         fR_V2_clpos[5];
  Int_t           fR_V2_clsiz[5];
  Int_t           fL_U1_wire[0];
  Float_t         fL_U1_time[0];
  Float_t         fL_U1_clpos[0];
  Int_t           fL_U1_clsiz[0];
  Int_t           fL_V1_wire[0];
  Float_t         fL_V1_time[0];
  Float_t         fL_V1_clpos[0];
  Int_t           fL_V1_clsiz[0];
  Int_t           fL_U2_wire[0];
  Float_t         fL_U2_time[0];
  Float_t         fL_U2_clpos[0];
  Int_t           fL_U2_clsiz[0];
  Int_t           fL_V2_wire[0];
  Float_t         fL_V2_time[0];
  Float_t         fL_V2_clpos[0];
  Int_t           fL_V2_clsiz[0];

  //List of branches
  TBranch        *b_Event_Branch;
  TBranch        *b_THaEvent;
  TBranch        *b_fB_X4a;
  TBranch        *b_fB_Y4a;
  TBranch        *b_fB_X4b;
  TBranch        *b_fB_Y4b;
  TBranch        *b_fB_Xcur;
  TBranch        *b_fB_Ycur;
  TBranch        *b_fB_Xder;
  TBranch        *b_fB_Yder;
  TBranch        *b_fR_U1_nhit;
  TBranch        *b_fR_U1_nclust;
  TBranch        *b_fR_V1_nhit;
  TBranch        *b_fR_V1_nclust;
  TBranch        *b_fR_U2_nhit;
  TBranch        *b_fR_U2_nclust;
  TBranch        *b_fR_V2_nhit;
  TBranch        *b_fR_V2_nclust;
  TBranch        *b_fR_TR_n;
  TBranch        *b_fR_TR_x;
  TBranch        *b_fR_TR_y;
  TBranch        *b_fR_TR_z;
  TBranch        *b_fR_TR_th;
  TBranch        *b_fR_TR_ph;
  TBranch        *b_fR_S1L_nthit;
  TBranch        *b_fR_S1L_tdc;
  TBranch        *b_fR_S1L_tdc_c;
  TBranch        *b_fR_S1R_nthit;
  TBranch        *b_fR_S1R_tdc;
  TBranch        *b_fR_S1R_tdc_c;
  TBranch        *b_fR_S1L_nahit;
  TBranch        *b_fR_S1L_adc;
  TBranch        *b_fR_S1L_adc_p;
  TBranch        *b_fR_S1L_adc_c;
  TBranch        *b_fR_S1R_nahit;
  TBranch        *b_fR_S1R_adc;
  TBranch        *b_fR_S1R_adc_p;
  TBranch        *b_fR_S1R_adc_c;
  TBranch        *b_fR_S1_trx;
  TBranch        *b_fR_S1_try;
  TBranch        *b_fR_S2L_nthit;
  TBranch        *b_fR_S2L_tdc;
  TBranch        *b_fR_S2L_tdc_c;
  TBranch        *b_fR_S2R_nthit;
  TBranch        *b_fR_S2R_tdc;
  TBranch        *b_fR_S2R_tdc_c;
  TBranch        *b_fR_S2L_nahit;
  TBranch        *b_fR_S2L_adc;
  TBranch        *b_fR_S2L_adc_p;
  TBranch        *b_fR_S2L_adc_c;
  TBranch        *b_fR_S2R_nahit;
  TBranch        *b_fR_S2R_adc;
  TBranch        *b_fR_S2R_adc_p;
  TBranch        *b_fR_S2R_adc_c;
  TBranch        *b_fR_S2_trx;
  TBranch        *b_fR_S2_try;
  TBranch        *b_fR_AR_nthit;
  TBranch        *b_fR_AR_tdc;
  TBranch        *b_fR_AR_tdc_c;
  TBranch        *b_fR_AR_nahit;
  TBranch        *b_fR_AR_adc;
  TBranch        *b_fR_AR_adc_p;
  TBranch        *b_fR_AR_adc_c;
  TBranch        *b_fR_AR_asum_p;
  TBranch        *b_fR_AR_asum_c;
  TBranch        *b_fR_AR_trx;
  TBranch        *b_fR_AR_try;
  TBranch        *b_fR_CH_nthit;
  TBranch        *b_fR_CH_tdc;
  TBranch        *b_fR_CH_tdc_c;
  TBranch        *b_fR_CH_nahit;
  TBranch        *b_fR_CH_adc;
  TBranch        *b_fR_CH_adc_p;
  TBranch        *b_fR_CH_adc_c;
  TBranch        *b_fR_CH_asum_p;
  TBranch        *b_fR_CH_asum_c;
  TBranch        *b_fR_CH_trx;
  TBranch        *b_fR_CH_try;
  TBranch        *b_fR_PSH_nhit;
  TBranch        *b_fR_PSH_adc;
  TBranch        *b_fR_PSH_adc_p;
  TBranch        *b_fR_PSH_adc_c;
  TBranch        *b_fR_PSH_asum_p;
  TBranch        *b_fR_PSH_asum_c;
  TBranch        *b_fR_PSH_nclust;
  TBranch        *b_fR_PSH_e;
  TBranch        *b_fR_PSH_x;
  TBranch        *b_fR_PSH_y;
  TBranch        *b_fR_PSH_mult;
  TBranch        *b_fR_PSH_nblk;
  TBranch        *b_fR_PSH_eblk;
  TBranch        *b_fR_PSH_trx;
  TBranch        *b_fR_PSH_try;
  TBranch        *b_fR_SHR_nhit;
  TBranch        *b_fR_SHR_adc;
  TBranch        *b_fR_SHR_adc_p;
  TBranch        *b_fR_SHR_adc_c;
  TBranch        *b_fR_SHR_asum_p;
  TBranch        *b_fR_SHR_asum_c;
  TBranch        *b_fR_SHR_nclust;
  TBranch        *b_fR_SHR_e;
  TBranch        *b_fR_SHR_x;
  TBranch        *b_fR_SHR_y;
  TBranch        *b_fR_SHR_mult;
  TBranch        *b_fR_SHR_nblk;
  TBranch        *b_fR_SHR_eblk;
  TBranch        *b_fR_SHR_trx;
  TBranch        *b_fR_SHR_try;
  TBranch        *b_fR_TSH_e;
  TBranch        *b_fR_TSH_id;
  TBranch        *b_fL_U1_nhit;
  TBranch        *b_fL_U1_nclust;
  TBranch        *b_fL_V1_nhit;
  TBranch        *b_fL_V1_nclust;
  TBranch        *b_fL_U2_nhit;
  TBranch        *b_fL_U2_nclust;
  TBranch        *b_fL_V2_nhit;
  TBranch        *b_fL_V2_nclust;
  TBranch        *b_fL_TR_n;
  TBranch        *b_fL_TR_x;
  TBranch        *b_fL_TR_y;
  TBranch        *b_fL_TR_z;
  TBranch        *b_fL_TR_th;
  TBranch        *b_fL_TR_ph;
  TBranch        *b_fL_S1L_nthit;
  TBranch        *b_fL_S1L_tdc;
  TBranch        *b_fL_S1L_tdc_c;
  TBranch        *b_fL_S1R_nthit;
  TBranch        *b_fL_S1R_tdc;
  TBranch        *b_fL_S1R_tdc_c;
  TBranch        *b_fL_S1L_nahit;
  TBranch        *b_fL_S1L_adc;
  TBranch        *b_fL_S1L_adc_p;
  TBranch        *b_fL_S1L_adc_c;
  TBranch        *b_fL_S1R_nahit;
  TBranch        *b_fL_S1R_adc;
  TBranch        *b_fL_S1R_adc_p;
  TBranch        *b_fL_S1R_adc_c;
  TBranch        *b_fL_S1_trx;
  TBranch        *b_fL_S1_try;
  TBranch        *b_fL_S2L_nthit;
  TBranch        *b_fL_S2L_tdc;
  TBranch        *b_fL_S2L_tdc_c;
  TBranch        *b_fL_S2R_nthit;
  TBranch        *b_fL_S2R_tdc;
  TBranch        *b_fL_S2R_tdc_c;
  TBranch        *b_fL_S2L_nahit;
  TBranch        *b_fL_S2L_adc;
  TBranch        *b_fL_S2L_adc_p;
  TBranch        *b_fL_S2L_adc_c;
  TBranch        *b_fL_S2R_nahit;
  TBranch        *b_fL_S2R_adc;
  TBranch        *b_fL_S2R_adc_p;
  TBranch        *b_fL_S2R_adc_c;
  TBranch        *b_fL_S2_trx;
  TBranch        *b_fL_S2_try;
  TBranch        *b_fR_U1_wire;
  TBranch        *b_fR_U1_time;
  TBranch        *b_fR_U1_clpos;
  TBranch        *b_fR_U1_clsiz;
  TBranch        *b_fR_V1_wire;
  TBranch        *b_fR_V1_time;
  TBranch        *b_fR_V1_clpos;
  TBranch        *b_fR_V1_clsiz;
  TBranch        *b_fR_U2_wire;
  TBranch        *b_fR_U2_time;
  TBranch        *b_fR_U2_clpos;
  TBranch        *b_fR_U2_clsiz;
  TBranch        *b_fR_V2_wire;
  TBranch        *b_fR_V2_time;
  TBranch        *b_fR_V2_clpos;
  TBranch        *b_fR_V2_clsiz;
  TBranch        *b_fL_U1_wire;
  TBranch        *b_fL_U1_time;
  TBranch        *b_fL_U1_clpos;
  TBranch        *b_fL_U1_clsiz;
  TBranch        *b_fL_V1_wire;
  TBranch        *b_fL_V1_time;
  TBranch        *b_fL_V1_clpos;
  TBranch        *b_fL_V1_clsiz;
  TBranch        *b_fL_U2_wire;
  TBranch        *b_fL_U2_time;
  TBranch        *b_fL_U2_clpos;
  TBranch        *b_fL_U2_clsiz;
  TBranch        *b_fL_V2_wire;
  TBranch        *b_fL_V2_time;
  TBranch        *b_fL_V2_clpos;
  TBranch        *b_fL_V2_clsiz;

  demo_VDC(TTree *tree=0);
  ~demo_VDC();
  Int_t  Cut(Int_t entry);
  Int_t  GetEntry(Int_t entry);
  Int_t  LoadTree(Int_t entry);
  void   Init(TTree *tree);
  void   Loop();
  Bool_t Notify();
  void   Show(Int_t entry = -1);
};

#endif

#ifdef demo_VDC_cxx
demo_VDC::demo_VDC(TTree *tree)
{
  // if parameter tree is not specified (or zero), connect the file
  // used to generate this class and read the Tree.
  if (tree == 0) {
    TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("Afile.root");
    if (!f) {
      f = new TFile("Afile.root");
    }
    tree = (TTree*)gDirectory->Get("T");

  }
  Init(tree);
}

demo_VDC::~demo_VDC()
{
  if (!fChain) return;
  delete fChain->GetCurrentFile();
}

Int_t demo_VDC::GetEntry(Int_t entry)
{
  // Read contents of entry.
  if (!fChain) return 0;
  return fChain->GetEntry(entry);
}
Int_t demo_VDC::LoadTree(Int_t entry)
{
  // Set the environment to read one entry
  if (!fChain) return -5;
  Int_t centry = fChain->LoadTree(entry);
  if (centry < 0) return centry;
  if (fChain->IsA() != TChain::Class()) return centry;
  TChain *chain = (TChain*)fChain;
  if (chain->GetTreeNumber() != fCurrent) {
    fCurrent = chain->GetTreeNumber();
    Notify();
  }
  return centry;
}

void demo_VDC::Init(TTree *tree)
{
  //   Set branch addresses
  if (tree == 0) return;
  fChain    = tree;
  fCurrent = -1;
  fChain->SetMakeClass(1);

  //fChain->SetBranchAddress("Event Branch",&Event Branch);
  fChain->SetBranchAddress("fB_X4a[6]",&fB_X4a);
  fChain->SetBranchAddress("fB_Y4a[6]",&fB_Y4a);
  fChain->SetBranchAddress("fB_X4b[6]",&fB_X4b);
  fChain->SetBranchAddress("fB_Y4b[6]",&fB_Y4b);
  fChain->SetBranchAddress("fB_Xcur",&fB_Xcur);
  fChain->SetBranchAddress("fB_Ycur",&fB_Ycur);
  fChain->SetBranchAddress("fB_Xder",&fB_Xder);
  fChain->SetBranchAddress("fB_Yder",&fB_Yder);
  fChain->SetBranchAddress("fR_U1_nhit",&fR_U1_nhit);
  fChain->SetBranchAddress("fR_U1_nclust",&fR_U1_nclust);
  fChain->SetBranchAddress("fR_V1_nhit",&fR_V1_nhit);
  fChain->SetBranchAddress("fR_V1_nclust",&fR_V1_nclust);
  fChain->SetBranchAddress("fR_U2_nhit",&fR_U2_nhit);
  fChain->SetBranchAddress("fR_U2_nclust",&fR_U2_nclust);
  fChain->SetBranchAddress("fR_V2_nhit",&fR_V2_nhit);
  fChain->SetBranchAddress("fR_V2_nclust",&fR_V2_nclust);
  fChain->SetBranchAddress("fR_TR_n",&fR_TR_n);
  fChain->SetBranchAddress("fR_TR_x",&fR_TR_x);
  fChain->SetBranchAddress("fR_TR_y",&fR_TR_y);
  fChain->SetBranchAddress("fR_TR_z",&fR_TR_z);
  fChain->SetBranchAddress("fR_TR_th",&fR_TR_th);
  fChain->SetBranchAddress("fR_TR_ph",&fR_TR_ph);
  fChain->SetBranchAddress("fR_S1L_nthit",&fR_S1L_nthit);
  fChain->SetBranchAddress("fR_S1L_tdc[6]",&fR_S1L_tdc);
  fChain->SetBranchAddress("fR_S1L_tdc_c[6]",&fR_S1L_tdc_c);
  fChain->SetBranchAddress("fR_S1R_nthit",&fR_S1R_nthit);
  fChain->SetBranchAddress("fR_S1R_tdc[6]",&fR_S1R_tdc);
  fChain->SetBranchAddress("fR_S1R_tdc_c[6]",&fR_S1R_tdc_c);
  fChain->SetBranchAddress("fR_S1L_nahit",&fR_S1L_nahit);
  fChain->SetBranchAddress("fR_S1L_adc[6]",&fR_S1L_adc);
  fChain->SetBranchAddress("fR_S1L_adc_p[6]",&fR_S1L_adc_p);
  fChain->SetBranchAddress("fR_S1L_adc_c[6]",&fR_S1L_adc_c);
  fChain->SetBranchAddress("fR_S1R_nahit",&fR_S1R_nahit);
  fChain->SetBranchAddress("fR_S1R_adc[6]",&fR_S1R_adc);
  fChain->SetBranchAddress("fR_S1R_adc_p[6]",&fR_S1R_adc_p);
  fChain->SetBranchAddress("fR_S1R_adc_c[6]",&fR_S1R_adc_c);
  fChain->SetBranchAddress("fR_S1_trx",&fR_S1_trx);
  fChain->SetBranchAddress("fR_S1_try",&fR_S1_try);
  fChain->SetBranchAddress("fR_S2L_nthit",&fR_S2L_nthit);
  fChain->SetBranchAddress("fR_S2L_tdc[6]",&fR_S2L_tdc);
  fChain->SetBranchAddress("fR_S2L_tdc_c[6]",&fR_S2L_tdc_c);
  fChain->SetBranchAddress("fR_S2R_nthit",&fR_S2R_nthit);
  fChain->SetBranchAddress("fR_S2R_tdc[6]",&fR_S2R_tdc);
  fChain->SetBranchAddress("fR_S2R_tdc_c[6]",&fR_S2R_tdc_c);
  fChain->SetBranchAddress("fR_S2L_nahit",&fR_S2L_nahit);
  fChain->SetBranchAddress("fR_S2L_adc[6]",&fR_S2L_adc);
  fChain->SetBranchAddress("fR_S2L_adc_p[6]",&fR_S2L_adc_p);
  fChain->SetBranchAddress("fR_S2L_adc_c[6]",&fR_S2L_adc_c);
  fChain->SetBranchAddress("fR_S2R_nahit",&fR_S2R_nahit);
  fChain->SetBranchAddress("fR_S2R_adc[6]",&fR_S2R_adc);
  fChain->SetBranchAddress("fR_S2R_adc_p[6]",&fR_S2R_adc_p);
  fChain->SetBranchAddress("fR_S2R_adc_c[6]",&fR_S2R_adc_c);
  fChain->SetBranchAddress("fR_S2_trx",&fR_S2_trx);
  fChain->SetBranchAddress("fR_S2_try",&fR_S2_try);
  fChain->SetBranchAddress("fR_AR_nthit",&fR_AR_nthit);
  fChain->SetBranchAddress("fR_AR_tdc[26]",&fR_AR_tdc);
  fChain->SetBranchAddress("fR_AR_tdc_c[26]",&fR_AR_tdc_c);
  fChain->SetBranchAddress("fR_AR_nahit",&fR_AR_nahit);
  fChain->SetBranchAddress("fR_AR_adc[26]",&fR_AR_adc);
  fChain->SetBranchAddress("fR_AR_adc_p[26]",&fR_AR_adc_p);
  fChain->SetBranchAddress("fR_AR_adc_c[26]",&fR_AR_adc_c);
  fChain->SetBranchAddress("fR_AR_asum_p",&fR_AR_asum_p);
  fChain->SetBranchAddress("fR_AR_asum_c",&fR_AR_asum_c);
  fChain->SetBranchAddress("fR_AR_trx",&fR_AR_trx);
  fChain->SetBranchAddress("fR_AR_try",&fR_AR_try);
  fChain->SetBranchAddress("fR_CH_nthit",&fR_CH_nthit);
  fChain->SetBranchAddress("fR_CH_tdc[10]",&fR_CH_tdc);
  fChain->SetBranchAddress("fR_CH_tdc_c[10]",&fR_CH_tdc_c);
  fChain->SetBranchAddress("fR_CH_nahit",&fR_CH_nahit);
  fChain->SetBranchAddress("fR_CH_adc[10]",&fR_CH_adc);
  fChain->SetBranchAddress("fR_CH_adc_p[10]",&fR_CH_adc_p);
  fChain->SetBranchAddress("fR_CH_adc_c[10]",&fR_CH_adc_c);
  fChain->SetBranchAddress("fR_CH_asum_p",&fR_CH_asum_p);
  fChain->SetBranchAddress("fR_CH_asum_c",&fR_CH_asum_c);
  fChain->SetBranchAddress("fR_CH_trx",&fR_CH_trx);
  fChain->SetBranchAddress("fR_CH_try",&fR_CH_try);
  fChain->SetBranchAddress("fR_PSH_nhit",&fR_PSH_nhit);
  fChain->SetBranchAddress("fR_PSH_adc[48]",&fR_PSH_adc);
  fChain->SetBranchAddress("fR_PSH_adc_p[48]",&fR_PSH_adc_p);
  fChain->SetBranchAddress("fR_PSH_adc_c[48]",&fR_PSH_adc_c);
  fChain->SetBranchAddress("fR_PSH_asum_p",&fR_PSH_asum_p);
  fChain->SetBranchAddress("fR_PSH_asum_c",&fR_PSH_asum_c);
  fChain->SetBranchAddress("fR_PSH_nclust",&fR_PSH_nclust);
  fChain->SetBranchAddress("fR_PSH_e",&fR_PSH_e);
  fChain->SetBranchAddress("fR_PSH_x",&fR_PSH_x);
  fChain->SetBranchAddress("fR_PSH_y",&fR_PSH_y);
  fChain->SetBranchAddress("fR_PSH_mult",&fR_PSH_mult);
  fChain->SetBranchAddress("fR_PSH_nblk[6]",&fR_PSH_nblk);
  fChain->SetBranchAddress("fR_PSH_eblk[6]",&fR_PSH_eblk);
  fChain->SetBranchAddress("fR_PSH_trx",&fR_PSH_trx);
  fChain->SetBranchAddress("fR_PSH_try",&fR_PSH_try);
  fChain->SetBranchAddress("fR_SHR_nhit",&fR_SHR_nhit);
  fChain->SetBranchAddress("fR_SHR_adc[96]",&fR_SHR_adc);
  fChain->SetBranchAddress("fR_SHR_adc_p[96]",&fR_SHR_adc_p);
  fChain->SetBranchAddress("fR_SHR_adc_c[96]",&fR_SHR_adc_c);
  fChain->SetBranchAddress("fR_SHR_asum_p",&fR_SHR_asum_p);
  fChain->SetBranchAddress("fR_SHR_asum_c",&fR_SHR_asum_c);
  fChain->SetBranchAddress("fR_SHR_nclust",&fR_SHR_nclust);
  fChain->SetBranchAddress("fR_SHR_e",&fR_SHR_e);
  fChain->SetBranchAddress("fR_SHR_x",&fR_SHR_x);
  fChain->SetBranchAddress("fR_SHR_y",&fR_SHR_y);
  fChain->SetBranchAddress("fR_SHR_mult",&fR_SHR_mult);
  fChain->SetBranchAddress("fR_SHR_nblk[9]",&fR_SHR_nblk);
  fChain->SetBranchAddress("fR_SHR_eblk[9]",&fR_SHR_eblk);
  fChain->SetBranchAddress("fR_SHR_trx",&fR_SHR_trx);
  fChain->SetBranchAddress("fR_SHR_try",&fR_SHR_try);
  fChain->SetBranchAddress("fR_TSH_e",&fR_TSH_e);
  fChain->SetBranchAddress("fR_TSH_id",&fR_TSH_id);
  fChain->SetBranchAddress("fL_U1_nhit",&fL_U1_nhit);
  fChain->SetBranchAddress("fL_U1_nclust",&fL_U1_nclust);
  fChain->SetBranchAddress("fL_V1_nhit",&fL_V1_nhit);
  fChain->SetBranchAddress("fL_V1_nclust",&fL_V1_nclust);
  fChain->SetBranchAddress("fL_U2_nhit",&fL_U2_nhit);
  fChain->SetBranchAddress("fL_U2_nclust",&fL_U2_nclust);
  fChain->SetBranchAddress("fL_V2_nhit",&fL_V2_nhit);
  fChain->SetBranchAddress("fL_V2_nclust",&fL_V2_nclust);
  fChain->SetBranchAddress("fL_TR_n",&fL_TR_n);
  fChain->SetBranchAddress("fL_TR_x",&fL_TR_x);
  fChain->SetBranchAddress("fL_TR_y",&fL_TR_y);
  fChain->SetBranchAddress("fL_TR_z",&fL_TR_z);
  fChain->SetBranchAddress("fL_TR_th",&fL_TR_th);
  fChain->SetBranchAddress("fL_TR_ph",&fL_TR_ph);
  fChain->SetBranchAddress("fL_S1L_nthit",&fL_S1L_nthit);
  fChain->SetBranchAddress("fL_S1L_tdc[6]",fL_S1L_tdc);
  fChain->SetBranchAddress("fL_S1L_tdc_c[6]",fL_S1L_tdc_c);
  fChain->SetBranchAddress("fL_S1R_nthit",&fL_S1R_nthit);
  fChain->SetBranchAddress("fL_S1R_tdc[6]",&fL_S1R_tdc);
  fChain->SetBranchAddress("fL_S1R_tdc_c[6]",&fL_S1R_tdc_c);
  fChain->SetBranchAddress("fL_S1L_nahit",&fL_S1L_nahit);
  fChain->SetBranchAddress("fL_S1L_adc[6]",&fL_S1L_adc);
  fChain->SetBranchAddress("fL_S1L_adc_p[6]",&fL_S1L_adc_p);
  fChain->SetBranchAddress("fL_S1L_adc_c[6]",&fL_S1L_adc_c);
  fChain->SetBranchAddress("fL_S1R_nahit",&fL_S1R_nahit);
  fChain->SetBranchAddress("fL_S1R_adc[6]",&fL_S1R_adc);
  fChain->SetBranchAddress("fL_S1R_adc_p[6]",&fL_S1R_adc_p);
  fChain->SetBranchAddress("fL_S1R_adc_c[6]",&fL_S1R_adc_c);
  fChain->SetBranchAddress("fL_S1_trx",&fL_S1_trx);
  fChain->SetBranchAddress("fL_S1_try",&fL_S1_try);
  fChain->SetBranchAddress("fL_S2L_nthit",&fL_S2L_nthit);
  fChain->SetBranchAddress("fL_S2L_tdc[6]",&fL_S2L_tdc);
  fChain->SetBranchAddress("fL_S2L_tdc_c[6]",&fL_S2L_tdc_c);
  fChain->SetBranchAddress("fL_S2R_nthit",&fL_S2R_nthit);
  fChain->SetBranchAddress("fL_S2R_tdc[6]",&fL_S2R_tdc);
  fChain->SetBranchAddress("fL_S2R_tdc_c[6]",&fL_S2R_tdc_c);
  fChain->SetBranchAddress("fL_S2L_nahit",&fL_S2L_nahit);
  fChain->SetBranchAddress("fL_S2L_adc[6]",&fL_S2L_adc);
  fChain->SetBranchAddress("fL_S2L_adc_p[6]",&fL_S2L_adc_p);
  fChain->SetBranchAddress("fL_S2L_adc_c[6]",&fL_S2L_adc_c);
  fChain->SetBranchAddress("fL_S2R_nahit",&fL_S2R_nahit);
  fChain->SetBranchAddress("fL_S2R_adc[6]",&fL_S2R_adc);
  fChain->SetBranchAddress("fL_S2R_adc_p[6]",&fL_S2R_adc_p);
  fChain->SetBranchAddress("fL_S2R_adc_c[6]",&fL_S2R_adc_c);
  fChain->SetBranchAddress("fL_S2_trx",&fL_S2_trx);
  fChain->SetBranchAddress("fL_S2_try",&fL_S2_try);
  fChain->SetBranchAddress("fR_U1_wire",fR_U1_wire);
  fChain->SetBranchAddress("fR_U1_time",fR_U1_time);
  fChain->SetBranchAddress("fR_U1_clpos",fR_U1_clpos);
  fChain->SetBranchAddress("fR_U1_clsiz",fR_U1_clsiz);
  fChain->SetBranchAddress("fR_V1_wire",fR_V1_wire);
  fChain->SetBranchAddress("fR_V1_time",fR_V1_time);
  fChain->SetBranchAddress("fR_V1_clpos",fR_V1_clpos);
  fChain->SetBranchAddress("fR_V1_clsiz",fR_V1_clsiz);
  fChain->SetBranchAddress("fR_U2_wire",fR_U2_wire);
  fChain->SetBranchAddress("fR_U2_time",fR_U2_time);
  fChain->SetBranchAddress("fR_U2_clpos",fR_U2_clpos);
  fChain->SetBranchAddress("fR_U2_clsiz",fR_U2_clsiz);
  fChain->SetBranchAddress("fR_V2_wire",fR_V2_wire);
  fChain->SetBranchAddress("fR_V2_time",fR_V2_time);
  fChain->SetBranchAddress("fR_V2_clpos",fR_V2_clpos);
  fChain->SetBranchAddress("fR_V2_clsiz",fR_V2_clsiz);
  fChain->SetBranchAddress("fL_U1_wire",&fL_U1_wire);
  fChain->SetBranchAddress("fL_U1_time",&fL_U1_time);
  fChain->SetBranchAddress("fL_U1_clpos",&fL_U1_clpos);
  fChain->SetBranchAddress("fL_U1_clsiz",&fL_U1_clsiz);
  fChain->SetBranchAddress("fL_V1_wire",&fL_V1_wire);
  fChain->SetBranchAddress("fL_V1_time",&fL_V1_time);
  fChain->SetBranchAddress("fL_V1_clpos",&fL_V1_clpos);
  fChain->SetBranchAddress("fL_V1_clsiz",&fL_V1_clsiz);
  fChain->SetBranchAddress("fL_U2_wire",&fL_U2_wire);
  fChain->SetBranchAddress("fL_U2_time",&fL_U2_time);
  fChain->SetBranchAddress("fL_U2_clpos",&fL_U2_clpos);
  fChain->SetBranchAddress("fL_U2_clsiz",&fL_U2_clsiz);
  fChain->SetBranchAddress("fL_V2_wire",&fL_V2_wire);
  fChain->SetBranchAddress("fL_V2_time",&fL_V2_time);
  fChain->SetBranchAddress("fL_V2_clpos",&fL_V2_clpos);
  fChain->SetBranchAddress("fL_V2_clsiz",&fL_V2_clsiz);
  Notify();
}

Bool_t demo_VDC::Notify()
{
  //   called when loading a new file
  //   get branch pointers
  //  b_Event_Branch = fChain->GetBranch("Event Branch");
  b_THaEvent = fChain->GetBranch("THaEvent");
  b_fB_X4a = fChain->GetBranch("fB_X4a[6]");
  b_fB_Y4a = fChain->GetBranch("fB_Y4a[6]");
  b_fB_X4b = fChain->GetBranch("fB_X4b[6]");
  b_fB_Y4b = fChain->GetBranch("fB_Y4b[6]");
  b_fB_Xcur = fChain->GetBranch("fB_Xcur");
  b_fB_Ycur = fChain->GetBranch("fB_Ycur");
  b_fB_Xder = fChain->GetBranch("fB_Xder");
  b_fB_Yder = fChain->GetBranch("fB_Yder");
  b_fR_U1_nhit = fChain->GetBranch("fR_U1_nhit");
  b_fR_U1_nclust = fChain->GetBranch("fR_U1_nclust");
  b_fR_V1_nhit = fChain->GetBranch("fR_V1_nhit");
  b_fR_V1_nclust = fChain->GetBranch("fR_V1_nclust");
  b_fR_U2_nhit = fChain->GetBranch("fR_U2_nhit");
  b_fR_U2_nclust = fChain->GetBranch("fR_U2_nclust");
  b_fR_V2_nhit = fChain->GetBranch("fR_V2_nhit");
  b_fR_V2_nclust = fChain->GetBranch("fR_V2_nclust");
  b_fR_TR_n = fChain->GetBranch("fR_TR_n");
  b_fR_TR_x = fChain->GetBranch("fR_TR_x");
  b_fR_TR_y = fChain->GetBranch("fR_TR_y");
  b_fR_TR_z = fChain->GetBranch("fR_TR_z");
  b_fR_TR_th = fChain->GetBranch("fR_TR_th");
  b_fR_TR_ph = fChain->GetBranch("fR_TR_ph");
  b_fR_S1L_nthit = fChain->GetBranch("fR_S1L_nthit");
  b_fR_S1L_tdc = fChain->GetBranch("fR_S1L_tdc[6]");
  b_fR_S1L_tdc_c = fChain->GetBranch("fR_S1L_tdc_c[6]");
  b_fR_S1R_nthit = fChain->GetBranch("fR_S1R_nthit");
  b_fR_S1R_tdc = fChain->GetBranch("fR_S1R_tdc[6]");
  b_fR_S1R_tdc_c = fChain->GetBranch("fR_S1R_tdc_c[6]");
  b_fR_S1L_nahit = fChain->GetBranch("fR_S1L_nahit");
  b_fR_S1L_adc = fChain->GetBranch("fR_S1L_adc[6]");
  b_fR_S1L_adc_p = fChain->GetBranch("fR_S1L_adc_p[6]");
  b_fR_S1L_adc_c = fChain->GetBranch("fR_S1L_adc_c[6]");
  b_fR_S1R_nahit = fChain->GetBranch("fR_S1R_nahit");
  b_fR_S1R_adc = fChain->GetBranch("fR_S1R_adc[6]");
  b_fR_S1R_adc_p = fChain->GetBranch("fR_S1R_adc_p[6]");
  b_fR_S1R_adc_c = fChain->GetBranch("fR_S1R_adc_c[6]");
  b_fR_S1_trx = fChain->GetBranch("fR_S1_trx");
  b_fR_S1_try = fChain->GetBranch("fR_S1_try");
  b_fR_S2L_nthit = fChain->GetBranch("fR_S2L_nthit");
  b_fR_S2L_tdc = fChain->GetBranch("fR_S2L_tdc[6]");
  b_fR_S2L_tdc_c = fChain->GetBranch("fR_S2L_tdc_c[6]");
  b_fR_S2R_nthit = fChain->GetBranch("fR_S2R_nthit");
  b_fR_S2R_tdc = fChain->GetBranch("fR_S2R_tdc[6]");
  b_fR_S2R_tdc_c = fChain->GetBranch("fR_S2R_tdc_c[6]");
  b_fR_S2L_nahit = fChain->GetBranch("fR_S2L_nahit");
  b_fR_S2L_adc = fChain->GetBranch("fR_S2L_adc[6]");
  b_fR_S2L_adc_p = fChain->GetBranch("fR_S2L_adc_p[6]");
  b_fR_S2L_adc_c = fChain->GetBranch("fR_S2L_adc_c[6]");
  b_fR_S2R_nahit = fChain->GetBranch("fR_S2R_nahit");
  b_fR_S2R_adc = fChain->GetBranch("fR_S2R_adc[6]");
  b_fR_S2R_adc_p = fChain->GetBranch("fR_S2R_adc_p[6]");
  b_fR_S2R_adc_c = fChain->GetBranch("fR_S2R_adc_c[6]");
  b_fR_S2_trx = fChain->GetBranch("fR_S2_trx");
  b_fR_S2_try = fChain->GetBranch("fR_S2_try");
  b_fR_AR_nthit = fChain->GetBranch("fR_AR_nthit");
  b_fR_AR_tdc = fChain->GetBranch("fR_AR_tdc[26]");
  b_fR_AR_tdc_c = fChain->GetBranch("fR_AR_tdc_c[26]");
  b_fR_AR_nahit = fChain->GetBranch("fR_AR_nahit");
  b_fR_AR_adc = fChain->GetBranch("fR_AR_adc[26]");
  b_fR_AR_adc_p = fChain->GetBranch("fR_AR_adc_p[26]");
  b_fR_AR_adc_c = fChain->GetBranch("fR_AR_adc_c[26]");
  b_fR_AR_asum_p = fChain->GetBranch("fR_AR_asum_p");
  b_fR_AR_asum_c = fChain->GetBranch("fR_AR_asum_c");
  b_fR_AR_trx = fChain->GetBranch("fR_AR_trx");
  b_fR_AR_try = fChain->GetBranch("fR_AR_try");
  b_fR_CH_nthit = fChain->GetBranch("fR_CH_nthit");
  b_fR_CH_tdc = fChain->GetBranch("fR_CH_tdc[10]");
  b_fR_CH_tdc_c = fChain->GetBranch("fR_CH_tdc_c[10]");
  b_fR_CH_nahit = fChain->GetBranch("fR_CH_nahit");
  b_fR_CH_adc = fChain->GetBranch("fR_CH_adc[10]");
  b_fR_CH_adc_p = fChain->GetBranch("fR_CH_adc_p[10]");
  b_fR_CH_adc_c = fChain->GetBranch("fR_CH_adc_c[10]");
  b_fR_CH_asum_p = fChain->GetBranch("fR_CH_asum_p");
  b_fR_CH_asum_c = fChain->GetBranch("fR_CH_asum_c");
  b_fR_CH_trx = fChain->GetBranch("fR_CH_trx");
  b_fR_CH_try = fChain->GetBranch("fR_CH_try");
  b_fR_PSH_nhit = fChain->GetBranch("fR_PSH_nhit");
  b_fR_PSH_adc = fChain->GetBranch("fR_PSH_adc[48]");
  b_fR_PSH_adc_p = fChain->GetBranch("fR_PSH_adc_p[48]");
  b_fR_PSH_adc_c = fChain->GetBranch("fR_PSH_adc_c[48]");
  b_fR_PSH_asum_p = fChain->GetBranch("fR_PSH_asum_p");
  b_fR_PSH_asum_c = fChain->GetBranch("fR_PSH_asum_c");
  b_fR_PSH_nclust = fChain->GetBranch("fR_PSH_nclust");
  b_fR_PSH_e = fChain->GetBranch("fR_PSH_e");
  b_fR_PSH_x = fChain->GetBranch("fR_PSH_x");
  b_fR_PSH_y = fChain->GetBranch("fR_PSH_y");
  b_fR_PSH_mult = fChain->GetBranch("fR_PSH_mult");
  b_fR_PSH_nblk = fChain->GetBranch("fR_PSH_nblk[6]");
  b_fR_PSH_eblk = fChain->GetBranch("fR_PSH_eblk[6]");
  b_fR_PSH_trx = fChain->GetBranch("fR_PSH_trx");
  b_fR_PSH_try = fChain->GetBranch("fR_PSH_try");
  b_fR_SHR_nhit = fChain->GetBranch("fR_SHR_nhit");
  b_fR_SHR_adc = fChain->GetBranch("fR_SHR_adc[96]");
  b_fR_SHR_adc_p = fChain->GetBranch("fR_SHR_adc_p[96]");
  b_fR_SHR_adc_c = fChain->GetBranch("fR_SHR_adc_c[96]");
  b_fR_SHR_asum_p = fChain->GetBranch("fR_SHR_asum_p");
  b_fR_SHR_asum_c = fChain->GetBranch("fR_SHR_asum_c");
  b_fR_SHR_nclust = fChain->GetBranch("fR_SHR_nclust");
  b_fR_SHR_e = fChain->GetBranch("fR_SHR_e");
  b_fR_SHR_x = fChain->GetBranch("fR_SHR_x");
  b_fR_SHR_y = fChain->GetBranch("fR_SHR_y");
  b_fR_SHR_mult = fChain->GetBranch("fR_SHR_mult");
  b_fR_SHR_nblk = fChain->GetBranch("fR_SHR_nblk[9]");
  b_fR_SHR_eblk = fChain->GetBranch("fR_SHR_eblk[9]");
  b_fR_SHR_trx = fChain->GetBranch("fR_SHR_trx");
  b_fR_SHR_try = fChain->GetBranch("fR_SHR_try");
  b_fR_TSH_e = fChain->GetBranch("fR_TSH_e");
  b_fR_TSH_id = fChain->GetBranch("fR_TSH_id");
  b_fL_U1_nhit = fChain->GetBranch("fL_U1_nhit");
  b_fL_U1_nclust = fChain->GetBranch("fL_U1_nclust");
  b_fL_V1_nhit = fChain->GetBranch("fL_V1_nhit");
  b_fL_V1_nclust = fChain->GetBranch("fL_V1_nclust");
  b_fL_U2_nhit = fChain->GetBranch("fL_U2_nhit");
  b_fL_U2_nclust = fChain->GetBranch("fL_U2_nclust");
  b_fL_V2_nhit = fChain->GetBranch("fL_V2_nhit");
  b_fL_V2_nclust = fChain->GetBranch("fL_V2_nclust");
  b_fL_TR_n = fChain->GetBranch("fL_TR_n");
  b_fL_TR_x = fChain->GetBranch("fL_TR_x");
  b_fL_TR_y = fChain->GetBranch("fL_TR_y");
  b_fL_TR_z = fChain->GetBranch("fL_TR_z");
  b_fL_TR_th = fChain->GetBranch("fL_TR_th");
  b_fL_TR_ph = fChain->GetBranch("fL_TR_ph");
  b_fL_S1L_nthit = fChain->GetBranch("fL_S1L_nthit");
  b_fL_S1L_tdc = fChain->GetBranch("fL_S1L_tdc[6]");
  b_fL_S1L_tdc_c = fChain->GetBranch("fL_S1L_tdc_c[6]");
  b_fL_S1R_nthit = fChain->GetBranch("fL_S1R_nthit");
  b_fL_S1R_tdc = fChain->GetBranch("fL_S1R_tdc[6]");
  b_fL_S1R_tdc_c = fChain->GetBranch("fL_S1R_tdc_c[6]");
  b_fL_S1L_nahit = fChain->GetBranch("fL_S1L_nahit");
  b_fL_S1L_adc = fChain->GetBranch("fL_S1L_adc[6]");
  b_fL_S1L_adc_p = fChain->GetBranch("fL_S1L_adc_p[6]");
  b_fL_S1L_adc_c = fChain->GetBranch("fL_S1L_adc_c[6]");
  b_fL_S1R_nahit = fChain->GetBranch("fL_S1R_nahit");
  b_fL_S1R_adc = fChain->GetBranch("fL_S1R_adc[6]");
  b_fL_S1R_adc_p = fChain->GetBranch("fL_S1R_adc_p[6]");
  b_fL_S1R_adc_c = fChain->GetBranch("fL_S1R_adc_c[6]");
  b_fL_S1_trx = fChain->GetBranch("fL_S1_trx");
  b_fL_S1_try = fChain->GetBranch("fL_S1_try");
  b_fL_S2L_nthit = fChain->GetBranch("fL_S2L_nthit");
  b_fL_S2L_tdc = fChain->GetBranch("fL_S2L_tdc[6]");
  b_fL_S2L_tdc_c = fChain->GetBranch("fL_S2L_tdc_c[6]");
  b_fL_S2R_nthit = fChain->GetBranch("fL_S2R_nthit");
  b_fL_S2R_tdc = fChain->GetBranch("fL_S2R_tdc[6]");
  b_fL_S2R_tdc_c = fChain->GetBranch("fL_S2R_tdc_c[6]");
  b_fL_S2L_nahit = fChain->GetBranch("fL_S2L_nahit");
  b_fL_S2L_adc = fChain->GetBranch("fL_S2L_adc[6]");
  b_fL_S2L_adc_p = fChain->GetBranch("fL_S2L_adc_p[6]");
  b_fL_S2L_adc_c = fChain->GetBranch("fL_S2L_adc_c[6]");
  b_fL_S2R_nahit = fChain->GetBranch("fL_S2R_nahit");
  b_fL_S2R_adc = fChain->GetBranch("fL_S2R_adc[6]");
  b_fL_S2R_adc_p = fChain->GetBranch("fL_S2R_adc_p[6]");
  b_fL_S2R_adc_c = fChain->GetBranch("fL_S2R_adc_c[6]");
  b_fL_S2_trx = fChain->GetBranch("fL_S2_trx");
  b_fL_S2_try = fChain->GetBranch("fL_S2_try");
  b_fR_U1_wire = fChain->GetBranch("fR_U1_wire");
  b_fR_U1_time = fChain->GetBranch("fR_U1_time");
  b_fR_U1_clpos = fChain->GetBranch("fR_U1_clpos");
  b_fR_U1_clsiz = fChain->GetBranch("fR_U1_clsiz");
  b_fR_V1_wire = fChain->GetBranch("fR_V1_wire");
  b_fR_V1_time = fChain->GetBranch("fR_V1_time");
  b_fR_V1_clpos = fChain->GetBranch("fR_V1_clpos");
  b_fR_V1_clsiz = fChain->GetBranch("fR_V1_clsiz");
  b_fR_U2_wire = fChain->GetBranch("fR_U2_wire");
  b_fR_U2_time = fChain->GetBranch("fR_U2_time");
  b_fR_U2_clpos = fChain->GetBranch("fR_U2_clpos");
  b_fR_U2_clsiz = fChain->GetBranch("fR_U2_clsiz");
  b_fR_V2_wire = fChain->GetBranch("fR_V2_wire");
  b_fR_V2_time = fChain->GetBranch("fR_V2_time");
  b_fR_V2_clpos = fChain->GetBranch("fR_V2_clpos");
  b_fR_V2_clsiz = fChain->GetBranch("fR_V2_clsiz");
  b_fL_U1_wire = fChain->GetBranch("fL_U1_wire");
  b_fL_U1_time = fChain->GetBranch("fL_U1_time");
  b_fL_U1_clpos = fChain->GetBranch("fL_U1_clpos");
  b_fL_U1_clsiz = fChain->GetBranch("fL_U1_clsiz");
  b_fL_V1_wire = fChain->GetBranch("fL_V1_wire");
  b_fL_V1_time = fChain->GetBranch("fL_V1_time");
  b_fL_V1_clpos = fChain->GetBranch("fL_V1_clpos");
  b_fL_V1_clsiz = fChain->GetBranch("fL_V1_clsiz");
  b_fL_U2_wire = fChain->GetBranch("fL_U2_wire");
  b_fL_U2_time = fChain->GetBranch("fL_U2_time");
  b_fL_U2_clpos = fChain->GetBranch("fL_U2_clpos");
  b_fL_U2_clsiz = fChain->GetBranch("fL_U2_clsiz");
  b_fL_V2_wire = fChain->GetBranch("fL_V2_wire");
  b_fL_V2_time = fChain->GetBranch("fL_V2_time");
  b_fL_V2_clpos = fChain->GetBranch("fL_V2_clpos");
  b_fL_V2_clsiz = fChain->GetBranch("fL_V2_clsiz");
  return kTRUE;
}

void demo_VDC::Show(Int_t entry)
{
  // Print contents of entry.
  // If entry is not specified, print current entry
  if (!fChain) return;
  fChain->Show(entry);
}
Int_t demo_VDC::Cut(Int_t entry)
{
  // This function may be called from Loop.
  // returns  1 if entry is accepted.
  // returns -1 otherwise.
  return 1;
}
#endif // #ifdef demo_VDC_cxx

