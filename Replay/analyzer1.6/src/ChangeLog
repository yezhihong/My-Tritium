2017-02-24  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct: Version is 1.5.36

2017-02-24  Ole Hansen <ole@jlab.org>

	* src/THaCherenkov.C, src/THaShower.C: Use C++ I/O for debug
	messages in Shower and Cherenkov decode methods

2017-02-24  Ole Hansen <ole@jlab.org>

	* src/THaCherenkov.C, src/THaShower.C: Regression fix: Clear
	Cherenkov and shower sums to 0 not kBig

2017-02-24  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C: Allow negative TDC resol. for scintillators
	as workaround for common-stop TDCs Affects beta calculation

2017-02-18  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct: Version is 1.5.35

2017-02-18  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C, src/THaVDC.C, src/THaVDCPlane.C: Better
	formatting of debug messages for scintillator and VDC plane classes Also, properly clear standard input before waiting for keyboard
	input in debug mode in THaVDC::FineProcess

2017-02-18  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C: Let THaVDCPlane set fNelem to the number of
	wires

2017-02-18  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCPlane.C, src/THaVDCPlane.h,
	src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Make previously hardcoded
	VDC parameters configurable via set functions This works around the inflexible fixed database format. In version
	1.6, these parameters can all be set via the database.

2017-02-18  Ole Hansen <ole@jlab.org>

	* hana_decode/SimDecoder.C, hana_decode/THaCodaDecoder.C,
	hana_decode/THaCodaFile.C, hana_decode/evio.C,
	hana_decode/swap_util.C, hana_scaler/THaScaler.C, src/THaBPM.C,
	src/THaCherenkov.C, src/THaCoincTime.C,
	src/THaQWEAKHelicityReader.C, src/THaVDCPlane.C: Address compilation
	warnings about unused parameters

2017-02-18  Ole Hansen <ole@jlab.org>

	* Makefile: make clean also removes compiled Python files (*.pyc)

2017-02-14  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct: Version is 1.5.34

2017-02-14  Ole Hansen <ole@jlab.org>

	* Makefile: Fix make error when working in git repo with detached
	head

2017-02-09  Ole Hansen <ole@jlab.org>

	* src/THaShower.C: Fix off-by-one error in shower database reader

2017-01-31  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct: Version is 1.5.33

2017-01-31  Ole Hansen <ole@jlab.org>

	* Makefile: ha_compiledata.h depends on git HEAD, if available

2017-01-30  Ole Hansen <ole@jlab.org>

	* SConscript.py, SConstruct: SCons script tweaks

2017-01-30  Ole Hansen <ole@jlab.org>

	* Makefile, configure.py, darwin64.py, linux32.py, linux64.py,
	site_scons/configure.py, site_scons/darwin64.py,
	site_scons/linux32.py, site_scons/linux64.py: Move project-specific
	SCons scripts to site_scons

2017-01-30  Ole Hansen <ole@jlab.org>

	* SConscript.py: Let SCons clean also ha_compiledata.h

2017-01-30  Ole Hansen <ole@jlab.org>

	* Makefile, SConscript.py, src/main.C: Store more info in
	ha_compiledata.h. More concise version printout

2017-01-30  Ole Hansen <ole@jlab.org>

	* Makefile: Make srcdist work properly

2017-01-30  Ole Hansen <ole@jlab.org>

	* Makefile, src/THaAnalysisObject.C, src/THaCherenkov.C,
	src/THaScintillator.C, src/THaShower.C, src/THaVDC.C: Fix
	compilation warnings, missing headers found during platform testing

2017-01-29  Ole Hansen <ole@jlab.org>

	* SConscript.py, SConstruct, SConstruct.py, darwin64.py,
	hana_decode/SConscript.py, hana_scaler/SConscript.py, linux32.py,
	linux64.py, scons/scons.py, src/SConscript.py: Make SCons less
	verbose. Clean up SConstruct and platform files.

2017-01-27  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C, src/THaInterface.h, src/main.C: Let -l silence
	the welcome logo. Add THaInterface::GetVersion()

2017-01-27  Ole Hansen <ole@jlab.org>

	* src/THaCoincTime.C: THaCoincTime code improvements: initializer
	list, references vs pointers

2017-01-27  Ole Hansen <ole@jlab.org>

	* darwin64.py: Attempt to get rid of annoying warning about unused
	-pthread arg on MacOSX

2017-01-27  Ole Hansen <ole@jlab.org>

	* Makefile, SConscript.py, src/THaInterface.C, src/main.C: Add -v
	and --version command line options

2017-01-26  Ole Hansen <ole@jlab.org>

	* src/THaBPM.C, src/THaCherenkov.C, src/THaRaster.C,
	src/THaScintillator.C, src/THaScintillator.h, src/THaShower.C,
	src/THaTotalShower.h: Better initialization and minor cleanups in
	detector classes

2017-01-25  Ole Hansen <ole@jlab.org>

	* src/THaBPM.C, src/THaBPM.h, src/THaCherenkov.C,
	src/THaCherenkov.h, src/THaCoincTime.C, src/THaCoincTime.h,
	src/THaRaster.C, src/THaRaster.h, src/THaScintillator.C,
	src/THaScintillator.h, src/THaShower.C, src/THaShower.h,
	src/THaTotalShower.C, src/THaTriggerTime.C, src/THaVDC.C,
	src/THaVDCPlane.C, src/THaVDCPlane.h: Implement stricter error
	checking and clean up code in database readers This is mostly a backport of various improvements and bug fixes made
	when developing the dbconvert utility on the master branch

2017-01-25  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Add ReadBlock
	and other database helper functions in THaAnalysisObject ReadBlock copied from utils/dbconvert.cxx from master branch

2017-01-25  Ole Hansen <ole@jlab.org>

	* darwin64.py, linux32.py, linux64.py: Update SCons platform
	configuration files with changes from master

2017-01-25  Ole Hansen <ole@jlab.org>

	* .travis.yml: Add .travis.yml (copy from master)

2017-01-23  Ole Hansen <ole@jlab.org>

	* .gitignore: Add tutorial subdirectory to .gitignore

2017-01-24  Ole Hansen <ole@jlab.org>

	* src/THaDebugModule.C, src/THaDetMap.C, src/THaVDCCluster.C: Fix
	unsafe and inefficient code found by clang scan-build (cherry-picked from commit 7416eabd6a3f99150a4f19d2e9c649672806ab5f)

2017-01-24  Ole Hansen <ole@jlab.org>

	* SConstruct.py: SConstruct improvements Move initialization of baseenv to an earlier place to avoid odd
	issues with setting CXXFLAGS and similar (cherry picked from commit 34b37ede565bc299e84b1f78a960c45516b181ad) Change scons link order so that scons builds work on Ubuntu (cherry picked from commit 428f56a63dbe4f49eb500a9dace037f37521dbd7)

2017-01-23  Ole Hansen <ole@jlab.org>

	* src/THaVhist.C: Fix buggy filling of 2D histograms in THaVhist There seemed to be two bugs in the original: 1) If both axes were variable-size arrays (e.g. variables in
	TClonesArrays) the histogram would be filled with (x_0,y_i), where
	i=0,Ny-1, i.e. the available y-values were plotted against the first
	x value. Choosing x_0 rarely makes sense. Typically, both x and y
	are parallel arrays, and so one should plot (x_i,y_i), where
	i=0,min(Nx,Ny)-1. That's how this case is handled in ROOT.  (If the two arrays aren't parallel, then it's up to the user to
	decide whether the resulting histogram makes sense. For complicated
	cases, one usually needs to write a custom analysis script that
	operates on tree variables.) 2) If any of the axes referred to a variable-size array, and that
	array was empty for the current event, then in some cases a zero
	value could have been entered into the histogram for that variable
	instead of not making an entry at all. Fortunately, this never
	occurred if both axes were parallel arrays.  Closes #120 (cherry picked from commit 09244262d6d78d85072ec5ccc5b14551e89fe480)

2017-01-11  Ole Hansen <ole@jlab.org>

	* SDK/Makefile, SDK/UserDetector.cxx, SDK/UserScintillator.cxx,
	SDK/UserScintillator.h, SDK/db_U.u1.dat, SDK/db_u1.dat: SDK updates
	and bugfixes Update SDK Makefile to support MacOSX. Improve dependency file
	creation (cherry picked from commit 211506600d8f2b5c67d92d63ed9578d0ada5b7f4) UserScintillator did not use the new LoadDB API.  Part of the
	switchover to LoadDB was already put into the SDK in October 2014.
	See cherry picks below. For some reason, only UserDetector but not
	UserScintillator were updated back then (cherry picked from commit 2801ae7993801f0f9f0e5b671e5b71a9a7d1aa5e) The fYtdc calculation in UserScintillator was incorrect in several
	ways, apparently because some variable definitions changed.  UserScintillator database parameters are set to defaults/values read
	by base class. Make all parameters optional.  UserDetector database renamed from db_u1.dat to db_U.u1.dat so that
	we can initialize UserApparatus.  Search for UserDetector nelem key also one level up.  (cherry picked from commit 72f245da848b62b0770fa80696628ba74246d228)

2017-01-08  Ole Hansen <ole@jlab.org>

	* Makefile: Makefile improvements 1) Attempt to auto-detect platform (Linux or MacOS X) 2) Remove support for Solaris platform 3) Use CXX as the linker, not hardcoded g++ (cherry picked from commit 6a99dbb006894b9b7384f4cfa43977c9c5dfe1d7)

2016-11-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Print detailed message if exception
	caught in THaAnalysisObject::Init (cherry picked from commit 1d96f86860d4eb983af138a254d63134abc2ba21)

2016-11-15  Stephen A. Wood <zviwood@gmail.com>

	* .gitignore: Add lib*.dylib to .gitignore Evio libs are .dylib on macosx (cherry picked from commit 9c20909a0fc9e9aaf0e6aeccebb5ce11a2396471)

2016-11-11  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Don't print out summaries and timing statistics
	in case of fatal error Suggested by Jure Bericic (cherry picked from commit 17465313c490cf23a7f3da1b4b968d1af86596ca)

2016-10-14  Stephen A. Wood <saw@jlab.org>

	* src/THaRTTI.C: Check for "bool" type in THaRTTI::Find (cherry picked from commit 7122f8f30084b071f73cfb51967f87a1fe2a11cc)

2016-07-22  Ole Hansen <ole@jlab.org>

	* src/THaBPM.C, src/THaCherenkov.C, src/THaRaster.C,
	src/THaScintillator.C, src/THaShower.C, src/THaVDCPlane.C: Add
	support for detector maps with reversed channel order (cherry picked from commit 707802ac24d200577135cde849347092e37465b7)
	(cherry picked from commit 329bd391c1754ccf474fad9ebeac5c644dd5183c)

2016-04-08  Ole Hansen <ole@jlab.org>

	* src/main.C: Finally fix the age-old annoyance of the spurious
	extra prompt on exit (cherry picked from commit bbd3a1b18291be8a076e9428bce2b4551c8a3c75)

2016-11-01  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct.py: Version is 1.5.32

2016-11-01  Paul King <pking@jlab.org>

	* hana_scaler/THaScaler.C: Modified the "THaScaler::ExtractRaw"
	routine to check that a found scaler header word is consistent with
	the data buffer before attempting to do scaler decoding.  This is to
	correct decoding errors in the "fast scaler" data stream.

2016-04-08  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct.py: Version is 1.5.31

2016-04-08  Ole Hansen <ole@jlab.org>

	* Makefile: Correctly include *.py files in srcdist

2016-03-19  Ole Hansen <ole@jlab.org>

	* SConstruct.py: Support detection of CXX in SConstruct also for
	Python < 2.7

2016-03-19  Ole Hansen <ole@jlab.org>

	* SConscript.py, hana_decode/SConscript.py: Add SimDecoder to scons
	build system Apparently no one uses scons with this release because this stopped
	the build

2016-03-19  Ole Hansen <ole@jlab.org>

	* linux32.py, linux64.py: Enable -Wextra warnings also for scons
	build on Linux

2016-03-19  Ole Hansen <ole@jlab.org>

	* hana_scaler/THaScaler.C: Squelch compiler warning in THaScaler.C,
	due to recent bugfix

2016-03-19  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Fix copy command for
	*.pcm files in Makefile for ROOT5 build

2016-03-19  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: For ROOT6 build, let
	make copy *.pcm files to LIBDIR

2016-03-19  Ole Hansen <ole@jlab.org>

	* SConstruct.py, darwin64.py: Fix compiler flags for scons build on
	MacOSX with clang++

2016-03-19  Ole Hansen <ole@jlab.org>

	* Makefile: Also clean *_rdict.pcm temporary files from ROOT6 build

2016-03-19  Ole Hansen <ole@jlab.org>

	* .gitignore: Tweaks to .gitignore

2016-03-19  Ole Hansen <ole@jlab.org>

	* .exclude, Makefile: More tweaks to what's included in/excluded
	from make scrdist

2016-03-19  Ole Hansen <ole@jlab.org>

	* Makefile: Add missing scons files to srcdist. Don't require GNU
	tar for srcdist

2016-03-19  Ole Hansen <ole@jlab.org>

	* src/THaQWEAKHelicityReader.C: Fix bug (mistyped && instead of &)
	in THaQWEAKHelicityReader::FindWord

2016-03-19  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaTextvars.C: Remove deprecated
	register storage class from definitions everywhere

2016-03-19  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C, hana_scaler/THaScaler.C,
	src/THaAnalysisObject.C: Address type-related issues detected by
	clang++ 7

2016-03-19  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_scaler/Makefile,
	src/THaFormula.h, src/THaRTTI.C: Changes for ROOT6 compatibility

2016-03-07  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct.py: Version is 1.5.30

2016-03-07  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C: Make warning about multiple scintillator
	hits less noisy

2015-11-17  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.29

2015-11-17  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, src/THaDetMap.C: Fix compilation
	warnings about set but unused variables

2015-11-17  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_decode/SimDecoder.C,
	hana_decode/SimDecoder.h, hana_decode/haDecode_LinkDef.h: Backport
	SimDecoder and MC helper classes from master branch

2015-07-15  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Make THaAnalysisObject::FindModule work
	for detectors and subdetectors (cherry picked from commit 27fee8e64c05f2cda205032a473038f9c8e5c0ae)

2015-01-13  Ole Hansen <ole@jlab.org>

	* Makefile: Include SDK, docs, examples etc subdirs in srcdist Also, remove obsolete cvsdist target. Replace gtar with tar.

2015-01-13  Ole Hansen <ole@jlab.org>

	* SConstruct.py: Update scons scripts to patch version 28 as well

2015-01-13  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.28

2015-01-13  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C: Also print event number when warning about
	multiple hits in scint channels

2014-10-29  Ole Hansen <ole@jlab.org>

	* src/THaHelicityDet.C: Bugfix: Don't report error if THaHelicityDet
	can't find its database file All ReadDatabase functions should behave in this way if they only
	read optional paramaters, as this one does.

2014-10-29  Ole Hansen <ole@jlab.org>

	* SDK/UserDetector.cxx: Bugfix in UserDetector: Some error statuses
	of FillDetMap were ignored

2014-10-29  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C: Report empty detector map as an error, not
	just a warning

2014-10-24  Ole Hansen <ole@jlab.org>

	* .gitignore, SDK/UserDetector.cxx, SDK/UserDetector.h,
	SDK/db_u1.dat: Rewrite and update UserDetector::ReadDatabase

2014-10-24  Ole Hansen <ole@jlab.org>

	* Makefile, SDK/Makefile, VDCsim/Makefile, hana_decode/Makefile,
	hana_scaler/Makefile: Makefile improvements. Don't run rootcint with
	ROOTCFLAGS.  Also, extract CXX and CC from root-config instead of hardcoding the
	compiler names.

2014-09-09  Brad Sawatzky <brads@jlab.org>

	* hana_decode/THaCodaDecoder.C: Fix/Update CAEN 1190 TDC decoder Based on code by Simona Malace, heavily modified/updated by Brad
	Sawatzky.  (cherry picked from commit c248031308dcf16b99583385dc9b9b1f30321cfd)

2014-09-15  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Fix incorrect error message in LoadDB and
	get rid of call to Form() (cherry picked from commit e5ad2597d36de28549e5dfc28faa2eb06ed22aef)

2014-09-17  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Add support for
	continuing database lines without continuation characters Any lines not containing an '=' character are automatically
	considered continuation lines until the next blank line or next line
	with a '=' is reached. Comment lines within continuation blocks are
	allowed.  The style using continuation characters, "\", and this new
	style must not be mixed within a given block, but different styles
	may be used in different blocks of a file.  (cherry picked from commit 5286a7b2ef87a88e765b948e73543a25d97c63f0)

2014-08-18  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.27

2014-08-18  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: June 25, 2013: Adjust hardcoded cuthi in
	THaDecData for current DAQ config

2014-08-04  Stephen A. Wood <saw@jlab.org>

	* src/THaTrack.h: Add fNPM, fBetaChi2, fFPTime, fGoodPlane3,
	fGoodPlane4 to THaTrack

2014-07-25  Stephen A. Wood <saw@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: Add additional data to THaTrack if
	  HALLC_MODS is defined THaTrack has two new member variables and
	   corresponding methods.  fDedx, SetDedx(), GetDedx()  Energy loss in
	   the hodoscope fEnergy, SetEnergy(), GetEnergy()  Energy from the
	shower counter Only compiled if HALLC_MODS is set

2014-03-20  Ole Hansen <ole@jlab.org>

	* Makefile: Fix buggy install target in the Makefile

2014-03-20  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.26

2014-03-20  Ole Hansen <ole@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h: Scaler code
	bugfixes from Bob Michaels.  Fixes: Clock rate calculation bug, missing VME timeout, and 64-bit
	incompatibility in database code Modified by me to preserve binary compatibility.

2013-12-06  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C, src/THaSpectrometer.h: Move central angle &
	rotation matrix calculations into a separate function In this way, ReadRunDatabase can be overridden without having to
	duplicate the geometry calculations.

2013-10-23  Edward Brash <brash@jlab.org>

	* SConstruct.py, src/SConscript.py: Moved addition of version number
	to shared libraries from src/SConscript to SConstruct, where it
	should be.  This is important for use with extensions which require
	the Hall A libraries (like hcana, for example).

2013-10-30  Ole Hansen <ole@jlab.org>

	* src/THaVar.C: Fix buggy THaVar::GetTypeName and
	THaVar::GetTypeSize

2013-10-22  Ole Hansen <ole@jlab.org>

	* scons/scons-LICENSE, scons/scons-README,
	scons/scons-local-2.3.0/SCons/Action.py,
	scons/scons-local-2.3.0/SCons/Builder.py,
	scons/scons-local-2.3.0/SCons/CacheDir.py,
	scons/scons-local-2.3.0/SCons/Conftest.py,
	scons/scons-local-2.3.0/SCons/Debug.py,
	scons/scons-local-2.3.0/SCons/Defaults.py,
	scons/scons-local-2.3.0/SCons/Environment.py,
	scons/scons-local-2.3.0/SCons/Errors.py,
	scons/scons-local-2.3.0/SCons/Executor.py,
	scons/scons-local-2.3.0/SCons/Job.py,
	scons/scons-local-2.3.0/SCons/Memoize.py,
	scons/scons-local-2.3.0/SCons/Node/Alias.py,
	scons/scons-local-2.3.0/SCons/Node/FS.py,
	scons/scons-local-2.3.0/SCons/Node/Python.py,
	scons/scons-local-2.3.0/SCons/Node/__init__.py,
	scons/scons-local-2.3.0/SCons/Options/BoolOption.py,
	scons/scons-local-2.3.0/SCons/Options/EnumOption.py,
	scons/scons-local-2.3.0/SCons/Options/ListOption.py,
	scons/scons-local-2.3.0/SCons/Options/PackageOption.py,
	scons/scons-local-2.3.0/SCons/Options/PathOption.py,
	scons/scons-local-2.3.0/SCons/Options/__init__.py,
	scons/scons-local-2.3.0/SCons/PathList.py,
	scons/scons-local-2.3.0/SCons/Platform/__init__.py,
	scons/scons-local-2.3.0/SCons/Platform/aix.py,
	scons/scons-local-2.3.0/SCons/Platform/cygwin.py,
	scons/scons-local-2.3.0/SCons/Platform/darwin.py,
	scons/scons-local-2.3.0/SCons/Platform/hpux.py,
	scons/scons-local-2.3.0/SCons/Platform/irix.py,
	scons/scons-local-2.3.0/SCons/Platform/os2.py,
	scons/scons-local-2.3.0/SCons/Platform/posix.py,
	scons/scons-local-2.3.0/SCons/Platform/sunos.py,
	scons/scons-local-2.3.0/SCons/Platform/win32.py,
	scons/scons-local-2.3.0/SCons/SConf.py,
	scons/scons-local-2.3.0/SCons/SConsign.py,
	scons/scons-local-2.3.0/SCons/Scanner/C.py,
	scons/scons-local-2.3.0/SCons/Scanner/D.py,
	scons/scons-local-2.3.0/SCons/Scanner/Dir.py,
	scons/scons-local-2.3.0/SCons/Scanner/Fortran.py,
	scons/scons-local-2.3.0/SCons/Scanner/IDL.py,
	scons/scons-local-2.3.0/SCons/Scanner/LaTeX.py,
	scons/scons-local-2.3.0/SCons/Scanner/Prog.py,
	scons/scons-local-2.3.0/SCons/Scanner/RC.py,
	scons/scons-local-2.3.0/SCons/Scanner/__init__.py,
	scons/scons-local-2.3.0/SCons/Script/Interactive.py,
	scons/scons-local-2.3.0/SCons/Script/Main.py,
	scons/scons-local-2.3.0/SCons/Script/SConsOptions.py,
	scons/scons-local-2.3.0/SCons/Script/SConscript.py,
	scons/scons-local-2.3.0/SCons/Script/__init__.py,
	scons/scons-local-2.3.0/SCons/Sig.py,
	scons/scons-local-2.3.0/SCons/Subst.py,
	scons/scons-local-2.3.0/SCons/Taskmaster.py,
	scons/scons-local-2.3.0/SCons/Tool/386asm.py,
	scons/scons-local-2.3.0/SCons/Tool/BitKeeper.py,
	scons/scons-local-2.3.0/SCons/Tool/CVS.py,
	scons/scons-local-2.3.0/SCons/Tool/FortranCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/GettextCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/JavaCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/arch.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/common.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/netframework.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/sdk.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/vc.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/vs.py,
	scons/scons-local-2.3.0/SCons/Tool/Perforce.py,
	scons/scons-local-2.3.0/SCons/Tool/PharLapCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/RCS.py,
	scons/scons-local-2.3.0/SCons/Tool/SCCS.py,
	scons/scons-local-2.3.0/SCons/Tool/Subversion.py,
	scons/scons-local-2.3.0/SCons/Tool/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/aixc++.py,
	scons/scons-local-2.3.0/SCons/Tool/aixcc.py,
	scons/scons-local-2.3.0/SCons/Tool/aixf77.py,
	scons/scons-local-2.3.0/SCons/Tool/aixlink.py,
	scons/scons-local-2.3.0/SCons/Tool/applelink.py,
	scons/scons-local-2.3.0/SCons/Tool/ar.py,
	scons/scons-local-2.3.0/SCons/Tool/as.py,
	scons/scons-local-2.3.0/SCons/Tool/bcc32.py,
	scons/scons-local-2.3.0/SCons/Tool/c++.py,
	scons/scons-local-2.3.0/SCons/Tool/cc.py,
	scons/scons-local-2.3.0/SCons/Tool/cvf.py,
	scons/scons-local-2.3.0/SCons/Tool/default.py,
	scons/scons-local-2.3.0/SCons/Tool/dmd.py,
	scons/scons-local-2.3.0/SCons/Tool/dvi.py,
	scons/scons-local-2.3.0/SCons/Tool/dvipdf.py,
	scons/scons-local-2.3.0/SCons/Tool/dvips.py,
	scons/scons-local-2.3.0/SCons/Tool/f03.py,
	scons/scons-local-2.3.0/SCons/Tool/f77.py,
	scons/scons-local-2.3.0/SCons/Tool/f90.py,
	scons/scons-local-2.3.0/SCons/Tool/f95.py,
	scons/scons-local-2.3.0/SCons/Tool/filesystem.py,
	scons/scons-local-2.3.0/SCons/Tool/fortran.py,
	scons/scons-local-2.3.0/SCons/Tool/g++.py,
	scons/scons-local-2.3.0/SCons/Tool/g77.py,
	scons/scons-local-2.3.0/SCons/Tool/gas.py,
	scons/scons-local-2.3.0/SCons/Tool/gcc.py,
	scons/scons-local-2.3.0/SCons/Tool/gettext.py,
	scons/scons-local-2.3.0/SCons/Tool/gfortran.py,
	scons/scons-local-2.3.0/SCons/Tool/gnulink.py,
	scons/scons-local-2.3.0/SCons/Tool/gs.py,
	scons/scons-local-2.3.0/SCons/Tool/hpc++.py,
	scons/scons-local-2.3.0/SCons/Tool/hpcc.py,
	scons/scons-local-2.3.0/SCons/Tool/hplink.py,
	scons/scons-local-2.3.0/SCons/Tool/icc.py,
	scons/scons-local-2.3.0/SCons/Tool/icl.py,
	scons/scons-local-2.3.0/SCons/Tool/ifl.py,
	scons/scons-local-2.3.0/SCons/Tool/ifort.py,
	scons/scons-local-2.3.0/SCons/Tool/ilink.py,
	scons/scons-local-2.3.0/SCons/Tool/ilink32.py,
	scons/scons-local-2.3.0/SCons/Tool/install.py,
	scons/scons-local-2.3.0/SCons/Tool/intelc.py,
	scons/scons-local-2.3.0/SCons/Tool/ipkg.py,
	scons/scons-local-2.3.0/SCons/Tool/jar.py,
	scons/scons-local-2.3.0/SCons/Tool/javac.py,
	scons/scons-local-2.3.0/SCons/Tool/javah.py,
	scons/scons-local-2.3.0/SCons/Tool/latex.py,
	scons/scons-local-2.3.0/SCons/Tool/lex.py,
	scons/scons-local-2.3.0/SCons/Tool/link.py,
	scons/scons-local-2.3.0/SCons/Tool/linkloc.py,
	scons/scons-local-2.3.0/SCons/Tool/m4.py,
	scons/scons-local-2.3.0/SCons/Tool/masm.py,
	scons/scons-local-2.3.0/SCons/Tool/midl.py,
	scons/scons-local-2.3.0/SCons/Tool/mingw.py,
	scons/scons-local-2.3.0/SCons/Tool/msgfmt.py,
	scons/scons-local-2.3.0/SCons/Tool/msginit.py,
	scons/scons-local-2.3.0/SCons/Tool/msgmerge.py,
	scons/scons-local-2.3.0/SCons/Tool/mslib.py,
	scons/scons-local-2.3.0/SCons/Tool/mslink.py,
	scons/scons-local-2.3.0/SCons/Tool/mssdk.py,
	scons/scons-local-2.3.0/SCons/Tool/msvc.py,
	scons/scons-local-2.3.0/SCons/Tool/msvs.py,
	scons/scons-local-2.3.0/SCons/Tool/mwcc.py,
	scons/scons-local-2.3.0/SCons/Tool/mwld.py,
	scons/scons-local-2.3.0/SCons/Tool/nasm.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/ipk.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/msi.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/rpm.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_tarbz2.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_targz.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_zip.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/tarbz2.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/targz.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/zip.py,
	scons/scons-local-2.3.0/SCons/Tool/pdf.py,
	scons/scons-local-2.3.0/SCons/Tool/pdflatex.py,
	scons/scons-local-2.3.0/SCons/Tool/pdftex.py,
	scons/scons-local-2.3.0/SCons/Tool/qt.py,
	scons/scons-local-2.3.0/SCons/Tool/rmic.py,
	scons/scons-local-2.3.0/SCons/Tool/rpcgen.py,
	scons/scons-local-2.3.0/SCons/Tool/rpm.py,
	scons/scons-local-2.3.0/SCons/Tool/rpmutils.py,
	scons/scons-local-2.3.0/SCons/Tool/sgiar.py,
	scons/scons-local-2.3.0/SCons/Tool/sgic++.py,
	scons/scons-local-2.3.0/SCons/Tool/sgicc.py,
	scons/scons-local-2.3.0/SCons/Tool/sgilink.py,
	scons/scons-local-2.3.0/SCons/Tool/sunar.py,
	scons/scons-local-2.3.0/SCons/Tool/sunc++.py,
	scons/scons-local-2.3.0/SCons/Tool/suncc.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf77.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf90.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf95.py,
	scons/scons-local-2.3.0/SCons/Tool/sunlink.py,
	scons/scons-local-2.3.0/SCons/Tool/swig.py,
	scons/scons-local-2.3.0/SCons/Tool/tar.py,
	scons/scons-local-2.3.0/SCons/Tool/tex.py,
	scons/scons-local-2.3.0/SCons/Tool/textfile.py,
	scons/scons-local-2.3.0/SCons/Tool/tlib.py,
	scons/scons-local-2.3.0/SCons/Tool/wix.py,
	scons/scons-local-2.3.0/SCons/Tool/xgettext.py,
	scons/scons-local-2.3.0/SCons/Tool/yacc.py,
	scons/scons-local-2.3.0/SCons/Tool/zip.py,
	scons/scons-local-2.3.0/SCons/Util.py,
	scons/scons-local-2.3.0/SCons/Variables/BoolVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/EnumVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/ListVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/PackageVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/PathVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/__init__.py,
	scons/scons-local-2.3.0/SCons/Warnings.py,
	scons/scons-local-2.3.0/SCons/__init__.py,
	scons/scons-local-2.3.0/SCons/compat/__init__.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_builtins.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_collections.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_dbm.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_hashlib.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_io.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_sets.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_subprocess.py,
	scons/scons-local-2.3.0/SCons/cpp.py,
	scons/scons-local-2.3.0/SCons/dblite.py,
	scons/scons-local-2.3.0/SCons/exitfuncs.py,
	scons/scons-local-2.3.0/scons-2.3.0.egg-info, scons/scons-time.py,
	scons/scons.py, scons/sconsign.py: Unbundle SCons distribution.  Replace ./scons/scons.py with a wrapper script that starts the
	installed version of scons. In this way, any packages relying on the
	bundled version don't immediately break. This might be removed in
	the future.

2013-10-21  Edward Brash <brash@jlab.org>

	* SConstruct.py, hana_decode/SConscript.py,
	hana_scaler/SConscript.py, src/SConscript.py: Create softlink to
	libraries within SConscript files to allow use of system-wide SCons
	installation.

2013-10-18  Edward Brash <brash@jlab.org>

	* hana_decode/SConscript.py, hana_scaler/SConscript.py,
	src/SConscript.py: Modifications to various SConscripts to fix bug
	in cleanup option

2013-10-09  Ole Hansen <ole@jlab.org>

	* Makefile, SConstruct.py: Version is 1.5.25

2013-10-09  Ole Hansen <ole@jlab.org>

	* Makefile: Let make clean also delete *.os and *.so.* *.os are object files created by scons instead of *.o *.so.* are the
	actually built shared libs like libHallA.so.1.5.24

2013-10-07  Edward Brash <brash@jlab.org>

	* hana_decode/epics_main.C, hana_decode/prfact_main.C,
	hana_decode/tdecex_main.C, hana_decode/tdecpr_main.C,
	hana_decode/tstio_main.C, hana_scaler/tscalroc11_main.C,
	hana_scaler/tscalroc23_main.C: Updates to standalone codes for
	modern versions of gcc/g++ compilers.

2013-10-08  Edward Brash <brash@jlab.org>

	* configure.py, linux32.py, linux6432.py: Fixes to 64bit/32bit
	architecture detection in configure scripts.

2013-10-07  Edward Brash <brash@jlab.org>

	* SConstruct.py, scons/scons-local-2.3.0/SCons/__init__.py: Change
	the 'version' of the local modified version of SCons to be 4.9.9,
	and then require this version in the main SConstruct file, thus
	hopefully ensuring use of the locally distributed SCons package.

2013-10-07  Edward Brash <brash@jlab.org>

	* SConstruct.py, configure.py, linux64.py: Changed ROOT check to
	assume first that ROOTSYS definition is not needed, and to just look
	for root-config in the path.  Otherwise, if ROOTSYS happens to be
	defined, but root-config is not in that path, try that to see if it
	works.  Added also possibility for true 64-bit build on Linux systems, if
	available, and removed Windows build possibility.

2013-10-07  Edward Brash <brash@jlab.org>

	* .gitignore, SConscript.py, SConstruct, SConstruct.py,
	configure.py, darwin64.py, hana_decode/SConscript.py,
	hana_scaler/SConscript.py, linux32.py, linux6432.py,
	scons/scons-LICENSE, scons/scons-README,
	scons/scons-local-2.3.0/SCons/Action.py,
	scons/scons-local-2.3.0/SCons/Builder.py,
	scons/scons-local-2.3.0/SCons/CacheDir.py,
	scons/scons-local-2.3.0/SCons/Conftest.py,
	scons/scons-local-2.3.0/SCons/Debug.py,
	scons/scons-local-2.3.0/SCons/Defaults.py,
	scons/scons-local-2.3.0/SCons/Environment.py,
	scons/scons-local-2.3.0/SCons/Errors.py,
	scons/scons-local-2.3.0/SCons/Executor.py,
	scons/scons-local-2.3.0/SCons/Job.py,
	scons/scons-local-2.3.0/SCons/Memoize.py,
	scons/scons-local-2.3.0/SCons/Node/Alias.py,
	scons/scons-local-2.3.0/SCons/Node/FS.py,
	scons/scons-local-2.3.0/SCons/Node/Python.py,
	scons/scons-local-2.3.0/SCons/Node/__init__.py,
	scons/scons-local-2.3.0/SCons/Options/BoolOption.py,
	scons/scons-local-2.3.0/SCons/Options/EnumOption.py,
	scons/scons-local-2.3.0/SCons/Options/ListOption.py,
	scons/scons-local-2.3.0/SCons/Options/PackageOption.py,
	scons/scons-local-2.3.0/SCons/Options/PathOption.py,
	scons/scons-local-2.3.0/SCons/Options/__init__.py,
	scons/scons-local-2.3.0/SCons/PathList.py,
	scons/scons-local-2.3.0/SCons/Platform/__init__.py,
	scons/scons-local-2.3.0/SCons/Platform/aix.py,
	scons/scons-local-2.3.0/SCons/Platform/cygwin.py,
	scons/scons-local-2.3.0/SCons/Platform/darwin.py,
	scons/scons-local-2.3.0/SCons/Platform/hpux.py,
	scons/scons-local-2.3.0/SCons/Platform/irix.py,
	scons/scons-local-2.3.0/SCons/Platform/os2.py,
	scons/scons-local-2.3.0/SCons/Platform/posix.py,
	scons/scons-local-2.3.0/SCons/Platform/sunos.py,
	scons/scons-local-2.3.0/SCons/Platform/win32.py,
	scons/scons-local-2.3.0/SCons/SConf.py,
	scons/scons-local-2.3.0/SCons/SConsign.py,
	scons/scons-local-2.3.0/SCons/Scanner/C.py,
	scons/scons-local-2.3.0/SCons/Scanner/D.py,
	scons/scons-local-2.3.0/SCons/Scanner/Dir.py,
	scons/scons-local-2.3.0/SCons/Scanner/Fortran.py,
	scons/scons-local-2.3.0/SCons/Scanner/IDL.py,
	scons/scons-local-2.3.0/SCons/Scanner/LaTeX.py,
	scons/scons-local-2.3.0/SCons/Scanner/Prog.py,
	scons/scons-local-2.3.0/SCons/Scanner/RC.py,
	scons/scons-local-2.3.0/SCons/Scanner/__init__.py,
	scons/scons-local-2.3.0/SCons/Script/Interactive.py,
	scons/scons-local-2.3.0/SCons/Script/Main.py,
	scons/scons-local-2.3.0/SCons/Script/SConsOptions.py,
	scons/scons-local-2.3.0/SCons/Script/SConscript.py,
	scons/scons-local-2.3.0/SCons/Script/__init__.py,
	scons/scons-local-2.3.0/SCons/Sig.py,
	scons/scons-local-2.3.0/SCons/Subst.py,
	scons/scons-local-2.3.0/SCons/Taskmaster.py,
	scons/scons-local-2.3.0/SCons/Tool/386asm.py,
	scons/scons-local-2.3.0/SCons/Tool/BitKeeper.py,
	scons/scons-local-2.3.0/SCons/Tool/CVS.py,
	scons/scons-local-2.3.0/SCons/Tool/FortranCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/GettextCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/JavaCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/arch.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/common.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/netframework.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/sdk.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/vc.py,
	scons/scons-local-2.3.0/SCons/Tool/MSCommon/vs.py,
	scons/scons-local-2.3.0/SCons/Tool/Perforce.py,
	scons/scons-local-2.3.0/SCons/Tool/PharLapCommon.py,
	scons/scons-local-2.3.0/SCons/Tool/RCS.py,
	scons/scons-local-2.3.0/SCons/Tool/SCCS.py,
	scons/scons-local-2.3.0/SCons/Tool/Subversion.py,
	scons/scons-local-2.3.0/SCons/Tool/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/aixc++.py,
	scons/scons-local-2.3.0/SCons/Tool/aixcc.py,
	scons/scons-local-2.3.0/SCons/Tool/aixf77.py,
	scons/scons-local-2.3.0/SCons/Tool/aixlink.py,
	scons/scons-local-2.3.0/SCons/Tool/applelink.py,
	scons/scons-local-2.3.0/SCons/Tool/ar.py,
	scons/scons-local-2.3.0/SCons/Tool/as.py,
	scons/scons-local-2.3.0/SCons/Tool/bcc32.py,
	scons/scons-local-2.3.0/SCons/Tool/c++.py,
	scons/scons-local-2.3.0/SCons/Tool/cc.py,
	scons/scons-local-2.3.0/SCons/Tool/cvf.py,
	scons/scons-local-2.3.0/SCons/Tool/default.py,
	scons/scons-local-2.3.0/SCons/Tool/dmd.py,
	scons/scons-local-2.3.0/SCons/Tool/dvi.py,
	scons/scons-local-2.3.0/SCons/Tool/dvipdf.py,
	scons/scons-local-2.3.0/SCons/Tool/dvips.py,
	scons/scons-local-2.3.0/SCons/Tool/f03.py,
	scons/scons-local-2.3.0/SCons/Tool/f77.py,
	scons/scons-local-2.3.0/SCons/Tool/f90.py,
	scons/scons-local-2.3.0/SCons/Tool/f95.py,
	scons/scons-local-2.3.0/SCons/Tool/filesystem.py,
	scons/scons-local-2.3.0/SCons/Tool/fortran.py,
	scons/scons-local-2.3.0/SCons/Tool/g++.py,
	scons/scons-local-2.3.0/SCons/Tool/g77.py,
	scons/scons-local-2.3.0/SCons/Tool/gas.py,
	scons/scons-local-2.3.0/SCons/Tool/gcc.py,
	scons/scons-local-2.3.0/SCons/Tool/gettext.py,
	scons/scons-local-2.3.0/SCons/Tool/gfortran.py,
	scons/scons-local-2.3.0/SCons/Tool/gnulink.py,
	scons/scons-local-2.3.0/SCons/Tool/gs.py,
	scons/scons-local-2.3.0/SCons/Tool/hpc++.py,
	scons/scons-local-2.3.0/SCons/Tool/hpcc.py,
	scons/scons-local-2.3.0/SCons/Tool/hplink.py,
	scons/scons-local-2.3.0/SCons/Tool/icc.py,
	scons/scons-local-2.3.0/SCons/Tool/icl.py,
	scons/scons-local-2.3.0/SCons/Tool/ifl.py,
	scons/scons-local-2.3.0/SCons/Tool/ifort.py,
	scons/scons-local-2.3.0/SCons/Tool/ilink.py,
	scons/scons-local-2.3.0/SCons/Tool/ilink32.py,
	scons/scons-local-2.3.0/SCons/Tool/install.py,
	scons/scons-local-2.3.0/SCons/Tool/intelc.py,
	scons/scons-local-2.3.0/SCons/Tool/ipkg.py,
	scons/scons-local-2.3.0/SCons/Tool/jar.py,
	scons/scons-local-2.3.0/SCons/Tool/javac.py,
	scons/scons-local-2.3.0/SCons/Tool/javah.py,
	scons/scons-local-2.3.0/SCons/Tool/latex.py,
	scons/scons-local-2.3.0/SCons/Tool/lex.py,
	scons/scons-local-2.3.0/SCons/Tool/link.py,
	scons/scons-local-2.3.0/SCons/Tool/linkloc.py,
	scons/scons-local-2.3.0/SCons/Tool/m4.py,
	scons/scons-local-2.3.0/SCons/Tool/masm.py,
	scons/scons-local-2.3.0/SCons/Tool/midl.py,
	scons/scons-local-2.3.0/SCons/Tool/mingw.py,
	scons/scons-local-2.3.0/SCons/Tool/msgfmt.py,
	scons/scons-local-2.3.0/SCons/Tool/msginit.py,
	scons/scons-local-2.3.0/SCons/Tool/msgmerge.py,
	scons/scons-local-2.3.0/SCons/Tool/mslib.py,
	scons/scons-local-2.3.0/SCons/Tool/mslink.py,
	scons/scons-local-2.3.0/SCons/Tool/mssdk.py,
	scons/scons-local-2.3.0/SCons/Tool/msvc.py,
	scons/scons-local-2.3.0/SCons/Tool/msvs.py,
	scons/scons-local-2.3.0/SCons/Tool/mwcc.py,
	scons/scons-local-2.3.0/SCons/Tool/mwld.py,
	scons/scons-local-2.3.0/SCons/Tool/nasm.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/__init__.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/ipk.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/msi.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/rpm.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_tarbz2.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_targz.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/src_zip.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/tarbz2.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/targz.py,
	scons/scons-local-2.3.0/SCons/Tool/packaging/zip.py,
	scons/scons-local-2.3.0/SCons/Tool/pdf.py,
	scons/scons-local-2.3.0/SCons/Tool/pdflatex.py,
	scons/scons-local-2.3.0/SCons/Tool/pdftex.py,
	scons/scons-local-2.3.0/SCons/Tool/qt.py,
	scons/scons-local-2.3.0/SCons/Tool/rmic.py,
	scons/scons-local-2.3.0/SCons/Tool/rpcgen.py,
	scons/scons-local-2.3.0/SCons/Tool/rpm.py,
	scons/scons-local-2.3.0/SCons/Tool/rpmutils.py,
	scons/scons-local-2.3.0/SCons/Tool/sgiar.py,
	scons/scons-local-2.3.0/SCons/Tool/sgic++.py,
	scons/scons-local-2.3.0/SCons/Tool/sgicc.py,
	scons/scons-local-2.3.0/SCons/Tool/sgilink.py,
	scons/scons-local-2.3.0/SCons/Tool/sunar.py,
	scons/scons-local-2.3.0/SCons/Tool/sunc++.py,
	scons/scons-local-2.3.0/SCons/Tool/suncc.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf77.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf90.py,
	scons/scons-local-2.3.0/SCons/Tool/sunf95.py,
	scons/scons-local-2.3.0/SCons/Tool/sunlink.py,
	scons/scons-local-2.3.0/SCons/Tool/swig.py,
	scons/scons-local-2.3.0/SCons/Tool/tar.py,
	scons/scons-local-2.3.0/SCons/Tool/tex.py,
	scons/scons-local-2.3.0/SCons/Tool/textfile.py,
	scons/scons-local-2.3.0/SCons/Tool/tlib.py,
	scons/scons-local-2.3.0/SCons/Tool/wix.py,
	scons/scons-local-2.3.0/SCons/Tool/xgettext.py,
	scons/scons-local-2.3.0/SCons/Tool/yacc.py,
	scons/scons-local-2.3.0/SCons/Tool/zip.py,
	scons/scons-local-2.3.0/SCons/Util.py,
	scons/scons-local-2.3.0/SCons/Variables/BoolVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/EnumVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/ListVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/PackageVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/PathVariable.py,
	scons/scons-local-2.3.0/SCons/Variables/__init__.py,
	scons/scons-local-2.3.0/SCons/Warnings.py,
	scons/scons-local-2.3.0/SCons/__init__.py,
	scons/scons-local-2.3.0/SCons/compat/__init__.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_builtins.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_collections.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_dbm.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_hashlib.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_io.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_sets.py,
	scons/scons-local-2.3.0/SCons/compat/_scons_subprocess.py,
	scons/scons-local-2.3.0/SCons/cpp.py,
	scons/scons-local-2.3.0/SCons/dblite.py,
	scons/scons-local-2.3.0/SCons/exitfuncs.py,
	scons/scons-local-2.3.0/scons-2.3.0.egg-info, scons/scons-time.py,
	scons/scons.py, scons/sconsign.py, src/SConscript.py: Add SCons
	build support to Hall A analyzer.

2013-09-27  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C: Change THaDetMap.C back from DOS to Unix line
	endings.  No idea how this happened. Was probably edited on Windows sometime.

2013-09-27  Ole Hansen <ole@jlab.org>

	* Makefile, src/THaDetMap.C, src/THaDetMap.h: Enable extra Hall C
	parameters in THaDetMap via conditional compilation To get the Hall C version of the detector map, one needs to set
	export PODD_EXTRA_DEFINES=-DHALLC_MODS

2013-09-27  Stephen A. Wood <saw@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: Add plane and signal to Module
	   structure for Hall C compatibility.  Add support for plane and
	     signal to Fill and AddModule methods Should not bream any Hall A
	     code.  (As long as everything is recompiled.)

2013-04-03  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile: Don't add INCLUDES and DEFINES to CXXFLAGS
	twice.

2013-03-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaTextvars.C: Improve performance of
	the file database functions in THaAnalysisObject.  Rewrite hopelessly inefficient ReadDBline function. Use C-string
	library functions where possible. In the process eliminate some
	bungled logic, apparently still hanging around from earlier
	versions. ReadDBline now keeps reading until it finds a non-empty
	database line (not a comment) or EOF.  Rewrite hopelessly sluggish IsDBkey function. Extensive calls to
	std::string::substr replaced with plain C-style string parsing.
	Also, the original code did not take advantage of the pre-parsing
	done in ReadDBline.  More efficient and cleaner version of THaTextvars::Substitute().  Rewrite THaTextvars Index() using C-string functions.
	std::string::find doesn't hold a candle to strchr for short (1 or 2
	character) search targets.

2013-03-21  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: THaAnalyzer bugfix: clear benchmarks only if
	not initialized yet.  This allows benchmarking a separate call to Init(), for example.

2013-03-20  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Add support for multi-value text
	variables in database files.  Multi-valued variables probably only make sense on the LHS. For
	instance L.${alldet}.debug = 1 expands to multiple keys, one for each detector, which can be useful
	in certain cases. (This particular case can, of course, also be
	handled with a search argument in the DBRequest.) However L.debug = ${allvalues} is basically useless. If ${allvalues} = (1,2,3) then this line is
	just an ineffective way of writing L.debug = 3.

2013-03-20  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.h: Fix name conflict/compiler warning in
	THaEvData::idx function

2013-03-14  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.h: Change label for double-inclusion guard to
	match that of official EVIO.  This is a quick fix to allow client code linking to a standalone
	EVIO library to coexist with the analyzer. The client code must
	include the official EVIO headers first. The analyzer should still
	call the bundled EVIO routines (the ancient EVIO version 1) since
	they are linked in at build time.

2013-03-07  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C: Fix typo in comment

2013-03-07  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Fixed incorrect description of
	THaSpectrometer::AddDetector

2013-03-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Fix off-by-one error for absolute key
	search level in LoadDB.  Also, use the opportunity to clean up that code a bit. In
	particular, don't bother allocating a new DBRequest until it is
	clear that it will be used.

2013-03-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Don't open run database file if nothing
	to do

2013-03-01  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Add basic exception-catching during Init() and
	PhysicsAnalysis().

2013-02-13  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C: Remove redundant DBRequest in
	THaDetectorBase::ReadGeometry.

2013-02-08  Ole Hansen <ole@jlab.org>

	* src/THaTextvars.C: Fix compile error in THaTextvars with DEBUG
	build (regression due to last change).

2012-12-06  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.24

2012-12-06  Ole Hansen <ole@jlab.org>

	* src/THaQWEAKHelicity.C: Fix ambiguous (and unnecessary) use of
	pow()

2012-12-06  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_scaler/Makefile: Add
	experimental support for MacOSX

2012-12-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/evio.C,
	hana_decode/swap_util.C, hana_scaler/THaScaler.C, src/THaNormAna.C,
	src/THaScintillator.C, src/THaTextvars.C, src/THaVarList.C: Fix
	compilation warnings for gcc 4.7.2 (Fedora 17)

2012-10-19  Ole Hansen <ole@jlab.org>

	* Makefile: Create symbolic links for shared libraries without an
	absolute path.  Without this, links would have to be rebuilt after
	moving the libdir to a new location.

2012-10-17  Ole Hansen <ole@jlab.org>

	* src/THaRunBase.C: Improve warning message in
	THaRunBase::SetDataRequired().

2012-10-17  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRunBase.C, src/THaRunBase.h: Add option to
	THaRunBase to override default fDataRequired. Fix silent exit for
	short runs.  For special cases (DAQ test runs), THaRunBase::SetDataRequired(mask)
	allows one to override the default set of information items that a
	run must contain for Init() to succeed. For example run->SetDataRequired( THaRunBase::kDate ); will allow run->Init() if only the run date is available, but not
	run number, prescales etc.  Also, do not silently terminate analysis if EOF is hit during
	ReadInitInfo().  This would happen if a run had fewer events than
	fMaxScan and not all required information was found. Instead, let
	the user know that info is missing and error out.

2012-10-17  Ole Hansen <ole@jlab.org>

	* src/THaFormula.C: Fix incorrect delete of fVarDef in assignment
	operator.

2012-10-17  Ole Hansen <ole@jlab.org>

	* .gitignore, DB/scaler.map, hana_scaler/Makefile,
	hana_scaler/scaler.map: Stop hana_scaler Makefile from forcing
	scaler.map into DB directory.  Instead, track DB/scaler.map like any
	other database file.

2012-10-17  Ole Hansen <ole@jlab.org>

	* .cvsignore, .gitignore: Switch from .cvsignore to .gitignore

2012-10-16  Ole Hansen <ole@jlab.org>

	* .cvsignore: Update to weed out the most common untracked files in
	a working directory.  THIS IS THE LAST COMMIT IN THIS CVS REPOSITORY. THE PROJECT WILL BE
	MANAGED UNDER GIT FROM NOW ON. SEE http://hallaweb.jlab.org/podd

2011-06-21  Ole Hansen <ole@jlab.org>

	* src/THaRunBase.C: Fix printf format warning with error message in
	Init().

2011-06-20  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C: Fix printf formats for error messages in
	ReadDatabase

2011-06-20  Ole Hansen <ole@jlab.org>

	* src/THaG0Helicity.C: Add missing <cmath> include (for fmod).

2011-05-25  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.23

2011-05-25  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C: - Improve error reporting (staterr() function). Print system error
	  description instead of just the error code.  - Remove explicit call to a destructor (the horror!) in
	addEvListFilt().

2011-05-25  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.C: Bugfixes to evOpen: - Fix incorrect free() if leading whitespace was trimmed from file
	name.  - Correctly handle file names with embedded whitespace

2011-05-12  Ole Hansen <ole@jlab.org>

	* SDK/Makefile: Make the makefile work even if ROOTSYS is not
	defined. All we need is root-config in our PATH.

2011-04-07  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEpics.C, hana_decode/THaEpics.h: Rewrite
	THaEpics::LoadData() using STL. This avoids all arbitrary buffer and
	string size limitations and really should be 64-bit safe now once
	and for all.  Also, clean up clumsy and inefficient handling of
	insertions into the epicsData map.

2011-04-07  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C: Add warning about multiple hits on
	scintillator channels. The decoder is only designed for single hit
	hardware.

2011-03-14  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.22

2011-03-14  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: Change low TDC cut to 0 per request of current
	experiment.  These cuts REALLY should be in a database.

2011-03-14  Ole Hansen <ole@jlab.org>

	* src/THaReactionPoint.C: Fix a dumb beginner's bug that caused all
	except for the first track in the track array to be assigned
	incorrect vertex data.

2011-02-16  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaQWEAKHelicity.C,
	src/THaQWEAKHelicity.h, src/THaQWEAKHelicityReader.C,
	src/THaQWEAKHelicityReader.h: Version is 1.5.21 Add initial version of THaQWEAKHelicity class from Julie Roche.
	This code is somewhat preliminary. Among other things, the database
	reader is not yet implemented and parameters are hardcoded.

2011-02-15  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.20

2011-02-15  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: Add and/or update several comments.  Slight code
	cleanup. No change in functionality.

2011-02-09  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Increase maximum size of a single
	database key/value line (including continuation lines) from 16 kiB
	to 1 MiB.

2011-01-29  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C: Add CAEN 1190 module (from Larry Selvy)

2011-01-27  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.18

2011-01-27  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaCrateMap.C: Add
	support for decoding CAEN 1190 (from Larry Selvy)

2010-12-20  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.17

2010-12-20  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Correct wording in database error message

2010-12-20  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Prevent unnecessary reading of one additional
	event if event count limit reached

2010-12-06  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.16

2010-10-08  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: remove type
	casts to unsigned long that had caused problems on 64-bit machines.
	This now compiles without warning and runs identically on 64-bit and
	32-bit

2010-10-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEpics.C: Bob's patched version to prevent EPICS
	truncation.

2010-10-06  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.15

2010-10-04  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C: Patch to allow a variable number of detector
	map lines in the database.

2010-08-26  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Simplify SetCrateMapFileName according to the
	improved logic in THaAnalysisObject. Basically, don't let the
	function interfere with the user input.  Bugfix: Ensure run object is written to the output ROOT file, not
	the current directory, which may be wrong if the input comes from a
	ROOT file, too.

2010-08-26  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Extend file name logic of OpenFile(). If
	the file name contains a directory separator (/ on Unix), assume
	that it is a verbatim database file name.  For example, on Unix, OpenFile("DB/APP.det.txt",...) will try to open ./DB/APP.det.txt, and only that. No time-dependent
	database directories will be searched, and $DB_DIR will be ignored.  Also, if the database name already starts with "db_" or ends with
	".dat", respectively, this prefix/suffix is not added again. For
	example, all of these OpenFile("db_cratemap.dat" ,...) OpenFile("cratemap", ...)
	OpenFile("db_cratemap", ...) OpenFile("cratemap.dat") will try to open "db_cratemap.dat" in the best-matching time-stamped
	database directory according to the usual search rules.

2010-08-21  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaAnalysisObject.C,
	src/THaCutList.C, src/THaGlobals.h, src/THaInterface.C,
	src/THaOutput.C, src/THaOutput.h, src/THaTextvars.C,
	src/THaTextvars.h: Add support for "text variables" in output and
	cut definition files as well as in database files. Text variables
	are managed via the new global gHaTextvars, which points to an
	instance of THaTextvars. Variables can be referred to by ${name} in
	an input file, and ${name} is then automatically replaced by its
	value(s). Text variables can be multi-valued in output and cut
	definition files, but not in database files. Examples: gHaTextvars->Add("arm","L,R"); replay.odef: ${arm}.vdc.u1.wire =>  L.vdc.u1.wire, R.vdc.u1.wire gHaTextvars->Add("BigBite","B") db_B.mwdc.dat: ${BigBite}.mwdc.planeconfig => B.mwdc.planeconfig This facility should make it much easier to manage replay scripts.

2010-08-19  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_scaler/Makefile: Change
	$(ROOTSYS)/bin to $(ROOTBIN). $ROOTSYS is deprecated.

2010-08-18  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C: Fix bugfix from APEX version: reset
	static fgNeedInit in destructor.  (Ensures decoder re-init if a
	previous decoder instance already ran.) Can't implement real fix now
	because it would not be binary compatible.

2010-08-18  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: Merge bugfixes from APEX version: - don't crash in destructor if histograms no longer exist (e.g. when
	  ROOT file has been closed) - fix bug in array index calculation if a "word" variable was
	  defined for data that is not actually present in the data stream.  - code cleanup, added comments This entire module should be seriously rewritten.

2010-04-20  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Catch expections from ReadDatabase()
	call. Right now, only std::bad_alloc gets its own error message,
	everything else has just a generic message.  Perhaps we should
	handle division by zero and similar that are not too unlikely to
	happen.

2010-04-07  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.13

2010-04-07  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C: Improved diagnostic messages for
	CAEN 550 module (VME FADC).

2010-03-30  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Don't line IsTag() function.  gcc 4.1
	seems to have problems with it.

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C: Make search for the header of the
	plane-specific data in the database (e.g.  [ R.vdc.u1 ] )
	case-sensitive, consistent with the rest of the database system.

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Make search for matrix element section header [
	<prefix>.global ] case-sensitive, consistent with the rest of the
	database system.  In THaVDC, print warning if a particular configuration is requested
	(fConfig != "") but not found, and load the first found section as
	default.  Also, load the first section even if it starts with a
	config header and no particular configuration was requested.
	(Previously, if fConfig == "", nothing would get loaded if the first
	section started with a tag.) Example in db_L.vdc.dat: [ L.global ] some numbers that are now completely ignored no matter
	what the comment says [ config=highmom ] comment line describing the
	matrix elements, ignored t 0 0 0  -1.000 0.05 0.0002 0.000 etc...  This section will now be loaded if fConfig == "" or fConfig ==
	"highmom".

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: If configuration
	explicitly set with SetConfig(), let this value override the
	settings in the run database. This behavior is consistent with the
	rest of the analyzer - the assumption being that anything set
	explicitly in a script is usually what one really wants, no matter
	the database.  (Though this could backfire if someone "forgets" a
	Set command in a script.)

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Make static
	function IsTag() visible as a member function and change it to match
	database tags consistent with the way SeekDBdate and SeekDBconfig
	work, i.e. match regexp (.*\[.+\].*).

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: - Allow empty RHS for database key = value lines. This allows
	  setting strings to empty. This may be useful by iteself, but is also
	  really needed if one wants to use a special detector "config"
	  definition only for some time periods and then revert to config = ""
	later.  - Reset fConfig = "" in ReadRunDatabase if key not found.    Previously, fConfig would remain unchanged, which was wrong  The
	  rule is that optional database values are set to their default (""
	here) if no key found.  - Fix various erroneous comments.

2010-03-25  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDCPlane.C: Patches to allow VDC class to be
	used standalone, i.e. even if not part of a spectrometer. (Still
	chasing Rob Feuerbach's ghosts.)

2010-03-12  Ole Hansen <ole@jlab.org>

	* src/THaVar.C: Fix var_type_name[] definition and GetTypeName()
	function - update was apparently forgotten when more data types were
	added in VarType.h.

2009-12-12  Ole Hansen <ole@jlab.org>

	* docs/RELEASE_NOTES.html: Minor corrections (title, wording). Added
	link to v14 release notes.

2009-12-10  Ole Hansen <ole@jlab.org>

	* docs/RELEASE_NOTES.html: Update to current version.

2009-11-08  Ole Hansen <ole@jlab.org>

	* src/THaHRS.C: Remove inline qualifier from GetTrSorting()
	function, otherwise it won't link into the dictionary.

2009-11-07  Ole Hansen <ole@jlab.org>

	* DB/20090101/db_L.vdc.dat, DB/20090101/db_R.vdc.dat: New
	well-optimized VDC reconstruction databases from Ge Jin/Doug
	Higinbotham.

2009-10-05  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.12

2009-10-05  Ole Hansen <ole@jlab.org>

	* src/THaHRS.C, src/THaHRS.h: From Jin Huang: Add option to sort
	tracks by chi2/dof. This feature can be enabled with
	SetTrSorting(kTRUE). It is likely to cause a (minor) performance
	hit, but gives a well-defined GoldenTrack.

2009-10-05  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: From Jin Huang: Make tracks
	sortable by their (externally calculated) Chi2/dof.  This change is
	not strictly binary-compatible, but it seems to me it is not going
	to break anything: old clients will just continue to see
	non-sortable tracks.

2009-09-09  Ole Hansen <ole@jlab.org>

	* src/THaRaster.C: From Jin Huang <jinhuang@jlab.org>: Allow more
	than one "module" in the detector map.

2009-05-05  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.11

2009-05-05  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C: Restore forgotten instantiation of
	default crate map "cmap" in constructor.

2009-05-05  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile: Fix typos in comments

2009-05-05  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaCodaDecoder.h,
	hana_decode/THaCrateMap.C, hana_decode/THaCrateMap.h,
	hana_decode/THaEvData.C, hana_decode/THaEvData.h,
	hana_decode/THaSlotData.C, hana_decode/THaSlotData.h,
	src/THaAnalyzer.C, src/THaAnalyzer.h, src/THaRun.C: Two new still
	somewhat experimental features: - Implement a new function THaAnalyzer::SetCrateMapFileName( const
	  char* ) to allow replay scripts to set the crate map database file
	  name on the fly. In this way, multiple hardware configurations can
	  be supported.  For binary compatibility, this is currently
	  implemented using static variables in THaEvData. Maybe this solution
	  is fine in the end since one would usually want decoders in the same
	replay to use the same crate map.  - Extend the range of error status codes from the decoder routines.    Instead of just OK/ERR, there can now be return codes of
	  OK/WARN/ERR/FATAL, where (you guessed it) FATAL will cause the
	  analysis to abort immediately, while WARN (and currently also ERR)
	  will cause the analysis to continue and just to ignore the current
	event.  I still need to test the production replay with this new code before
	I install it in the counting house.

2009-05-04  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.10

2009-05-04  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: Fix transposed u2/v1 plane labels for VDC
	histograms.

2009-02-18  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.9

2009-02-18  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C: 1) Add support for the JLab 250MHz Flash ADC in "Window Raw Data"
	mode.  Example cratemap entry for this module (ROC=16, slot=4): ==== Crate 16 type vme # slot  model   clear   header          mask
	  nchan   ndata 4     250     1       0x81000000      0xffc00000
	16      2048 The header is 0x80000000 | (slot<<22). With ndata=2048, up to
	2048/16=128 samples per channel can be read. If more samples are
	needed, increase ndata.  2) Speed up the outer loops in vme_decode. Only loop as many times
	as needed, given the parameters from the crate map.  3) Fix a bug in physics decode where evbuffer[3] was incorrectly
	taken to hold the event type. Add several checks for correct event
	header signature bits, but comment them out for now to prevent any
	effects on the ongoing production replay.

2009-02-16  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.8

2009-02-16  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: Turn on decoder VERBOSE
	messages for verbosity>=3.  Turn on decoder DEBUG messages for
	verbosity>=4.  Add function GetDecoder() to allow user access to
	decoder class.

2009-02-16  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h: Add methods SetVerbose(), SetDebug(), and
	EnableBenchmarks() to decoder.  These replace the hardcoded #defines
	VERBOSE, DEBUG, and BENCH, so verbose reporting etc can now be
	turned on dynamically by user scripts.

2009-01-22  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C: (From Bryan Moffit) Improve warning
	messages for F1 TDCs.

2009-01-06  Ole Hansen <ole@jlab.org>

	* Makefile, SDK/Makefile, hana_decode/Makefile, hana_decode/evio.C,
	hana_scaler/Makefile, src/THaAnalysisObject.C: Add support for large
	input files (>2GB).  Without additional modifications, the evio code now supports files
	up to blocksize * 2GB in size. The default CODA blocksize is 16k,
	but may be different depending on how the file was written. This
	should be tested further. Also, how does this mesh with newer CODA?

2009-01-06  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_scaler/Makefile: Separate
	compiler flags for C++ and plain C compilation (merge from 1.4
	branch) This fixes spurious compilation warnings about unsupported
	compiler options when compiling C files.

2009-01-06  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.6

2008-12-08  Ole Hansen <ole@jlab.org>

	* src/THaBeam.C, src/THaBeam.h: Let Update() get the beam momentum
	and polarization from gHaRun, not fRunParam.  This is a bit of a
	quick & dirty fix for a problem we sometimes see with split runs
	where the fRunParam object of the beam class seems to become invalid
	for the continuation segments.  This fix provides the exact same
	functionality, but the information will be retrieved as intended
	even if THaBeam is not re-initialized at the start of a segment.

2008-12-05  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: Fix bug in getting time diff (need
	helicity as arg instead of clkslot in this particular location)

2008-12-02  Ole Hansen <ole@jlab.org>

	* SDK/UserApparatus.cxx, SDK/UserScintillator.cxx: Add missing
	#includes for ROOT 5.20 to SDK example files

2008-11-18  Ole Hansen <ole@jlab.org>

	* hana_scaler/THaScaler.h, hana_scaler/THaScalerDB.h,
	src/THaAnalysisObject.C, src/THaAnalyzer.C, src/THaArrayString.C,
	src/THaAvgVertex.C, src/THaBeamEloss.C, src/THaCluster.C,
	src/THaCluster.h, src/THaCoincTime.C, src/THaCutList.C,
	src/THaDebugModule.C, src/THaDecData.C, src/THaDetMap.C,
	src/THaEvent.C, src/THaExtTarCor.C, src/THaFilter.C,
	src/THaFormula.C, src/THaFormula.h, src/THaG0Helicity.C,
	src/THaG0HelicityReader.C, src/THaGoldenTrack.C, src/THaNormAna.C,
	src/THaNormAna.h, src/THaOutput.h, src/THaPIDinfo.C,
	src/THaPhotoReaction.C, src/THaPrimaryKine.C, src/THaRTTI.C,
	src/THaReacPointFoil.C, src/THaReactionPoint.C,
	src/THaRunParameters.C, src/THaSAProtonEP.C, src/THaScintillator.C,
	src/THaSecondaryKine.C, src/THaShower.C, src/THaTrackEloss.C,
	src/THaTrackOut.C, src/THaTriggerTime.C, src/THaTwoarmVertex.C,
	src/THaVDC.C, src/THaVDCAnalyticTTDConv.h, src/THaVDCCluster.C,
	src/THaVDCCluster.h, src/THaVDCHit.h, src/THaVDCPlane.C,
	src/THaVDCTimeToDistConv.h, src/THaVDCTrackID.C,
	src/THaVDCTrackPair.C, src/THaVDCTrackPair.h, src/THaVDCUVTrack.h,
	src/THaVarList.C: Fix gcc 4.3 compilation warnings (unused
	parameters, empty loop bodies etc.)

2008-11-18  Ole Hansen <ole@jlab.org>

	* Makefile: Comment out ONLINE_ET, checked in by mistake from online
	cluster.

2008-10-31  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.5

2008-10-31  Ole Hansen <ole@jlab.org>

	* src/THaCutList.h: Back out of previous change (make
	EvalBlock(const TList*) static to preserve binary compatibility in
	Release 1.5. Postpone the change until Release 1.6, when it is
	needed for new ThaAnalyzer.

2008-10-24  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: Add a function
	GetTimeDiffSlot, modified defaults for bbite and the default
	clkchan.  All this needed for the target state sorting, which was
	buggy but I think is ok now.

2008-10-23  Ole Hansen <ole@jlab.org>

	* src/THaCutList.h: Make EvalBlock(TList*) static, which is what it
	really is.

2008-10-23  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.4

2008-10-22  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: make LoadDataCodaFile work with the roc11
	and roc12 (event stream) data.  Previously it was only tested with
	LoadData(const THaEvData& evdata) where it should still work for
	Podd.

2008-10-19  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: Add evbbite for the bbite scalers in
	event stream (ROC 12), and modify the PrintSummary to print by
	target state in addition to helicity state

2008-10-19  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalasy_main.C, hana_scaler/tscalfbk_main.C,
	hana_scaler/tscalntup_main.C: use TMath functions for Sqrt

2008-10-10  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.3

2008-10-10  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Bugfix: When checking database time
	stamps in IsDBdate(), check all parameters for validity before
	accepting the tag. Otherwise, an invalid date will be reported as
	good even though the date will not be updated.

2008-10-10  Ole Hansen <ole@jlab.org>

	* src/THaCherenkov.C, src/THaScintillator.C: Add missing #include
	<cstdio> for printf() etc.

2008-10-10  Ole Hansen <ole@jlab.org>

	* src/THaCherenkov.C, src/THaScintillator.C: Add missing #include
	<cstdlib> (reported by gcc 4.3)

2008-09-29  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h: Add the
	provision to get normalization data by target state.  The scaler.map
	file needs a new directive like [target-beam Left 00:2 pp:3 pm:4
	mp:5 mm:6] for crate Left.  This defines the mapping of combinations
	of [target and beam helicity] to slot number.  This info percolates
	through the database to THaScaler, which provides a new interface to
	get data and rates from the normalization scaler.  Meanwhile the old
	interface (overloaded) remains the same, for experiments that dont
	have target flippling.  Note, the scheme is simplified by the fact
	that the channels are fanned out to the 5 scalers involved, hence
	the channel map is the identical.

2008-09-22  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEpics.C, hana_scaler/THaScalerDB.h,
	src/THaDecData.C, src/THaOutput.h: Patches for gcc 4.3/Fedora 9

2008-09-03  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Add "static" target.

2008-09-03  Ole Hansen <ole@jlab.org>

	* src/THaFormula.C: Small cleanup of silly code in error handling.

2008-09-03  Ole Hansen <ole@jlab.org>

	* src/THaGlobals.h: Include DllImport.h if necessary to get
	definition of R__EXTERN (needed for ROOT 5.20)

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/ChangeLog: put entries in chronological order

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: updated database

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalhist_main.C, hana_scaler/tscalntup_main.C: 
	slightly better versions from ADAQ account

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalgui_main.C: update to add bigbite scalers to
	xscaler

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalbad_main.C, hana_scaler/tscalbbite_main.C: new
	standalone test codes (were on ADAQ).  bbite tests bigbite scalers,
	and so-called bad is for checking G0 sequence failures

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.C, hana_scaler/THaScalerGui.h: Add
	provision to normalize by current (requested by Bigbiters), improved
	help dialog

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: support to
	normalize by current (option for xscaler GUI), reconcile misc small
	diffs to ADAQ version e.g. variable names, add bigbite scalers to
	InitData (yeah I know it should be done via scaler.map)

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/Makefile: Add standalone codes for bigbite, Qasy
	feedback, so-called bad data (G0 sequence error)

2008-07-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/ChangeLog: update documentation about changes

2008-07-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerDB.C: Fix a long-standing bug, first noticed
	by Vince Sulkosky about 2 years ago, in which the default flag in
	output definitions did not produce default list of scalers for
	evleft and evright (evdata).

2008-07-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: fix a bug for evdata (real-time helicity
	data as opposed to event type 140) in which the decoder might
	accidentally try to loop over the entire structure and would find
	fictitous headers.  Should only loop over the crate containing
	scalers.  Simple logical fix.  Bug only affects 2-DAQ mode.

2008-05-29  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.1 Add libPodd.a, podda, and static targets (for profiling)

2008-04-29  Ole Hansen <ole@jlab.org>

	* src/THaNormAna.C: Put new THaString::CmpNoCase function in scope.

2008-04-28  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h, src/THaAnalysisObject.h, src/THaNormAna.C,
	src/THaOutput.C, src/THaOutput.h, src/THaS2CoincTime.C,
	src/THaString.C, src/THaString.h, src/THaVDC.C, src/THaVform.C,
	src/THaVform.h, src/THaVhist.C, src/THaVhist.h: Remove class
	THaString (illegal inheritance from non-baseclass std::string).
	Replace with set of string utility functions in namespace THaString.

2008-04-16  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: To handle split runs correctly, now also check
	old run vs new run using Compare()

2008-04-16  Ole Hansen <ole@jlab.org>

	* src/THaCodaRun.C, src/THaCodaRun.h: Add missing THaCodaRun copy
	constructor.

2008-04-16  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Restore accidentally deleted curly
	brackets in destructor.

2008-04-16  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h, src/THaRunBase.C: Several improvements
	related to the perennial problem of split runs: - Get rid of the THaRun comparison operators (==, != etc.). These
	  treated runs with different segment numbers as distinct, but they
	  should be considered equivalent. Example    run1: /data/e01002_1000.dat.0    run2: /data/e01002_1000.dat.1    run1 == run2 should be true, run1 < run2 should be false, etc.  - Change THaRun::Compare() such that it also compares the segment
	  number, so in the above example run1.Compare(run2) == -1 and
	run2.Compare(run1) == 1 - Clean-up convoluted logic of the various Clear() functions.
	  Clear() now always closes the run, but keeps explicitly set run
	  date, event range, and number of events to scan if initializing. In
	  line with this, change Init() to Clear() first, then Open(), not
	vice versa.  - Add more intelligence to THaRun::ReadInitInfo(): If trying to get   the init info (run date etc.) for a continuation segment of a
	  split run, try finding the first segment and reading the
	  parameters from there.  The first segment is searched for in the
	  same directory as the continuation segment. If the run is a
	  directory containing a string dataN, with N=1..9, it is also
	  searched for in all other dataN directories.  This should cover the
	common file locations people use in Hall A.  Now, here's three possible ways to handle split runs: 1) Old method 1, clumsy, don't use    THaRun* r1 = new THaRun("/work/data1/e01002_1000.dat.0");    THaRun* r2 = new THaRun("/work/data2/e01002_1000.dat.1");    r1->Init();    r2->SetDate(r1->GetDate());     // Satisfies init requirements    r2->SetNumber(r1->GetNumber()); // Makes runs equal for
	   THaAnalyzer analyzer->Process(r1);    analyzer->Process(r2); 2) Old method 2, ok:    THaRun* r1 = new THaRun("/work/data1/e01002_1000.dat.0");    r1->Init();    THaRun* r2 = new THaRun(*r1);   // Make exact copy of r1    r2->SetFilename("/work/data2/e01002_1000.dat.1"); //except for
	   the file name analyzer->Process(r1);    analyzer->Process(r2); 3) New method, preferred (unless the directory names are unusual):    THaRun* r1 = new THaRun("/work/data1/e01002_1000.dat.0");    THaRun* r2 = new THaRun("/work/data2/e01002_1000.dat.1");    analyzer->Process(r1);    analyzer->Process(r2);    i.e. now it "just works". Since the runs are considered equal,
	   the output ROOT file will contain the sum of the two runs.

2008-04-14  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Make fgModules
	private and add optional 3rd argument to FindModule() that can
	disable error printing and checking for Init status. With the 3rd
	argument false, FindModule() acts more or less like a no-frills
	Find-by-name on a list (it still checks for inheritance from
	THaAnalysisObject and, if given, from classname).

2008-04-10  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Pure comment lines no longer terminate a
	continued database key. Example D.value = 1 \ #          2 \           3 reads value = "1 3".  Minor cleanup.

2008-04-10  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Print warning if "block" statement in output
	definition file does not match any variables, similar to "variable"
	statements that refer to undefined variables.

2008-04-07  Ole Hansen <ole@jlab.org>

	* src/THaBeamInfo.h, src/THaHelicityDet.h: Fix more "unused
	parameter" warnings caused by Clear(opt)

2008-04-07  Ole Hansen <ole@jlab.org>

	* src/THaHelicity.C: Warn about !fGoodHel2 at debug level 1 and
	!fGoodHel2 at level 2.

2008-04-07  Ole Hansen <ole@jlab.org>

	* src/THaG0HelicityReader.C: To allow inverting ADCHelicity and
	G0Helicity gates independently in THaHelicity, rename the database
	key for inverting the g0 gate signal from "invert_gate" to
	"neg_g0_gate".

2008-04-07  Ole Hansen <ole@jlab.org>

	* src/THaVar.C: Fix warning about "cast of pointer to integer of
	different size"

2008-04-07  Ole Hansen <ole@jlab.org>

	* Makefile: Extversion is -beta3

2008-04-07  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C, src/THaADCHelicity.h, src/THaG0Helicity.C,
	src/THaG0HelicityReader.C, src/THaG0HelicityReader.h: Add
	configuration option "invert_gate", read from database, that
	logically inverts the polarity of the gate signal.  The definition
	of the gate polarity appears to be changing with time... The
	database key is optional, and the default is not to invert the gate
	(previous behavior).

2008-04-04  Ole Hansen <ole@jlab.org>

	* DB/DEFAULT/db_hel.dat: Add keys for THaHelicity

2008-04-04  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaHelicity.C,
	src/THaHelicity.h: New class THaHelicity: reads helicity info from
	both ADCs and G0 hardware (with delay=0, "in-time" helicity) and
	compares results. Sets global variables and, if fDebug>=1, prints
	warning if the two results differ.

2008-04-04  Ole Hansen <ole@jlab.org>

	* src/THaG0Helicity.C, src/THaG0Helicity.h,
	src/THaG0HelicityReader.C, src/THaG0HelicityReader.h: - Add handling of G0 helicity in case of zero delay (from Vince).  - Move reading of the G0 ROC info to
	THaG0HelicityReader::ReadDatabase

2008-04-04  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C: - Change default threshold to 4000 for 12-bit TDCs.  - Use fSign only for calculating the final fHelicity, not fADC_Hel,   consistent with G0Helicity.

2008-04-04  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C: Create really empty detmap by default, not
	"empty" map with space for 10 modules. This saves memory for
	detectors that do not use fDetMap.

2008-04-03  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C: Fix bug in ReadDatabase causing gate always
	to be ignored. Fix inefficiency in Decode causing multiple
	assignments of helicity.

2008-04-03  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Link THaScintilltor::DataDest to avoid
	"missing dictionary" warnings from recent ROOT versions.

2008-04-03  Ole Hansen <ole@jlab.org>

	* DB/DEFAULT/db_hel.dat, src/HallA_LinkDef.h, src/THaADCHelicity.C,
	src/THaADCHelicity.h: Replace the "detmap" key in THaADCHelicity
	with two keys, "helchan" and "gatechan", each requiring 3 integers
	with the roc/slot/chan of the helicity and gate data channels,
	respectively. This is much cleaner. Also, put these channel
	definitions in usable form already in ReadDatabase, not in Decode.

2008-04-03  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C: - Reverse the expected order of the data channels. The Hall A setup
	  has the helicity bit in the first and the gate in the second data
	channel.  - Add support for "reversed" detector maps: e.g.      3 25 15 14 -> roc=3, slot=25, helicity_chan=15, gate_chan=14 - If ignore_gate is set, allow only a single data channel, which is
	  taken as the helicity channel. In that case, the "gate" is not
	  decoded (it may not exist) and the global variable for the gate ADC
	data always holds kBig.

2008-04-02  Ole Hansen <ole@jlab.org>

	* src/THaG0Helicity.C, src/THaG0HelicityReader.C,
	src/THaG0HelicityReader.h: After conversation with Bob, remove the
	sections related to the ring buffer scaler readout. This code should
	be in a separate module.

2008-04-02  Ole Hansen <ole@jlab.org>

	* src/THaG0Helicity.C: Fix typo in ReadDatabase: key s "tdavg",
	"ttol", and "missqrt" are all optional.

2008-04-02  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.0-beta2

2008-04-02  Ole Hansen <ole@jlab.org>

	* src/THaADCHelicity.C: Fix typo in ReadDatabase: "detmap" is
	required, not optional.

2008-04-02  Ole Hansen <ole@jlab.org>

	* DB/DEFAULT/db_hel.dat, src/HallA_LinkDef.h, src/THaG0Helicity.C,
	src/THaG0Helicity.h, src/THaG0HelicityReader.C,
	src/THaG0HelicityReader.h: Port G0 helicity classes to new database
	interface. THaG0Helicity should work now. Example database keys are
	in DB/DEFAULT/db_hel.dat.  Add "ring buffer scaler" code back into THaG0HelicityReader, but
	only enable it if G0RINGBUFF is defined at compile time. Presently
	turned off by default.

2008-04-02  Ole Hansen <ole@jlab.org>

	* src/THaFormula.C, src/THaFormula.h: Override ROOT's
	TFormula::GetExpFormula() because it does not handle
	kDefinedVariable and kDefinedString opcodes, which we need for our
	global variables.  As of ROOT 5.16, names of existing ("old")
	formulas in expressions are substituted not by the old formula's
	expression, GetTitle(), but by GetExpFormula(), which makes sense.
	However, this will fail to evaluate if the old formula contains
	global variable names.  I'd call this a bug in ROOT's GetExpFormula() that has been there
	ever since ROOT 3.05, but only manifested itself since the change in
	ROOT 5.16.

2008-04-01  Ole Hansen <ole@jlab.org>

	* DB/DEFAULT/db_hel.dat, src/THaADCHelicity.C,
	src/THaADCHelicity.h, src/THaHelicityDet.C, src/THaHelicityDet.h: 
	Updated helicity base class and ADC helicity class to work with Podd
	1.5 database interface. THaADCHelicity should work now.  An example database file is in DB/DEFAULT/db_hel.dat.  All helicity classes share the same database file, db_hel.dat, and
	use their name (not apparatus.name) as the prefix for database keys
	and global variables.

2008-03-31  Ole Hansen <ole@jlab.org>

	* src/THaSubDetector.h: Add default constructor for subdetectors
	that need ROOT RTTI.

2008-03-27  Ole Hansen <ole@jlab.org>

	* src/THaVform.C, src/THaVhist.C, src/THaVhist.h: Bugfix: Fix the
	nasty crashes on exit when THaOutput defined histograms using
	formulas in expressions for the x or y variable or the cut.  The
	problem was a double-delete: passing a dummy argument "[0]" to the
	THaFormula c'tor from the THaVform c'tor caused duplicate entries in
	ROOT's list of functions if a THaVform with the same name as an
	existing one was created. This happened in THaVhist::SetX(), SetY()
	and SetCut(). Of these duplicate entries, only the first one would
	be deleted upon deleting the formula. On exit, ROOT tried to delete
	the remaining ones, which pointed to already deleted objects.  Also, THaVhist::SetX/SetY/SetCut(THaVform*) failed to set fMyFormX
	etc. so that these formulas would never get deleted. This was at
	least a major memory leak.  These functions also called operator= to
	copy the formulas unnecessarily (they were already copied and
	compiled during construction).  Solutions: a) THaVform c'tor changed to call Compile() only once, with the
	right name.  b) THaVhist::SetX/SetY/SetCut(THaVform*) changed not to make a copy
	   but only to store a pointer. External formulas are indicated with
	   fMyFormX etc.  Further changed THAVhist not to Init() or Process()
	   fFormX etc. if fMyFormX etc. are false. This should improve memory
	   usage and speed.  The only requirement is that formulas/cut must be
	   processed before histograms in THaOutput.

2008-03-27  Ole Hansen <ole@jlab.org>

	* src/THaHRS.C, src/THaSecondaryKine.h, src/THaSpectrometer.C,
	src/THaVDCCluster.C: Pick up minor changes from Release-140 branch
	up to 1.4.10 (missing #includes etc.)

2008-03-27  Ole Hansen <ole@jlab.org>

	* src/THaCut.C, src/THaFormula.C, src/THaFormula.h: Pick up changes
	from Release-140 branch up to 1.4.10 (support for string types in
	formulas and cuts).

2008-03-18  Ole Hansen <ole@jlab.org>

	* hana_decode/haDecode_LinkDef.h: Link THaEvData::RocDat_t to fix
	spurious ROOT RTTI errors

2008-03-12  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.h: Get rid of trivial "unused parameter"
	warnings that appear when optimizing.

2008-03-12  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Bugfix: do not call "StripBrackets" for the
	argument of a "block" definition.  Otherwise, regular expressions
	with brackets (e.g. [uvx]) are corrupted.

2008-03-11  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: Allow GetEvTime
	even if not implemented in a derived class. It will return 0 by
	default. Derived classes have the option of overriding GetEvTime()
	or simply putting the event time into the member variable evt_time.

2008-03-11  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C: PrintLogo() fix for ROOT 5.18 broke
	compilation for ROOT 5.16 and before.

2008-03-11  Ole Hansen <ole@jlab.org>

	* src/THaCoincTime.C, src/THaHelicityDet.C, src/THaS2CoincTime.C: 
	Changes for removed THaDB.h

2008-03-11  Ole Hansen <ole@jlab.org>

	* Makefile: Make smaller srcdist

2008-03-11  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C, src/THaInterface.h: Merge PrintLogo() fix from
	1.4 branch.

2008-03-11  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaDB.C, src/THaDB.h,
	src/THaFileDB.C, src/THaFileDB.h: Remove unused/abandoned THaDB and
	THaFileDB.

2008-03-11  Ole Hansen <ole@jlab.org>

	* hana_decode/THaSlotData.h: Add assertions to most getters to catch
	hidden logic errors. For now, these are in addition to the existing
	guard tests. Some of the tests depend on the cratemap data and/or
	the raw data and so should always be done.

2008-03-11  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile: Define NDEBUG if compiling non-debug version
	with STANDALONE.

2008-03-11  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.h: Replacing checks for GoodIndex with
	assertions was a bit too agressive.  Add new function GoodCrateSlot
	to assert good input, but do allow missing entries in the crateslot
	arrays for GetNum... functions.

2008-03-10  Ole Hansen <ole@jlab.org>

	* src/THaTrackInfo.h: Get rid of "unused parameter" warning from
	Clear(opt).

2008-03-10  Ole Hansen <ole@jlab.org>

	* src/THaTrackingDetector.C, src/THaTrackingDetector.h: 
	FindVertices() does not really belong here. Vertices (target
	coordinates) should be found by the spectrometer, not the tracking
	detectors.  Keep it for now for backward compatibility, but change
	it from a required pure virtual function to a dummy function.

2008-03-10  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.h: Clarify comments of fIsInit and fIsSetup

2008-03-08  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Remove unused member
	variable fVUWireAngle. Clarify comments.

2008-03-08  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C, src/THaVDCPlane.h: Comment out unused code for
	reading the TTD lookup table. The table just eats memory and should
	not be a member variable of this class anyway.  Speed up Get functions for cluster, hits, and wire TClonesArrays by
	doing range checking with assert() and access with UncheckedAt().

2008-03-08  Ole Hansen <ole@jlab.org>

	* src/THaSubDetector.C, src/THaSubDetector.h, src/THaVDCPlane.C,
	src/THaVDCPlane.h, src/THaVDCUVPlane.C: To maintain backward
	compatibility, restore old functionality of
	THaSubDetector::GetDetector(). It now does the same as GetParent().
	Rename the new GetDetector() to GetMainDetector(). It searches up a
	chain of nested subdetectors until it finds the enclosing
	THaDetector.  Change related code in THaVDCPlane and THaVDCUVPlane accordingly.

2008-03-07  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/THaCodaDecoder.C,
	hana_decode/THaCodaDecoder.h, hana_decode/THaCrateMap.C,
	hana_decode/THaCrateMap.h, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, src/HallA_LinkDef.h, src/THaAnalyzer.C,
	src/THaAnalyzer.h, src/THaEvent.C, src/THaEvent.h,
	src/THaRawEvent.C, src/THaRawEvent.h, src/THaTrackingDetector.C,
	src/THaVDCEvent.C, src/THaVDCEvent.h, src/THaVar.C, src/THaVar.h: 
	Version is 1.5.0-beta1 Restore most of the helicity-code previously removed from decoder
	and THaAnalyzer. We change plans and decide to include the helicity
	detectors in the decoder as well (to be done), which is where they
	best fit.  Provide dummy access routines to scaler and helicity data in
	THaEvData base class, but trap access to them in debug mode to
	uncover hidden logic errors.  Clients can disable trapping by
	setting fgAllowUnimpl (not recommended).  Replace most range-checking tests in decoder (THaEvData,
	THaCodaDecoder) and THaCrateMap with assert() to trap hidden logic
	errors. At the same time, this improves runtime performance of
	production code compiled with NDEBUG.  Fix wrong loop range over slots in THaCodaDecoder::vme_decode.
	Fortunately, no VME modules were defined to use slot 0, those would
	not have been decoded.  Change type of "tloc" parameters in decoder from UInt_t to ULong64_t
	in preparation for 64-bit time stamps.  In THaEventHeader, restore fHelicity and add fTargetPol. Change type
	of fEvtTime from Double_t to ULong64_t, consistent with "tloc" used
	elsewhere.  Provide backwards-compatible Set().  Change type of k(U)Long data in THaVar system from (U)Long_t to
	(U)Long64_t.  As stated by the ROOT team, (U)Long_t is "currently
	not a portable data type" - it's 4 bytes on 32-bit platforms, but 8
	on 64-bit.  Write ANALYZER_VERSION_CODE and define ANALYZER_VERSION() macro in
	ha_compiledata.h, analogous to ROOT_VERSION_CODE. This allows
	writing of version-dependent code.  Remove obsolete THaRawEvent and THaVDCEvent classes. THaEvent should
	be upgraded with an intelligent dynamic streamer method.  Warn about missing parent spectrometer in
	THaTrackingDetector::AddTrack() only if fDebug>0. It would probably
	be even better to warn exactly once.

2008-03-05  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: Repair broken Clear(). The
	previous change actually caused a memory leak because
	TClonesArray::Clear("C") only calls obj->Clear(), not
	obj->Clear("C") (which it probably should, but that's ROOT history).
	As a result, if tracks were tagged with a THaTrackID, the ID object
	was leaked for every track! Changes: - Restore the 1.10/1.14 versions of THaTrack.C/h.  - Update the constructor initialization lists and Clear() to the
	  current set of member variables.  - Initialize all Double_t in constructors and Clear() to kBig.  - Fix minor bug: fType was zero but should be kHasFP when
	  constructing with fp coords.  - To be safe, also zero fCluster.

2008-02-29  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVPlane.C, src/THaVDCUVPlane.h, src/THaVDCUVTrack.C: 
	Pre-calculate inverse of denominator of coordinate conversion
	expressions during Init() so that we can replace fp divisions with
	fp multiplications.  Might save a few cpu cycles.

2008-02-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.h: Redo - test

2008-02-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.h: Undo prev checkin for test

2008-02-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.h: Remove explicit opt argument to Clear(),
	which caused unused parameter compiler warnings.

2007-09-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Make database keys case-sensitive again
	(=reverse last check-in).  This is the behavior I want for Release 1.5 and up. Release 1.4
	folded the case for the part of the key that was given to
	LoadDBvalue() - usually just the last part of the key excluding the
	prefix. This was confusing - case-sensitivity is what ROOT users
	expect because that's how all user strings, object and class names,
	identifiers etc. are treated.  This change may require minor modifications to some user databases,
	but it will be immediately obvious from error messages which entries
	require changes.

2007-09-07  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: Add support for detector maps
	with reversed logical channel order (logical channel "first"
	corresponds to "hi", "first+nchan-1" to "lo").  This is useful if
	ribbon cables are plugged in backwards, detectors are flipped around
	physically, etc. Currently needed by BigBite MWDC.

2007-09-07  Ole Hansen <ole@jlab.org>

	* hana_decode/THaBenchmark.h, hana_decode/THaEvData.C,
	hana_decode/haDecode_LinkDef.h: Generate CINT dictionary for
	THaBenchmark so it can be used in scripts, too.

2007-09-05  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Restore case-insensitivity of search for
	database keys. Otherwise, I just know it's going to break someone's
	database, somewhere, sometime...

2007-09-05  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Search for "ebeam" instead of "Ebeam" in
	run database since database keys are now case sensitive and all our
	run databases use lowercase "ebeam".

2007-09-05  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Rename internal function IsDBtag() to
	IsDBkey().

2007-09-01  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C: Let SetModel() also set the model's properties
	(ADC, TDC, etc.)

2007-08-31  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: - Add refchan field to module structure, which is useful for
	  actually defining maps for pipeline TDCs.  - Add Find() method.  - Change kModelMask to reserve only 8 bits, not 16, for module
	properties.  - Add range checking to get and test methods.

2007-08-31  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.h: Add GetDetMap() function. This is useful
	for detectors that need to know the maps of subdetectors, for
	example.

2007-08-31  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: When calling the object's Clear() from
	Init(), pass option "I". This allows more intelligent behavior in
	complex Clear() functions.

2007-08-30  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: Add more utility functions to
	struct Module. Remove hardcoded TDC resolutions from internal module
	list.

2007-08-29  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h: Make argument of
	FillDetMap a vector<Int_t> not vector<int> to avoid portability
	issues.

2007-08-29  Ole Hansen <ole@jlab.org>

	* src/VarType.h: Add support for matrix types: kFloatM, kDoubleM,
	kIntM.

2007-08-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Add
	LoadDBmatrix() template function - yet another database utility
	function.  Support reading of matrixes of float, double, and Int_t
	in LoadDB().

2007-08-29  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: Add Sort(). Add member functions
	(getters, testers) to Module structure.

2007-08-27  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: - Add GetMinMaxChan() method to find range of channels (or
	  refindexes) used by the map.  - Add resolution field to Module. This can be used for TDC
	  resolutions, in particular, but also for another floating point
	  parameter associated with a module.  - Fill() now always auto-computes the logical channel number unless
	  explicitly overridden with kFillLogicalChannel. It can only help to
	  enumerate the channels at fill time. Clients can always override
	  with their own scheme after filling.

2007-08-25  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaG0Helicity.C, src/THaG0Helicity.h,
	src/THaG0HelicityReader.C: Couple of updates that might make this
	work (still needs real testing).  Major improvement was modifying QuadCalib and QuadHelicity to update
	the time of the quad early, and test the quad's time (not this
	event's) against the previous quad in QuadHelicity; this fixes the
	case where only the last piece of the previous quad was found (due
	to deadtime) so the code thought it was working off the same QRT.
	This appears to be the primary problem with the saGDH dataset.  Other items:  * fix typo in THaG0HelicityReader::SetROCinfo so index, header set
	 right * Maximum permitted number of QRT (fMaxMissed) is now a set-able
	   parameter with a default value of 30 (what was hard-coded before = ~
	   4seconds); therefore bumped THaG0Helicity's version to 2 to ac  * Protected missing QRT recovery logic -- only attempt if the
	   helicity prediction algorithm is fully calibrated  * some additional clarifying comments and exchange of hard-coded
	   values with appropriate relation to parameters (esp. in
	TimingEvent)

2007-08-24  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h, src/VarType.h: 
	Support vector<float> as a type (kFloatV) for LoadDB. Templatize
	LoadDBarray.

2007-08-23  Ole Hansen <ole@jlab.org>

	* src/THaDetector.h, src/THaSubDetector.C, src/THaSubDetector.h,
	src/THaVDCPlane.C: Better handling of detector/subdetector
	hierarchies: In THaSubDetector, rename fDetector to fParent. New
	method GetParent() returns the subdetector's immediate parent (which
	may be another subdetector), while GetDetector() now finds the
	subdetector's parent detector by walking up the subdetector chain.

2007-08-23  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCPlane.C, src/THaVDCPlane.h,
	src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: - Remove calls to Clear() from Decode() since Clear() is called
	  right before Decode() in THaAnalyzer already. The logic is that the
	  analysis routines can assume that they are called in the required
	order.  - Implement missing THaVDC::Clear(), which in turn clears the
	subdetectors.

2007-08-23  Ole Hansen <ole@jlab.org>

	* src/THaSubDetector.C, src/THaVDCPlane.C: Use TString::Chop() to
	remove trailing dot prefix strings.

2007-08-23  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Fix incorrect printout of database file
	name in case of error.

2007-08-22  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h, src/THaDetectorBase.C,
	src/THaDetectorBase.h: Oops. Pass vector<int> argument to
	Fill/FillDetMap by reference, not by value.

2007-07-13  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: - Make BdataLoc a local class and header_str_to_base16() a local
	function.  - Move vsplit() member function to THaAnalysisObject.  - Improve speed of Decode() somehwat by avoiding looping over the
	  RocLength instead of the entire event length for the fWordLoc
	  variables. This can probably be further optimized still.

2007-07-13  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h,
	src/THaDetectorBase.C, src/THaVar.C, src/VarDef.h, src/VarType.h: 
	Add support for searching upwards a database key hierarchy in
	THaAnalysisObject::LoadDB(). Searching can be requested on a
	per-item basis or globally. See comments in LoadDB() for details.  Also, move vsplit() from ThaDecData to THaAnalysisObject. vsplit()
	duplicates the Split() function of THaString. THaString should
	probably be removed.

2007-06-27  Ole Hansen <ole@jlab.org>

	* Makefile: Don't compile THaFileDB for now.

2007-06-27  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Improvements to
	database functions: - Support DBRequest structure for LoadDB() - Support in-line comments ("#") after key/value data.  - Grow line buffer dynamically in LoadDBvalue() (up to 16 kB). Long
	  lines may occur now that arrays and strings are supported.  - ReadRunDatabase() now returns proper error codes.  - Better error messages and handling in LoadDB().

2007-06-27  Ole Hansen <ole@jlab.org>

	* src/THaCoincTime.C, src/THaCoincTime.h, src/THaG0Helicity.C,
	src/THaScintillator.C: Use new structure DBRequest in
	ReadDatabase(). Avoid database access through gHaDB for now. Use
	standard file-based database consistent with other detectors.

2007-06-27  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h: Add ReadGeometry
	database utility function.

2007-06-27  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Remove explicit linking of some common STL
	templates once and for all.  Previous problems were due solely to
	improper installations of ROOT (my fault).

2007-06-27  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h, src/VarDef.h, src/VarType.h: In
	VarDef.h, make DBRequest a different structure than TagDef (to be
	obsoleted).  Sightly reorder enums in VarType.h

2007-06-21  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h: Add FillDetMap()
	method to simplify detector map handling in database readers.

2007-06-21  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: - Add Fill() method to initialize the detector map from a
	vector<int> (typically read from the database).  - Add Reset() method to be able to free the memory allocated by this
	class.  - Add convenience methods GetModel(), IsADC(), IsTDC() that use
	index of module as argument.  - Add GetNchan() and GetTotNumChan() convenience methods, useful for
	checking against #wires/blocks/mirrors etc.  - Fix bug in copy constructor (fMaplength was not copied).  - Fix incorrect definition of kModelMask which caused GetModel() to
	fail.

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Prevent crash when printing error message
	in LoadDB if input is insane.

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Add support for reading of vector<double>
	and vector<int> to LoadDB().  Print data type name if unsupported
	type requested in LoadDB().  Define global Here() function and make
	in-class Here() a special case of it.

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.h: Declare a global Here() function for
	convenience. (Might be better put in a different header - TBD.)

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/THaVar.C: Define names of data types (var_type_name[]),
	declared in VarType.h.

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/VarType.h: Add kDoubleV and kIntV (vector<double> and
	vector<int>).

2007-06-19  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Restore explicit linking of some compiled
	vector<> templates.  These still don't always work from CINT
	(vector<int> and vector<double> tend to be especially problematic).

2007-06-18  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Database
	functions now support continuation lines and reading of arrays.

2007-06-18  Ole Hansen <ole@jlab.org>

	* src/THaElossCorrection.C: Minor change to ReadRunDatabase to read
	integer parameter directly.

2007-06-15  Ole Hansen <ole@jlab.org>

	* src/VarType.h: Add string data type (kString).

2007-06-15  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Support integer
	and string data types in LoadDB.

2007-06-12  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C: Simplify initialization of fglTrg, using the
	new THaSubDetector::GetApparatus() function.

2007-06-12  Ole Hansen <ole@jlab.org>

	* src/THaSubDetector.C, src/THaSubDetector.h: Add GetApparatus()
	function.

2007-06-12  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.h: Add getters for components of fSize
	(returning full sizes in each dimension).

2007-05-11  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaBeamInfo.C, src/THaDecData.C, src/THaG0Helicity.C,
	src/THaHRS.C, src/THaRasteredBeam.C, src/THaSpectrometer.C,
	src/THaSpectrometerDetector.C, src/THaUnRasteredBeam.C,
	src/THaVDCCluster.C, src/THaVarList.C: Add in missing #include's for
	TList, TMath, and TClass probably needed now in part to
	changes/cleaning of the ROOT header files.

2007-05-08  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Prevent crash if a database entry has the
	form "key = ", i.e. no text follows the '=' sign.

2007-05-03  Bob Michaels <rom@jlab.org>

	* hana_decode/THaUsrstrutils.C: rewrite string_from_evbuffer to make
	the algorithm identical to the usrstrutils.c code used by the
	trigger supervisor.  I tested it on recent files that had failed
	with the old string_from_evbuffer, it works if there are blank lines
	or if the last line doesnt end in EOL, etc, just as the trigger
	supervisor (VME) code works.

2007-04-27  Ole Hansen <ole@jlab.org>

	* hana_decode/THaUsrstrutils.C: Fix mixup of units of the buffer
	length in string_from_evbuffer: it is in longwords, not bytes. Only
	copy event buffer data through terminating NULL, not all the way up
	to the buffer length.

2007-04-27  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C: In prescale_decode, avoid
	unnecessary copying of the event buffer into a temporary buffer.
	Pass the buffer length to the string parser routine.

2007-04-27  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C: The previous change to call Clear("P") from the
	non-default constructor unfortunately deallocated fID.  Change
	Clear() to delete fID only if called with "C" option, i.e. when
	clearing the TClonesArray of tracks.

2007-04-27  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C: Do not create a gHaDB object by default for
	the moment to get things working.

2007-04-24  Ole Hansen <ole@jlab.org>

	* hana_decode/THaBenchmark.h: Merge improved Print() function from
	GEn branch. Print() without argument prints all defined benchmarks.

2007-04-24  Ole Hansen <ole@jlab.org>

	* DB/20030101/db_run.dat, Makefile, docs/RELEASE_NOTES.html,
	gcc-version, hana_decode/Makefile, hana_decode/THaBenchmark.h,
	hana_decode/THaCodaData.C, hana_decode/THaCodaDecoder.C,
	hana_scaler/Makefile, hana_scaler/THaScaler.C,
	hana_scaler/THaScaler.h, hana_scaler/THaScalerDB.C,
	hana_scaler/THaScalerDB.h, hana_scaler/tscalroc23_main.C,
	src/HallA_LinkDef.h, src/NormAna_LinkDef.h,
	src/THaAnalysisObject.C, src/THaAnalyzer.C, src/THaAnalyzer.h,
	src/THaAvgVertex.C, src/THaBeamEloss.C, src/THaCoincTime.C,
	src/THaDecData.C, src/THaDecData.h, src/THaElossCorrection.C,
	src/THaExtTarCor.C, src/THaFormula.C, src/THaHelicity.C,
	src/THaHelicity.h, src/THaInterface.C, src/THaNormAna.C,
	src/THaNormAna.h, src/THaOutput.C, src/THaOutput.h,
	src/THaPhotoReaction.C, src/THaPhotoReaction.h,
	src/THaPrimaryKine.C, src/THaPrimaryKine.h, src/THaReacPointFoil.C,
	src/THaReactionPoint.C, src/THaRun.C, src/THaRunBase.C,
	src/THaRunParameters.C, src/THaSAProtonEP.C, src/THaSAProtonEP.h,
	src/THaSecondaryKine.C, src/THaSecondaryKine.h,
	src/THaTrackEloss.C, src/THaTrackInfo.h, src/THaTrackingModule.C,
	src/THaTrackingModule.h, src/THaTwoarmVertex.C, src/THaVar.h,
	src/THaVertexModule.C, src/THaVertexModule.h, src/THaVform.C,
	src/THaVform.h, src/THaVhist.C, src/THaVhist.h: Merge changes from
	Release-140 branch up to and including version 1.4.6.  NB: Helicity
	currently unavailable (work in progress).

2007-04-24  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Add new helicity classes THaHelicityDet,
	THaADCHelicity, THaG0Helicity, and THaG0HelicityReader.

2007-04-13  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/tscalhist_main.C: Modified LoadDataHistoryFile so that
	it can process hexidecimal or decimal data.  Recent data was
	recorded in hex for some odd reason.  The choice is overloaded
	(default is decimal)

2007-04-04  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: Make sure all track quantities are
	set to kBig (or 0 for integers) when constructing or Clear()ing a
	track. The overhead for doing so is small, the benefit is less
	chance of errors when people look at partially reconstructed tracks.
	Also, make fNDoF integer.  The track class looks overly complicated
	and should probably be cleaned up.

2007-03-23  Ole Hansen <ole@jlab.org>

	* src/Ext_TRotation.h: Remove obsolete workaround code for
	TRotation.

2007-03-23  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.C: Merge changes from Release-140 up to
	1.8.4.2.  (Updated comments and remove Ext_TRotation.h include.)

2007-03-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaCoincidenceTime.C, src/THaCoincidenceTime.h: Finally
	removed THaCoincidenceTime, which was super-ceded by the simpler and
	cleaner THaCoincTime class and its descendent (THaS2CoincTime) back
	in March of 2004.  This will hopefully descrease the amount of
	confusion about properly calculating the coincidence time.

2007-03-21  Ole Hansen <ole@jlab.org>

	* src/THaBeamModule.h: Enable ROOT I/O for THaBeamModule.

2007-02-08  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaS2CoincTime.C, src/THaS2CoincTime.h: Three items -- NOT
	 binary compatible with the Release-140 branch: * Added the ability to specify different detector names for the two    spectrometers -- the default is to have the planes of the same
	   name used on both arms.   * Improve the in-line documentation for the constructor and
	   function of the class.   * Merge the patches on the Release-140 branch

2006-09-26  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Fix compilation
	error due to missing include of VarDef.h.

2006-09-25  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: Print error and return count of zero if input of
	database values failed.  Modify DbString operator>> to place stream
	in error state if no string read.

2006-09-23  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: GetMatrix() for matrices with named rows now
	works (although CINT doesn't like calling it).  Fix incorrect
	behavior of find_constant(), esp. the linebreak mode.

2006-09-23  Ole Hansen <ole@jlab.org>

	* src/THaDB.h, src/THaFileDB.h, src/VarDef.h: Rename TagDef to
	DBRequest.

2006-09-18  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: When reading an array, clear the array when the
	key is found so we don't append the new data.  Reserve sufficient space in temporary vectors when getting C-style
	arrays.  Clear a matrix only if the requested key is actually found.

2006-09-18  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C, src/THaFileDB.h: Make "system" and "attr"
	parameters of FindEntry() const char*.

2006-09-15  Ole Hansen <ole@jlab.org>

	* src/THaDB.h, src/THaFileDB.C, src/THaFileDB.h, src/VarDef.h: 
	Consolidate Read/WriteArray functions in THaFileDB.  Change type of
	"number of element" counter variables to UInt_t for consistency with
	STL size_types.

2006-09-14  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: Warn user if invalid time stamps found, i.e. a
	line that looks like a time stamp but fails to convert to a valid
	time.  Such lines are ignored as if they were comments, which isn't
	necessarily what is intended, and so loud and clear warnings are
	good.

2006-09-14  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: In IsDate(), replace sscanf with a string stream
	and add better protection against invalid dates.

2006-09-14  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: Print warning if time stamps in a file are found
	to be out of order.  Also, make SeekDate() work correctly
	(hopefully).

2006-09-12  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C: Also treat as comments lines that start with
	whitespace followed by a '#'.

2006-09-12  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.h: Make all actually static functions properly so.

2006-09-12  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C, src/THaFileDB.h: New function SeekDate(), a
	wrapper to FindEntry(), replaces calls like
	FindEntry(string("JUNK"),string("JUNK"),stream,date)

2006-09-11  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C, src/THaFileDB.h: - Change the behavior of FindEntry() to match that of   THaAnalysisObject::LoadDBvalue, i.e. time-stamps are not   required to be in ascending order (though that is preferred),   and data may be stored incrementally, i.e. only changes need to be   recorded with new time-stamps. This makes for a much more
	  human-readable file format.  - Change the format of entries to be consistent with the old   file-based system, i.e."key = value". This allows for old run
	  databases to be reused directly.  - Fix apparently broken DbString::operator>> which did not drop the   initial tab but kept appending it.  - Do not try to reload database files that could not be loaded on a   prior request.  - In all Read functions, skip processing immediately for database
	  files that were not loaded instead of trying to parse an empty
	string.

2006-09-11  Ole Hansen <ole@jlab.org>

	* src/THaDB.h: Specialized functions GetMatrix/PutMatrix (for
	reading/writing a matrix with named rows) get an extra argument, the
	matrix name.  In this way, these functions access database content
	in the same way as all other functions, namely through a key
	consisting of system name, attribute name, and date.

2006-09-01  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Make gHaDB available from the command line.

2006-09-01  Ole Hansen <ole@jlab.org>

	* src/THaFileDB.C, src/THaFileDB.h: Extend to support input from
	several database files, not just one large catch-all file.  Entries
	may now be located in individual files under $DB_DIR (in the same
	way as with the old system implemented in THaAnalysisObject).  Also,
	read a separate run database file (run.db) if it exists.  The search
	algorithm is implemented in LoadFile(), which is taken from
	THaAnalysisObject::GetDBFileList and THaAnalysisObject::OpenFile.
	The supported file format currently differs from the one used by the
	THaAnalysisObject functions.

2006-09-01  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C: Assign a THaFileDB to gHaDB by default.

2006-08-30  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalhist_main.C: add ntuple.  (analysis of end-run
	history)

2006-08-30  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: read parameter file (if exists) to
	over-ride defaults; small improvements in filtering data

2006-08-28  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaDBFile.C, src/THaDBFile.h,
	src/THaFileDB.C, src/THaFileDB.h, src/THaInterface.C: Rename
	THaDBFile to THaFileDB.  The old name suggests that the class
	represents a (single) database file, while it actually represents
	the interface to a file-based database.

2006-08-25  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDecData.h: Maybe it was intentional, but the
	BdataLoc::ThisIs method had been using just a sub-string comparison
	to match to the variable names. This led to problems if there was a
	'bit6', a 'Lbit6', a 'Rbit6', etc. since they would all match up.
	This also might be what caused odd-behavior a year or so ago when
	attempts were made to look at channels named like 'Rs1' vs. 'Rs1b',
	etc.  Changed the comparison in ThisIs to use the string operator==.

2006-08-25  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaADCHelicity.C,
	src/THaADCHelicity.h, src/THaG0Helicity.C, src/THaG0Helicity.h,
	src/THaG0HelicityReader.C, src/THaG0HelicityReader.h,
	src/THaHelicityDet.C, src/THaHelicityDet.h: Re-organized code. Beam
	helicity is now a detector with the abstract interface implemented
	by THaHelicityDet, which in turn should be part of a beam apparatus.
	There is one helicity detector per HRS arm instead of the old single
	class handling both arms - of which one was sometimes (or often) not
	present.  Specific implementations include: THaADCHelicity - in-time mode, using ADCs - for analyzing old data.
	THaG0Helicity  - delayed mode, using G0 helicity electronics and
	predictor THaHelicity    - in-time mode, using ADCs and G0 helicity
	                 electronics with delay=0 (not finished yet).  There is also a helper class, THaG0HelicityReader, which implemets
	the code needed to read out the G0 helicity electronics.  This is a preliminary untested version (preview), which is not yet
	compiled by default. Stay tuned...

2006-08-25  Ole Hansen <ole@jlab.org>

	* src/THaDBFile.C, src/THaDBFile.h, src/THaFileDB.C,
	src/THaFileDB.h: Add detailed class description/documentation at
	beginning of implementation file.  Remove unneeded includes and pass
	TDatime objects by reference everywhere.

2006-08-25  Ole Hansen <ole@jlab.org>

	* src/THaDB.C, src/THaDB.h, src/THaGlobals.h, src/THaInterface.C: 
	Move gHaDB to THaGlobals.h and initialize it in THaInterface.
	Remove unneeded includes from THaDB.h.

2006-08-15  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Increase verbosity of call to OPEN of run
	database. User is now informed of successful and unsuccessful
	attempts at opening db_run.dat.

2006-08-15  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Let Init() report that database file
	error occurred in Init(), not OpenFile().

2006-08-11  Ole Hansen <ole@jlab.org>

	* src/THaHelicity.C, src/THaHelicity.h, src/THaHelicityDet.C,
	src/THaHelicityDet.h: Make THaHelicity an implementation (not a
	member) of THaHelicityDet.  One now needs to add instances of
	THaHelicity, not THaHelicityDet, to a beam apparatus.

2006-08-07  Ole Hansen <ole@jlab.org>

	* hana_scaler/haScal_LinkDef.h, src/HallA_LinkDef.h: Remove explicit
	link statements for STL instances.that became unavailable in CINT
	once they were used in any of our class header files.  It turns out that our versions of ROOT did not include the CINT
	extension modules, which must be built separately with "make
	cintdlls; make install".  (The ROOT build documentation contains
	exactly one cryptic line on this, viz. in README/BUILDSYSTEM.)  Once
	these libraries are available, virtually all of STL can be used
	under CINT without further ado.

2006-08-07  Ole Hansen <ole@jlab.org>

	* SDK/UserScintillator.cxx: Replace fApparatus with calls to
	GetApparatus() for compatibility with official version 1.4.

2006-08-03  Ole Hansen <ole@jlab.org>

	* src/THaHelicityDet.C, src/THaHelicityDet.h: Add new class
	THaHelicityDet - essentially the version from GEn branch.

2006-08-03  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_decode/THaHelicity.C,
	hana_decode/THaHelicity.h, hana_decode/haDecode_LinkDef.h,
	src/HallA_LinkDef.h, src/THaHelicity.C, src/THaHelicity.h: Move
	THaHelicity from hana_decode into src and replace with Bob's latest
	version from adaq cluster.  Include the new THaHelicityDet class.
	TODO: The way I see it, THaHelicityDet should be an ABC, and
	THaHelicity an instance of it.

2006-07-30  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaCodaDecoder.h,
	hana_decode/THaEvData.C, hana_decode/THaEvData.h,
	src/THaAnalyzer.C, src/THaAnalyzer.h, src/THaEvent.h, src/THaRun.C: 
	Remove helicity-related code from decoder. Helicity will be handled
	by a detector class (to be checked in shortly).

2006-07-27  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: FWIW, make GetDBFileList
	system-independent by using ROOT's TSystem API instead of direct
	Unix system calls.

2006-07-14  Rob Feuerbach <feuerbac@jlab.org>

	* hana_scaler/THaScalerDB.h: Remove extra qualifiers in declaration
	sections -- they confuse gcc4.

2006-07-13  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaRun.C: Have != work consistently with the == operator. The
	previous != definition did not handle split-files correctly, and so
	the definition was simplified to just the NOT of ==.

2006-07-13  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: gcc4 also sets HAS_SSTREAM.

2006-07-12  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.5.0-cvs

2006-07-11  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaEpics.C,
	hana_scaler/THaScaler.C, hana_scaler/THaScalerDB.C,
	hana_scaler/THaScalerDB.h: Fix misc. unclean data typing. Remove
	explicit std:: scoping in implementation files (which use namespace
	std anyway).

2006-07-11  Ole Hansen <ole@jlab.org>

	* src/THaCut.C, src/THaFormula.C: Fix subtle bug introduced with a
	change to TFormula::Analyze in ROOT 4: DefinedVariable() must now
	return -1 if the variable is not found.  The negative return values
	-2 and -3 will prevent further parsing of the string. (In ROOT 3 and
	earlier, any negative return value would result in further parsing.)
	In particular, this affected expressions like "!Variable", where
	"Variable" was a perfectly good name.

2006-07-11  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.h: Fix bug introduced in prior revision: restore
	default argument of constructor so that we have a working default
	constructor, THaVDCCLuster().

2006-07-06  Ole Hansen <ole@jlab.org>

	* VDCsim/Makefile, VDCsim/Makefile.vdcsimgen, VDCsim/THaVDCSim.cxx,
	VDCsim/THaVDCSim.h, VDCsim/THaVDCSimDecoder.cxx,
	VDCsim/THaVDCSimDecoder.h, VDCsim/THaVDCSimLinkDef.h,
	VDCsim/THaVDCSimRun.cxx, VDCsim/THaVDCSimRun.h,
	VDCsim/VDCsim_LinkDef.h, VDCsim/vdcsimgen.cxx,
	VDCsim/vdcsimgen_LinkDef.h: Merge VDC simulation package from
	Summer04 branch.

2006-07-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C, src/THaSpectrometer.C: Fix comments.

2006-07-06  Ole Hansen <ole@jlab.org>

	* src/THaFormula.h: Merge fix from Summer04 branch: Properly handle
	ROOT 4.04 and up, while maintaining compatibility with older
	versions.

2006-07-06  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Merge from Summer04 (VDC simulation) branch:
	Properly handle EOF in ReadOneEvent() - just quit, don't count it as
	a CODA error ;)

2006-07-06  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCCluster.C,
	src/THaVDCCluster.h: Merge fixes from Summer04 (VDC simulation)
	 branch: - Important bug fix in THaVDC: don't use a single plane spacing,    but allow for different spacings between U1-U2 and V1-V2.     Original code used single value (U1-U2 spacing), causing the V
	   slopes to be off.     This may affect tracking results! Re-optimization might be
	 necessary.  - add fLocalSlope in THaVDCCluster

2006-07-06  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C: Merge the fixes from Summer04 branch and clean
	up Decode().

2006-06-29  Ole Hansen <ole@jlab.org>

	* src/THaTrackingModule.h: Merge from GEn branch
	(gen-e02013_merge1).  Undo revision 1.4 that made fTrk a TRef.
	Tracks are event-by-event data, and so we wouldn't want to write
	them with the tracking module. Instead, disable ROOT I/O of fTrk.

2006-06-29  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Merge changes from GEn branch: - disable error on change of output file name (to suppoer split
	output files) - disable error on overlapping event ranges (to support split input
	files) - count raw events, not physics events  (might want to revisit that) - additional benchmarks for CoarseTracking, CoarseReconstruct, and
	Tracking

2006-06-29  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaEvData.h: Merge
	improved code for handling of prescale event types from GEn branch
	(gen-e02013_merge1).

2006-06-29  Ole Hansen <ole@jlab.org>

	* hana_scaler/Makefile, hana_scaler/THaScaler.C,
	hana_scaler/THaScaler.h, hana_scaler/scaler.map,
	hana_scaler/tscalring23_main.C, hana_scaler/tscalroc23_main.C: Merge
	ROC23 and other scaler updates from GEn branch (gen-e02013_merge1).

2006-06-29  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C, src/THaOutput.C: Merge output file size limit
	mods from GEn branch (gen-e02013_merge1).

2006-06-29  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h: Merge from GEn branch
	(gen-e02013_merge1).  Un-inline a number of not time-critical
	functions for more flexibility.  Make GetDetector() virtual. Someone
	will need it some day, I just know it.

2006-02-19  Ole Hansen <ole@jlab.org>

	* src/THaShower.C, src/THaVDCCluster.C: Fix compilation warnings.

2006-02-17  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C: Switch output back from "hex" to "dec"
	after printing error code in staterr()

2006-02-17  Ole Hansen <ole@jlab.org>

	* src/THaCodaRun.h: Remove unnecessary TDatime.h include.

2006-02-17  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: Add support for Hall A style
	continuation run segments (*.dat.1, *.dat.2 etc.)

2006-02-17  Ole Hansen <ole@jlab.org>

	* src/THaRunBase.C: Fix compilation bug for older ROOT version &
	remove C-string functions.

2006-02-14  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Repair the major bug introduced with revision
	1.32.  fRun better be a real copy of the last analyzed run object -
	the entire logic of analyzing multiple runs depends on having the
	last analyzed run available.

2006-02-10  Ole Hansen <ole@jlab.org>

	* src/THaScintillator.C: Restore debug printf from version 1.6,
	which was acidentally overwritten in 1.8.

2006-02-10  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCrateMap.C: Added JLab F1-TDC and CAEN 792 to the
	known and default CrateMap.

2005-12-15  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSubDetector.h: Change fDetector to private, and suggest
	using GetDetector instead.

2005-12-15  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h, src/THaDetector.C,
	src/THaDetector.h, src/THaDetectorBase.C, src/THaDetectorBase.h,
	src/THaNonTrackingDetector.C, src/THaNonTrackingDetector.h,
	src/THaScintillator.C, src/THaScintillator.h,
	src/THaSpectrometerDetector.C, src/THaSpectrometerDetector.h,
	src/THaSubDetector.C, src/THaSubDetector.h,
	src/THaTrackingDetector.C, src/THaTrackingDetector.h,
	src/THaTrackingModule.h, src/THaVDC.C, src/THaVDCPlane.C,
	src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Changes to be able to
	write out further information about the detectors directly to a ROOT
	file. The thought is to have the apparatus (with its detectors)
	written straight to the UserInfo header portion of a TTree.  The THaScintillator class is fully prepared for this now. Others
	will follow.  NOTE: in order to make this work, some pointers between detectors or
	from detector to apparatus were replaced with light-weight
	intelligent ROOT pointer-like TRef objects. This avoids writing out
	multiple copies of the same objects and keeps them correlated.

2005-12-15  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaFormula.h: Make compilation warning-less by doing same ugly
	const_cast ROOT does.

2005-12-13  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Setup to write
	out the apparatuses/detectors themselves. This includes the 'date'
	used to initialize the original object.

2005-12-13  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCodaDecoder.C: Modified decoding of 767 TDC's with
	experience from looking at F1-TDCs.  Upon exiting the 767 decode
	stage, the pointer 'p' points at the last word from the 767's, such
	that the next iteration looks at the first 'non-767' word. This
	prevents skipping words in the data.

2005-12-13  Rob Feuerbach <feuerbac@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: Add ClassDef for
	THaScaler, and quiet the compilation warnings.

2005-12-13  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.h, src/THaDBFile.h, src/THaFileDB.h: Add comment to
	ClassDef line for auto-documentation.

2005-12-11  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaInterface.C: Set global pointers to 0 after deletion for
	clarity. This was noticed when reading objects from a root-file that
	registered variables with gHaVars; upon exiting the global variables
	were deleted before the files are closed, so an attempt to
	un-register the variables tried to use a defunct gHaVars object.

2005-12-02  Rob Feuerbach <feuerbac@jlab.org>

	* docs/FAQ.html: Add short explanation for long compile times when
	modifying a header file.

2005-11-28  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.4-cvs.

2005-11-22  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCodaDecoder.C: Put the 'DEBUG' back infront of a
	printout.

2005-11-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: Change fRun from a pointer
	to a COPY of "run", to a pointer to "run", and so commented out the
	deletion/copying commands. They are only commented out for now, but
	the assignment "operator=" was broken and led to a bad delete.

2005-11-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaOutput.h: With GeN we have 'spare' classes with several
	hundred channels. Increase the upper-sane limit on number of written
	out words.

2005-11-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalysisObject.C: Provide an initial value of 'false' to
	fOKOut (was uninitialized).

2005-11-22  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCodaDecoder.C: For F1-TDC decoding, make certain
	that 'p' does not skip any words, especially when leaving a module.

2005-11-21  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaSlotData.C: For DAQ-debugging: print out HOW MANY
	extra data words are present.

2005-11-07  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaCodaDecoder.C: Bugfix in F1 readout, now the
	routine ends with the pointer at the last dataword (as it should)

2005-10-24  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaShower.C: Loosened up the formatting restrictions on the
	Shower DetectorMap (user request). Portions of lines after a '#' are
	ignored (at least in the channel-map section).

2005-10-24  Rob Feuerbach <feuerbac@jlab.org>

	* : Short section of CODA run 1238 of the Spin Duality experiment
	E01-012, such that users can have a short working example
	out-of-the-box.

2005-10-24  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaSlotData.C: Make the "out of bounds" error message
	show the crate and slot number, as well as the channel number to aid
	in tracking down problems.

2005-10-24  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCodaFile.h, hana_decode/evio.C, hana_decode/evio.h: 
	Modified evio routines to pass pointers (void*) instead of int's
	casted between pointers. The problem was noticed on 64-bit Linux AMD
	machines under gcc4, where int's are 4-bytes but the pointers are
	8-bytes.

2005-09-30  Ole Hansen <ole@jlab.org>

	* src/THaUnRasteredBeam.C: Use [] instead of at() for STL vectors.
	at() is not available in older STL implementations.

2005-09-30  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Replace ambiguous abs() with TMath::Abs()

2005-09-30  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.h: Add missing <string> header.

2005-09-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaPrimaryKine.C, src/THaPrimaryKine.h: Added lab-momentum
	components of the virtual photon to the output.

2005-09-21  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaScintillator.C: Added Ole's style of time/date stamping to
	the database file. Also now output a reconstructed dE/dX-like value,
	constructed from the geometric mean of the corrected ADCs, the
	expected exponetial signal loss, and the paddle thickness. The
	track's angle is not taken into account.

2005-08-24  Bodo Reitz <reitz@jlab.org>

	* src/THaDetMap.C: F1 TDC support

2005-08-24  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaCrateMap.h, hana_decode/THaEvData.h: increased
	MAXROC to 32, needed for E02013

2005-08-01  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalyzer.C: Made certain that the THaRun object gets
	written to the 'first' root-file, and that the end-of-analysis
	'writes' are to the current root-file. Keep in mind that ROOT can
	automatically split a tree across multiple files, to keep the
	filesize below a specified (default is ~2GB) limit.  This might fix some end-of-analysis crashes we have seen.  Should look into whether the fTree->Write in THaOutput is actually
	necessary.

2005-07-29  Bodo Reitz <reitz@jlab.org>

	* src/THaUnRasteredBeam.C, src/THaUnRasteredBeam.h: Added the
	possibility to use a running average with variable depth for the
	beampositon instead of a single BPM reading. Setting the depth to
	zero or one (default) results in using event by event readings of
	the BPMs (noise corresponding to 100um)

2005-07-25  Bodo Reitz <reitz@jlab.org>

	* src/THaDetMap.h: ncreased decmapsize to 300 (needed for MWDCs were
	wire numbers decrease)

2005-07-06  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalysisObject.C: Fix bug LoadDBvalue, which had caused a
	dropped character/digit at the end of a value if there was NOT a
	space after the '=' sign. A bit too picky.

2005-06-16  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaEpics.C, hana_decode/THaEvData.C: Pre-emptive
	 strike against bugs that are sensitive to gcc-3.3.4 and 64-bit
	(changed size of size_t) configurations. Thanks Doug!

2005-06-11  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/scaler.map: update scaler map
	for bigbite setup (e01015).  Also for that setup there was no
	TS-accept plugged into the bigbite scalers, so if there is no
	TS-accpt the default normalization slot is the one where a clock is
	plugged in.  The code needs this to make it faster.  Probably would
	be better to make scaler-map provide this info instead but this is
	ok for now.

2005-06-10  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.C: Since THaScalerDB returns list of
	short names (i.e. plural) instead of just one (this was the problem
	fixed with my last check-in of THaScaler and THaScalerDB), we now
	need to use this here

2005-06-10  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h: fixed a bug
	whereby if there were two or more names in scaler.map for one
	channel, only one was taken (how did I miss that ?).  example:  the
	clock may be called clock or T8.  Solution was to make channame a
	map to a vector of strings in THaScalerDB and to make nomrmap a
	multimap of strings to int in THaScaler

2005-05-13  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCodaDecoder.C: Added the F1 TDC into the vme_decode
	routine. Keep in mind that the channels for the module are
	renumbered (to be sequential) compared to what is labelled on the
	module itself.  Also made sure the vme_decode loops over all slots in a crate, not
	just map->getNslot since the modules could be loaded into the crate
	non-contiguously.

2005-04-21  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaCherenkov.C, src/THaCherenkov.h: Each track now gets a
	plane-intercept 'trx' and 'try'. Previously, these were only
	calculated in the case of single-track events. In addition, the
	pathlength (from the DCS origin at the VDCs) to the detector is
	reported, which should be useful for fine-tuning survival-probablity
	calculations.

2005-04-21  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSpectrometerDetector.C: Added to the 'documenting comment'
	of CalcTrackIntercept

2005-04-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSpectrometer.C, src/THaTrack.C, src/THaTrack.h,
	src/THaVDC.C, src/THaVDCAnalyticTTDConv.C,
	src/THaVDCAnalyticTTDConv.h, src/THaVDCCluster.C,
	src/THaVDCCluster.h, src/THaVDCHit.C, src/THaVDCHit.h,
	src/THaVDCPlane.C, src/THaVDCTimeToDistConv.h, src/THaVDCUVTrack.C,
	src/THaVDCUVTrack.h: Added track chi2 calculations to monitor the
	quality of the track fitting.  To do this:  1) THaVDCHit had fdDist (uncertainty) and ftrDist (distance from
	    track to wire) members added to it.   2) THaTrack has a new fChi2 and fNDoF members  3) THaVDCCluster calculates the chi2 for each cluster relative to
	    the cluster's track.   4) THaVDCTimeToDistConv and THaVDCAnalyticTTDConv modified to
	    permit the passing of an uncertainty in the drift distance; right
	    now THaVDCAnalyticTTDConv starts with a 4ns uncertainty in the drift
	 time (~200 microns).  5) THaVDC, THaVDCPlane, and THaSpectrometer modified to do the call
	    the chi2 calculations and define the new global variables.  THaVDCCluster also has a new 'FitSimpleTrackWgt' method (not used
	now) that performs the track fitting, respecting the different
	uncertainties in the drift distances. This method is still being
	shaken-down.

2005-04-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaTrackInfo.h: Clarified the comments: unlike in THaTrack,
	the fX, fY, fTheta, and fPhi here are given at the TARGET.

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C: When processing a detector map: handle blank lines
	more gracefully, and use both '#' and '!' as comment characters.

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C, src/THaDecData.C, src/THaSpectrometer.C,
	src/THaTrack.C, src/THaTrack.h, src/THaVDC.C,
	src/THaVDCAnalyticTTDConv.C, src/THaVDCAnalyticTTDConv.h,
	src/THaVDCCluster.C, src/THaVDCCluster.h, src/THaVDCHit.C,
	src/THaVDCHit.h, src/THaVDCTimeToDistConv.h, src/THaVDCUVTrack.C,
	src/THaVDCUVTrack.h, src/THaVform.C: Undoing an accidental check-in.
	Sorry.

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C, src/THaDecData.C, src/THaSpectrometer.C,
	src/THaTrack.C, src/THaTrack.h, src/THaVDC.C,
	src/THaVDCAnalyticTTDConv.C, src/THaVDCAnalyticTTDConv.h,
	src/THaVDCCluster.C, src/THaVDCCluster.h, src/THaVDCHit.C,
	src/THaVDCHit.h, src/THaVDCTimeToDistConv.h, src/THaVDCUVTrack.C,
	src/THaVDCUVTrack.h, src/THaVform.C: THaDB.C

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaVDCPlane.C: Bug fix -- don't add the apparatus name to a
	THaApparatus::GetDetector(detnm) call.

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Includes the THaTriggerTime class.

2005-03-18  Rob Feuerbach <feuerbac@jlab.org>

	* src/HallA_LinkDef.h, src/THaHRS.C, src/THaTriggerTime.C,
	src/THaTriggerTime.h, src/THaVDCPlane.C, src/THaVDCPlane.h: 
	Implemented simple method to account for large shifts in the VDC
	timing that depend upon the trigger-type.

2005-03-03  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h: Added the Clear method,
	which calls Clear() of all daughter detectors.  The classes that
	inherit from THaApparatus class appear to assume that this had
	happened, and it is a repeating source of bugs in
	experiment-specific code.

2005-03-01  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaVDC.C, src/THaVDC.h: Add the YTA and PTA matrix elements,
	which contain the dependence of phi-target and y-target on the
	ABSOLUTE VALUE of theta, found necessary in fully optimizing the
	data taken with the septum magnets.

2005-02-28  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: Simpler and more elegant way to set the
	time interval (and therefore no need to setup before and after Init,
	just do it once either before or after).  This is in regards to the
	Bigbite problem of no clock in the scaler bank.

2005-02-28  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: The following
	new scalers and fixes:  1) Add default setup data for N20/Bigbite
	scalers; 2) Fix default slot and chananel for clock so it is easily
	defined in scaler.map; 3) For users who unwisely have no clocks in
	their scalers, provide a public method to input an average time
	interval between scaler events -- for crude (10% but probably not
	1%) time calibration.  This was an issue with Bigbite.

2005-02-24  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSecondaryKine.C, src/THaSecondaryKine.h: Add the variables
	Prec_x, Prec_y, and Prec_z to report the momentum vector of the
	recoiling (un-observed) system. Now all information about the
	recoiling particle/system is available (Erecoil, Mrecoil, and
	Prec_?).

2005-01-28  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerDB.C: cleanup: get rid of an ifdef test block
	(it was commented out, so was doing nothing)

2005-01-28  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Fix Makefile to have correct reference to THaTrackOut.
	Also, Podd's libraries for linux will always have debugging symbols
	written out; the DEBUG flag only indicates whether full optimization
	should be done or not (since gcc can produce optimized code with
	debug symbols).

2005-01-27  Bob Michaels <rom@jlab.org>

	* src/THaNormAna.C, src/THaNormAna.h: add bcm downstream x10
	monitor, and fix channel number of upstream x10 monitor (thanks C.
	Ferdi)

2005-01-27  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: make comments more readable

2005-01-27  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: correct the web link for documentation

2005-01-27  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerDB.C: obtain descriptions for helicity- and
	helicity+ from helicity0 scaler if they were tied.  This affected
	THaScalerGui only, since it was the only user of the descriptions

2005-01-27  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.C: Initialize correspondence of pages to
	slots (default is 1:1) at a better point in code.  Make default
	button names more sensible (if a button isnt defined in scaler.map
	it is just the channel number)

2005-01-27  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: bring scaler.map up-to-date for present
	experiment.  xscaler directives implemented.  data display agrees
	with old xscaler

2005-01-26  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalasy_main.C, hana_scaler/tscalevt_main.C,
	hana_scaler/tscalfile_main.C, hana_scaler/tscalgui_main.C,
	hana_scaler/tscalntup_main.C, hana_scaler/tscalring_main.C,
	hana_scaler/tscalroc11_main.C: STANDALONE test codes (which are
	turned off by default) refurbished to use abstract THaEvData, with a
	few new tests added

2005-01-26  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.C, hana_scaler/THaScalerGui.h: xscaler
	GUI now driven by scaler.map file, but has sensible defaults too.
	This fixes all the FIXME comments about awkward hard-coded
	assumptions

2005-01-26  Bob Michaels <rom@jlab.org>

	* hana_scaler/ChangeLog, hana_scaler/Makefile, hana_scaler/README,
	hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h,
	hana_scaler/haScal_LinkDef.h, hana_scaler/scaler.map: simplification
	of internal structure of THaScaler package.  More intelligent
	database.  Old codes will still work (public interface did not
	shrink, only grew), but new features added.  See ChangeLog and
	http://hallaweb.jlab.org/equipment/daq/THaScaler.html which
	documents the usage and the changes

2005-01-26  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaNormScaler.C, hana_scaler/THaNormScaler.h,
	hana_scaler/THaScalerBank.C, hana_scaler/THaScalerBank.h: Remove
	obsolete classes.  This makes the THaScaler package much simpler

2004-12-29  Bob Michaels <rom@jlab.org>

	* hana_decode/THaGenDetTest.C, hana_decode/THaGenDetTest.h: Test
	code that was broken when THaEvData became abstract (not that it
	matters much, but I dont like code that doesnt compile, so we either
	fix it or delete it)

2004-12-29  Bob Michaels <rom@jlab.org>

	* hana_decode/epics_main.C, hana_decode/prfact_main.C,
	hana_decode/tdecex_main.C, hana_decode/tdecpr_main.C,
	hana_decode/tstio_main.C: These codes were all broken when THaEvData
	became abstract (gee, I really thought I fixed this months ago). The
	codes are only used by me for testing things.

2004-12-29  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C: add another ifndef for STANDALONE test
	mode (does not matter for normal usage)

2004-12-12  Bob Michaels <rom@jlab.org>

	* src/THaNormAna.C, src/THaNormAna.h: add the synchronous scalers
	(roc11) needed by DVCS

2004-11-30  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: fix bugs in myatof (oops)

2004-11-17  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: put min/max limits on IA set points

2004-11-16  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: add system call to script that does
	feedback; adjust the cuts; add function myatof since atof does not
	work

2004-11-15  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: improve the timescale for feedback on
	qasy

2004-11-15  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerGui.C, hana_scaler/scaler.map,
	hana_scaler/tscalgui_main.C: add the SRC scalers.  This is still the
	old way to add scalers (awkward, but works).  I am still working on
	the improvements which will make it easier... but this is good
	enough to start SRC experiment if necessary.  The standalone codes
	(e.g. xscaler) is already deployed on ADAQ computers.

2004-11-12  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalyzer.C: Be certain that to be in the output file
	(fFile) during the THaOutput Init, keeping track of the previous
	state (copying gDirectory's value).  We had found a case where the user was reading in simulated data
	from a ROOT file, and so gDirectory was not pointing at the correct
	directory during initialization, and so the tree was not owned by
	the output file but just languished in memory until
	analyzer->Close().  NOTE: the current directory is only important when CREATING a TTree
	or TH1; you can be in any directory while ::Fill'ing it.

2004-11-11  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Add THaTrackOut, the example of direct object output to
	the Tree.

2004-11-10  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalysisObject.C: Req. changes to THaAnalysisObject for the
	object output.

2004-11-10  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalfbk_main.C: Online feedback on charge asymmetry.
	This version just keeps a log of what it would do.  I am still
	waiting on the EPICS hooks to finish the job

2004-11-10  Rob Feuerbach <feuerbac@jlab.org>

	* src/HallA_LinkDef.h, src/THaAnalysisObject.h, src/THaAnalyzer.C,
	src/THaAnalyzer.h, src/THaTrackOut.C, src/THaTrackOut.h: Added
	"InitOutput" routines to THaAnalysisObject, such that detectors,
	physics modules, etc. can easily write complete objects to the
	standard output tree.  The THaTrackOut class is an example of how to do this. It writes a
	TLorentzVector, corresponding to a track, to the tree.

2004-10-14  Bob Michaels <rom@jlab.org>

	* docs/output.html: Explain why users should avoid the ambiguous =0
	assignment for EPICS data string assignments.  Now lets see if they
	ever read it.

2004-10-14  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: Return to 0 as default data (as Rob F. wanted).
	Hopefully users will read the documentation and avoid the ambiguous
	=0 assignment

2004-10-14  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: return -1e32 instead of 0 if the EPICS variable
	string assignment was not found.  This is consistent with the rest
	of EPICS convention of returning -1e32 for undefined.  Previously
	returned 0 which could be confusing if one had an assignment like
	Fred=0 and found data other than Fred.

2004-10-13  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalevt_main.C, hana_scaler/tscalring_main.C,
	hana_scaler/tscalroc11_main.C: fix the broken test routines which
	broke because THaEvData became abstract.  These codes are useful for
	online scaler analysis as well as testing all features of the scaler
	code.  Note, this has nothing to do with my upgrade (which will not
	be checked in until I discuss it)

2004-10-13  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaDecoder.C: fix the comment that says I am the
	author (I am not)

2004-10-06  Ole Hansen <ole@jlab.org>

	* docs/FAQ.html, docs/index.html: Merge documentation updates from
	Release 1.3 into trunk.

2004-10-04  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: Add SetState() method.  The
	state of the object is defined by the mode (G0 delayed mode versus
	in-time), the delay (if delayed), the overall sign (calibrated by
	Moller polarimeter), the choice of which spectrometer data to use
	for final decision about helicity (LHRS or RHRS), and whether or not
	to check the consistency of redundant data.  The check on ADC data
	was updated.  I notice that for DVCS about 0.4% of data disagree
	between ADC and the TIR I/O register.  Oh well, probably a delay
	issue, but not a bug of the code, I think.  Otherwise the results
	look like before.

2004-09-26  Bob Michaels <rom@jlab.org>

	* docs/output.html: Slight improvemente to string-to-double
	assignment of EPICS data.  Although the strings that contain white
	space must be in single quotes (the RF On example), the strings that
	do not have white space may or may not have it (the Yes=1 example --
	Yes can have single quotes or not)

2004-09-26  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: Regarding string-to-double assignment of EPICS
	data: the strings that dont have white space can have single quotes
	(or not), see ../docs/output.html.  Meanwhile, as a reminder (and
	this has not changed), the strings that have white space must have
	single quotes.

2004-09-26  Bob Michaels <rom@jlab.org>

	* docs/output.html: update explanation of how to do assignment of
	string EPICS data to double data in the tree.  Boy is this tedious

2004-09-26  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: allow single quotes on EPICS
	string variable assignment (but only if that strings contains white
	space, if it does not contain white space there should be no
	quotes).  See ../docs/output.html for explanation

2004-09-24  Bob Michaels <rom@jlab.org>

	* docs/output.html: update the documentation about output, to
	explain the new support for string EPICS data

2004-09-24  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: add support for optional strings
	of the form epicsvar=4 which assigns an epics string variable like
	epicsvar the number 4 to the output tree.  This was a request of
	Bodo Reitz

2004-09-24  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaDecoder.C, hana_decode/THaCodaDecoder.h,
	hana_decode/THaEvData.C, hana_decode/THaEvData.h: Add GetEpicsString
	method to support analysis of EPICS string data

2004-09-23  Ole Hansen <ole@jlab.org>

	* hana_scaler/THaScaler.C: Fix warning about comparison between
	signed and unsigned.

2004-09-21  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: In-time version of
	THaHelicity, modernized to use ROC11 I/O register to obtain helicity
	data.  Still some work to do to make this general (in-time vs
	out-of-time, choice of spectrometer, redundancy checks, etc), but
	should be good enough for DVCS experiment.  Out-of-time mode should
	still work by setting fgG0mode=1 in header.

2004-09-17  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: updated scaler.map (contains DVCS scalers)

2004-09-17  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaNormScaler.C: Fixed an obvious bug in
	THaNormScaler, which was only evident when the 1st channel was not
	defined in map file (normally it was)

2004-09-17  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerGui.C, hana_scaler/THaScalerGui.h,
	hana_scaler/tscalgui_main.C: add DVCS scalers

2004-09-01  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Make ROOT output file the current directory
	before writing final output.  This is a quick fix for problems we
	have when the input comes from a ROOT file as well (e.g. from a
	simulation). This could have further implications ... to be
	investigated. Works fine for now, though, and makes no difference
	for standard analysis using CODA input anyway.

2004-08-04  Ole Hansen <ole@jlab.org>

	* src/THaPrintOption.h: Add missing include of Rtypes.h (for
	ClassDef macro).

2004-08-03  Bodo Reitz <reitz@jlab.org>

	* src/THaBPM.C: type in the comments corrected (checking my CVS)

2004-07-28  Bodo Reitz <reitz@jlab.org>

	* docs/bpm.html: Added Warning about sign ambiguity.

2004-07-28  Bodo Reitz <reitz@jlab.org>

	* examples/BPM/get_rast_const.C: Bug-Fix: user has to decide about
	the sign of the raster corrections default values for the first half
	of 2004 are given

2004-07-28  Ole Hansen <ole@jlab.org>

	* examples/BPM/beam_db.dat, examples/BPM/check_bpm_calib.C,
	examples/BPM/cutdef.dat, examples/BPM/get_bpm_calib.C,
	examples/BPM/get_bpm_pedestals.C, examples/BPM/get_rast_const.C,
	examples/BPM/harp_results.txt, examples/BPM/my_first.C,
	examples/BPM/output.def, examples/BPM/test_tree.C: Merge BPM example
	files from Release 1.1 into trunk (forgotten merge)

2004-07-19  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaSlotData.h: can handle modules where the data from
	different channels comes randomly ( = not sorted by channels ) -
	needed for CAEN V767 TDCs it is still assumed that within one
	channel data is sorted by time or ADCvalue and of course this one is
	slower and needs more memory than the old one

2004-07-19  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaSlotData.C: can handle modules where the data from
	different channels comes randomly ( = not sorted by channels ) -
	needed for CAEN V767 TDCs it is still assumed that within one
	channel data is sorted by time or ADCvalue and of course this one is
	slower and needs more memory than the old one

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaCodaDecoder.C: added support for Caen V767 TDC
	warning: this TDC does not sort its rawdata according to channel
	numbers, it is random roughly ordered by raw-time

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* src/THaDetMap.C: added entry to support pipelined TDCs, especially
	Caen V767 needing a reference channel (copy of common
	start/stop/trg) to remove jitter

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* src/THaDetMap.h: support of pipelined TDCs (like Caen V767) which
	can only measure the relative timing between channels, but whose
	absolute time relative to the common have a big jitter. Therefore
	one channel needs to be a reference channel, which has a copy of the
	start. In the decoding of the detector class this reference channel
	needs to be subtracted, to remove the jitter of the common
	start/stop/trg.

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* hana_decode/THaCrateMap.C: added ROC17 with ten V767 TDCs for
	BigBite DC as default setting:

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* Makefile, src/HallA_LinkDef.h: added THaReacPointFoil

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* src/THaReacPointFoil.h: Reaction Point calculated using Beam and
	thin Foil at z=0

2004-07-15  Bodo Reitz <reitz@jlab.org>

	* src/THaReacPointFoil.C: Reaction Point calculated from Beamline
	and a thin Foil at z=0

2004-07-13  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C: Use new class THaCodaDecoder as the default
	decoder instead of THaEvData, which is now an abstract base class.

2004-07-13  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_decode/THaCodaDecoder.C,
	hana_decode/THaCodaDecoder.h, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, hana_decode/haDecode_LinkDef.h: From Ken
	Rossato: Modify THaEvData to be an abstract base class, and move
	implementation of CODA decoder to new class THaCodaDecoder.

2004-07-06  Bob Michaels <rom@jlab.org>

	* contrib/ParityData.cxx: fix small bug in assignment of profampr.
	Actually was fixed on adaq computers awhile ago

2004-06-14  Ole Hansen <ole@jlab.org>

	* Makefile: Add Calib and contrib subdirectories to srcdist.  Version is 1.3.0

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/THaOutput.h: Fix missing string definition.

2004-06-12  Ole Hansen <ole@jlab.org>

	* Makefile: Define SONAME linker flag and work around missing
	ldconfig for Solaris.  Define -DLINUXVERS etc. in ARCH section, so
	we can use it in src/HallA_LinkDef.h

2004-06-12  Ole Hansen <ole@jlab.org>

	* hana_scaler/haScal_LinkDef.h: Fix link errors due to precompiled
	STL classes on Solaris.

2004-06-12  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Put OS version defines
	(-DLINUXVERS etc.) into ARCH section, so we inherit it from the
	top-level Makefile, except when STANDALONE.

2004-06-12  Ole Hansen <ole@jlab.org>

	* hana_decode/swap_util.C: Add forgotten "using namespace std". This
	is C++ code now.

2004-06-12  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCrateMap.C, hana_decode/THaEvData.C: Fix name
	clashes of member variables with local variables.  (To avoid trouble
	like this, just name your member variables consistently.)

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Move THaScalerKey class into
	THaOutput implementation file. Clients have no need to know about
	it.  Remove THaScalerKey and THaOdata from CINT dictionary. They
	don't need to be in the dictionary, and their presence caused link
	errors on Solaris.

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Fix link errors with precompiled STL classes
	on Solaris. This probably will break scripts that use STL strings
	and vectors.  To six this, we need to remove all STL from analyzer
	class headers.

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Fix portability problem (THaString is not a close
	enough match to string on Solaris).  Also, remove unneeded explicit
	std:: scope qualifiers.

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C: Make nwire const as it should be, not static.

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.C: Fix hiding of member variables fX and fB
	by local variables.  Use new name of #define of Ext_TRotation
	extension.

2004-06-12  Ole Hansen <ole@jlab.org>

	* src/Ext_TRotation.h: Fix conflict of #define with class name.

2004-06-12  Ole Hansen <ole@jlab.org>

	* docs/RELEASE_NOTES.html: Updated for Release 1.3.

2004-06-10  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h, src/THaCut.C, src/THaCut.h,
	src/THaFormula.C, src/THaFormula.h: Merge from Release-128_final:
	Patches for ROOT 4.00

2004-06-10  Ole Hansen <ole@jlab.org>

	* src/THaRaster.C: Merge from Release-120 (thru 1.8.4.1): Add
	support for time-dependence of raster constants (last three lines of
	[Raster] section in database file).

2004-06-09  Bob Michaels <rom@jlab.org>

	* contrib/ParityData.cxx, contrib/ParityData.h: Add the UMass
	Profile scanner data

2004-06-09  Ole Hansen <ole@jlab.org>

	* src/THaBeamEloss.C, src/THaBeamEloss.h, src/THaElossCorrection.C,
	src/THaElossCorrection.h, src/THaTrackEloss.C, src/THaTrackEloss.h: 
	Add support for optional event-by-event pathlength calculation using
	z-coordinate from a vertex module.

2004-06-09  Bob Michaels <rom@jlab.org>

	* contrib/ParityData.cxx: completed destructor ("delete" all that
	was "new"); avoid filling sped[12] (access violation); add TDC for
	HAPPEX detector; put in correct default datamap; adjust the cuts
	that define event type bit pattern

2004-06-09  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaMatrix.C, src/THaMatrix.h: 
	Remove unused class THaMatrix.

2004-06-03  Ole Hansen <ole@jlab.org>

	* src/THaCherenkov.C, src/THaShower.C: Only add positive values to
	the ADC sums (ASUM_p and ASUM_c).  This gets rid of spurious
	negative contributions from unsuppressed pedestals.

2004-06-03  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Use correct mass of kaon in
	DefinePidParticles().

2004-06-03  Bob Michaels <rom@jlab.org>

	* contrib/ParityData.cxx, contrib/ParityData.h: add PrintMap method
	to check datamap, improve some comments, adjust histogram limits

2004-05-25  Bob Michaels <rom@jlab.org>

	* contrib/ParityData.cxx, contrib/ParityData.h: putting ParityData
	into new directory /contrib

2004-05-25  Bob Michaels <rom@jlab.org>

	* src/ParityData.cxx, src/ParityData.h: removing ParityData from
	/src

2004-05-24  Bob Michaels <rom@jlab.org>

	* src/ParityData.cxx, src/ParityData.h: put ParityData into /src
	directory.  But maybe we want a repository for software that is not
	part of the core ?  Anyway, it is here for now

2004-05-24  Bob Michaels <rom@jlab.org>

	* ParityData.cxx, ParityData.h: remove ParityData from main
	directory (it was a mistake to put it there

2004-05-21  Bob Michaels <rom@jlab.org>

	* ParityData.cxx, ParityData.h: Parity Data (i.e. HAPPEX electron
	detector, UMass sQsq scanner, new cavity XYQ monitors, kinematics,
	striplines, alignments).  Ok, the kinematics and the stripline BPMs
	are redundant with other classes elsewhere in the analyzer, but the
	results agreed.  Compile this with an SDK Makefile to make a shared
	object library (ask Bob how)

2004-05-14  Bob Michaels <rom@jlab.org>

	* src/THaNormAna.C: update comments about prescale factors, the
	method here will not work for filesplit files beyond the first file.
	Sigh.  At least the comments make this clear, but I have no time to
	fix it now (let a grad student do it ?)

2004-05-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: update the scaler.map that ships with
	hana_scaler

2004-05-12  Bob Michaels <rom@jlab.org>

	* src/THaNormAna.C: small improvements to comments

2004-05-12  Bob Michaels <rom@jlab.org>

	* src/THaNormAna.C, src/THaNormAna.h: Examples of how to do the
	Normalization analysis (deadtime, charge, bcm calibration, end-run
	summary)

2004-05-11  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add new physics module
	THaBeamEloss.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaBeamEloss.C, src/THaBeamEloss.h: First version of a beam
	energy loss correction module.  A beam eloss module corrects for
	energy loss _before_ the interaction (i.e. for incident particles),
	while a track eloss module corrects eloss _after_ the reaction (i.e.
	for outgoing particles).

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaBeam.h: Also copy the beam polarization from the run
	parameters in Update().

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaBeamInfo.C, src/THaBeamInfo.h: Let GetQ() return an integer
	as it should, not a double.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C, src/THaPrimaryKine.h: Dynamically cast the
	beam module to THaBeamModule, not THaBeam, so that the input can be
	a physics module as well, not only a beam apparatus.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaEpicsEbeam.C, src/THaEpicsEbeam.h: Add a scale factor for
	the EPICS ebeam data, so they can be converted to the required units
	of GeV if necessary.  Add access funtions to the module parameters.
	Update various comments.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaIdealBeam.C, src/THaIdealBeam.h: Fill the beam info once
	the beam parameters are known, so the module can be used as input to
	other modules.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaVhist.h: Undefine copy ctor and assignment operator.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaVform.C, src/THaVform.h: Implement copy constructor. Fix
	broken implementation of assignment operator.

2004-05-11  Ole Hansen <ole@jlab.org>

	* src/THaCut.C, src/THaCut.h, src/THaFormula.C, src/THaFormula.h: 
	Add copy ctor and assignment operator.

2004-05-10  Ole Hansen <ole@jlab.org>

	* src/THaCutList.C: Add missing cast of arguments of max() in
	MakePrintOption, which could lead to link errors. While at it,
	replace a temporary C-string with a TString.

2004-05-10  Ole Hansen <ole@jlab.org>

	* src/THaVform.C: Replace references to gHaVars with fVarList for
	consistency with base class.

2004-05-10  Ole Hansen <ole@jlab.org>

	* src/THaVform.C: Fix incorrect assignment of fOdata in Create(),
	which caused the THaOdata object to be managed by two THaVforms.
	Fix fixed string length limits in MakeFormula().

2004-05-10  Ole Hansen <ole@jlab.org>

	* src/THaVhist.C, src/THaVhist.h: Fix bug in destructor that caused
	segfault (upon analyzer->Close() or .q) if histogram used a
	predefined formula or cut.  Remember - when assigning pointers,
	someone else owns the pointee.  Also, remove Clear() and put member
	initialization into constructor.

2004-05-09  Ole Hansen <ole@jlab.org>

	* src/THaVform.C: Restore version 1.4 since the "bugfix" was
	ineffective.

2004-05-09  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Assign current run to gHaRun already during
	Init() because module initializers may need it.

2004-05-09  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.C: Remove non-standard malloc.h include.  Change
	C includes to C++ naming (stdlib.h -> cstdlib etc.)

2004-05-08  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: No longer automatically append the run number
	to the cut summary file name.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaEpicsEbeam.C: Fix several incorrect calculations in
	Process().

2004-05-07  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaEpicsEbeam.C,
	src/THaEpicsEbeam.h: First version of a beam info physics module
	that obtains the beam energy from an EPICS variable. Currently uses
	the raw EPICS data, not an average.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaBeamInfo.C: Simplify GetE() by using GetM().

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaBeam.C: In DefineVariables(), add the global variables for
	the beam info subobject.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaBeamModule.C, src/THaBeamModule.h: Add static GetRVarDef()
	method that returns a global variable definition block for the data
	in the beam info block.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Add a static
	method DefineVarsFromList() that allows other objects to define
	global variables conveniently even if they do not inherit from
	THaAnalysisObject.  (They must inherit from TObject, however).

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaRun.C: Disable scaler and helicity processing for data file
	prescan.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaVform.C: Skip deletion of formulas and cuts in Uncreate()
	in case ROOT is not initialized, i.e. when running the TROOT
	destructor.  Apparently, ROOT takes care of deleting formulas, so
	those objects will be gone at the time our destructor runs, causing
	a spurious segfault.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Scaler and EPICS processing now deals more
	intelligently with status results from preceding analysis.
	Processing of events with fatal errors is skipped; a kTerminate code
	is passed back, so the event loop is actually terminated.

2004-05-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Change the logic of the event type test in
	MainAnalysis() to process correctly events that are both physics and
	scaler events, for example.

2004-05-04  Ole Hansen <ole@jlab.org>

	* src/THaElossCorrection.h: Make constructor protected. Not strictly
	necessary, but clarifying.

2004-05-04  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add new class THaTrackEloss.

2004-05-04  Ole Hansen <ole@jlab.org>

	* src/THaElossCorrection.C, src/THaElossCorrection.h,
	src/THaTrackEloss.C, src/THaTrackEloss.h: Make THaElossCorrection an
	abstract base class for physics modules performing energy loss
	corrections.  New class THaTrackEloss performs track energy loss
	corrections and exports the THaTrackingModule API.

2004-04-30  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h,
	hana_decode/prfact_main.C: Allow to get prescale factors from event
	type 120 (new) or 133 (old).  See
	http://hallaweb.jlab.org/equipment/daq/dstruct.html (near the end)
	about prescale events.  The default is now to look for event type
	120, which existed after Nov 2003.  To use event type 133, one can
	THaEvData::SetOrigPS(133) to set the origin of the PS factors.  The
	prfact_main is a test code being updated.

2004-04-29  Ole Hansen <ole@jlab.org>

	* src/THaElectronKine.C, src/THaPrimaryKine.C, src/THaPrimaryKine.h: 
	Instead of beam apparatus, use new interface to THaBeamModule.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaRasteredBeam.C, src/THaUnRasteredBeam.C: Add call to
	Update() at the end of Reconstruct(). Update() ensures that the
	fBeamInfo is in sync with the fPosition and fDirection vectors.

2004-04-27  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add new classes THaBeamModule and
	THaBeamInfo.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaBeam.h: Add GetRunParameters() method.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaBeamInfo.C: Get the beam particle mass, charge, etc. via
	the beam apparatus, not via the global run object.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaBeam.C, src/THaBeam.h: Give THaBeam apparatus class the
	THaBeamModule property so it can be used to provide beam data input
	for physics modules.  Obtain beam momentum etc. from the run
	parameters of the current run, i.e. directly from the run database,
	as it was done before in individual physics modules.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaBeamModule.C, src/THaBeamModule.h: Initial version of the
	property class for physics modules that provide beam information.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaBeamInfo.C, src/THaBeamInfo.h: Initial version of beam
	information ABI for physics modules, analogous to THaTrackInfo.

2004-04-27  Ole Hansen <ole@jlab.org>

	* src/THaElossCorrection.C: - Fix the calculation of the corrected momentum (typo, results way
	off).  - Minor change to the calculation of the electron energy loss   density effect correction: use log(beta*gamma) instead of
	  log(gamma), consistent with PDB. There are probably other minor
	discrepancies like this.  - Add material copper to ExEnerg().

2004-04-27  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.h: fix index bug in InCrate method.  Hmmm. I
	had noticed this before but somehow the bugfix didnt make it into
	CVS.  InCrate determines if a event buffer location is inside a
	crate and is used mostly (only?) by THaDecData.

2004-04-26  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add ThaElossCorrection module.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaElossCorrection.C, src/THaElossCorrection.h: Initial
	version of (track) energy loss correction module.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaTrackingModule.h: Fix class description.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaTrackInfo.C: Assignment operators also copy the pointer to
	the spectrometer object.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaTrackInfo.h: New method SetP() sets momentum information
	only - useful for physics modules that calculate momentum
	corrections.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaPhysicsModule.C, src/THaPhysicsModule.h: Add utility
	function PrintInitError used by various Set functions of derived
	classes.  Add an explicit Clear() method to ensure fDataValid is
	cleared for every physics module.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C, src/THaPrimaryKine.h,
	src/THaSecondaryKine.C, src/THaSecondaryKine.h: Call Clear() of base
	class in Clear().  Move PrintInitError() utility function into
	THaPhysicsModule.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaExtTarCor.C: Call Clear() of base class in Clear().  Set
	fDataValid at the end of Process().  Make Process() slightly more
	efficient. In particular, no need to extract the track from the
	tracking module since trkifo contains everything needed.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaExtTarCor.h: Remove unused forward references.

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaAvgVertex.C, src/THaCoincTime.C, src/THaGoldenTrack.C,
	src/THaGoldenTrack.h, src/THaReactionPoint.C, src/THaTwoarmVertex.C: 
	Call Clear() of base class in Clear().  Set fDataValid at the end of
	Process().

2004-04-26  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: Inline Clear()
	for efficiency.

2004-04-25  Ole Hansen <ole@jlab.org>

	* src/THaOutput.h: Make ClearnEpicsName method non-virtual.

2004-04-25  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Add several more template instances to the
	list of precompiled STL classes.

2004-04-23  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Cleanup names of EPICS variables
	in branch names to replace characters which confuse TTree::Draw,
	i.e. colon(:) and arithmetic operators (+-*/=).  They are replaced
	with underbar(_).  So an EPICS variable like slia:MV_AO_DXWID
	appears as slia_MV_AO_DXWID in the TTree output.  Also, there was a
	tiny bug that fEpicsVar needed to be cleared up to its full size of
	fEpicsKey.size()+1.  The reason it is bigger-by-1 is that the last
	data is always the timestamp constructed from Unix time

2004-04-22  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: Permit Global variables to be
	defined dynamically in the THaDecData database file, such that new
	channels can be added without re-compilation (and you can use
	meaningful names, instead of just 'misc1').  The channels are stored as variable-sized arrays to permit the
	storage of multi-hit TDCs/ADCs.

2004-04-22  Rob Feuerbach <feuerbac@jlab.org>

	* Calib/Determine_VDC_T0.C: Correct possible synchronization
	problem. Popped up on RH7 but not 9/RHEL

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaElectronKine.C, src/THaElectronKine.h,
	src/THaPrimaryKine.C, src/THaPrimaryKine.h: Allow module to use an
	optional beam apparatus as input for event-by-event beam direction
	information. (Previously, the module always assumed the incident
	particle momentum to be exactly along z_lab.)  Using this feature
	requires careful calibration of the beam apparatus, otherwise the
	kinematics may be messed up badly.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaIdealBeam.C, src/THaIdealBeam.h: Ensure that beam direction
	vector defaults (0,0,1) in constructor.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.h: Remove unused member variables left over
	from debugging.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.C: Use new name for Ext_TRotation header file
	and define.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/Ext_TRotation.h, src/TRotation_SetZAxis.h: Rename
	TRotation_SetZAxis.h to Ext_TRotation.h.  Rename the variable that
	indicates that the Ext_TRotation class is defined to Ext_TRotation
	for simplicity. Who knows, we might have to add more extensions than
	SetZAxis.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Add comment for operator[] const fix.

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Add ClassImp(THaScalerKey).

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Add workaround for missing
	TArrayI::operator[] const in ROOT < 3.3

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.C, src/TRotation_SetZAxis.h: Allow
	compilation of THaSecondaryKine for ROOT versions older than 3.05
	(TRotation::SetZAxis function unavailable before 3.05).

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaCoincTime.C, src/THaS2CoincTime.C: Change incorrect ROOT
	evrsion in conditional for TMath::C().

2004-04-22  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.3.0-cvs

2004-04-22  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Initialize fEpicsVar in loop, not with memset,
	since data type is double.

2004-04-22  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: fix problem of unitialized memory for epics data
	(set these to -1e32 as per our convention of what it means to have
	undefined data

2004-04-21  Ole Hansen <ole@jlab.org>

	* Makefile, docs/RELEASE_NOTES.html, docs/index.html,
	docs/preinstalled.html, docs/test-guide.html,
	docs/test-lowlevel.html, src/THaAnalyzer.C, src/THaInterface.C,
	src/THaOutput.C, src/THaVhist.C, src/main.C: Merge patches and
	documentation updates from Release 1.2.1 into trunk.

2004-04-20  Rob Feuerbach <feuerbac@jlab.org>

	* Calib/Determine_VDC_T0.C: Fix database handling, and more verbose.

2004-04-20  Rob Feuerbach <feuerbac@jlab.org>

	* Calib/Determine_VDC_T0.C: minor fixes.

2004-04-20  Rob Feuerbach <feuerbac@jlab.org>

	* Calib/Determine_VDC_T0.C, Calib/Determine_VDC_T0.txt: Measure and
	store VDC time offsets.

2004-04-20  Rob Feuerbach <feuerbac@jlab.org>

	* Calib/ADC_Calib.txt, Calib/id_pedestals.C: Generic ADC calibration
	(find pedestal and peak) routine.

2004-04-14  Bob Michaels <rom@jlab.org>

	* examples/output_example.def: Update the documentation in light of
	the iostream manipulator conflict (scaler tree names are upper case,
	LEFT and RIGHT)

2004-04-14  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: Scaler trees appear as capital letters (LEFT,
	RIGHT, RCS, DVCS, etc) no matter what the keyword is.  Necessary
	since left and right (lower case) are iostream manipulator names.
	Keword in output.def is case insensitive, so RiGhT is the same as
	right or RIGHT

2004-04-13  Ole Hansen <ole@jlab.org>

	* Makefile: Version is 1.2.0

2004-04-12  Ole Hansen <ole@jlab.org>

	* hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h: Remove
	unnecessary includes. Make Bdate::Print() non-inline.

2004-04-12  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEpics.h, hana_scaler/THaScalerGui.h: Remove using
	namespace std for consistency with rest of code.

2004-04-12  Ole Hansen <ole@jlab.org>

	* hana_decode/haDecode_LinkDef.h: Link classes used ROOT 3.x
	streamer mechanism.

2004-04-12  Ole Hansen <ole@jlab.org>

	* hana_scaler/haScal_LinkDef.h: Explicitly link some common STL
	template instances so they can be used in CINT macros.

2004-04-12  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Explicitly link some common STL template
	instances used in Analyzer header files. This allows use of these
	instances in CINT macros.

2004-04-12  Ole Hansen <ole@jlab.org>

	* src/main.C: Remove obsolete instantiation of global TROOT object.

2004-04-05  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C: Update obsolete comments for AddDetector
	method.

2004-04-05  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h: Implement default Begin()
	and End() methods for an apparatus which call Begin()/End() of all
	detectors of the apparatus.

2004-04-05  Ole Hansen <ole@jlab.org>

	* src/THaDebugModule.h: Clarify comment.

2004-04-05  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: Pu in Bob Michaels' changes
	from online directory (dated 18 Jan 04): Add rf time, EDT pulsers,
	ROC12/16 event lengths, and VDC efficiency calculation.  Also,
	change Bob's Finish() method to End(), so it is automatically called
	right after the event loop.

2004-04-01  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaCoincTime.C, src/THaCoincTime.h, src/THaS2CoincTime.C,
	src/THaS2CoincTime.h: Set maximum number of tracks to handle per
	spectrometer to 10, to avoid dynamically resizing the arrays during
	a run. This can be changed to use some more root-aware container
	class (TClonesArray), but this is the immediate fix.

2004-04-01  Ole Hansen <ole@jlab.org>

	* src/THaCoincTime.C: Remove unused includes. Return error if
	specified spectrometer(s) not found.  Delete locally allocated
	arrays in destructor.

2004-03-31  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add new THaCoincTime classes,
	removing obsolete THaCoincidenceTime

2004-03-30  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Clear cuts for every event. This causes a small
	performance hit, and does not make any difference in the standard
	cut logic, but is useful for cuts outside of the standard logic,
	e.g. in THaDebugModule or THaFilter.

2004-03-30  Ole Hansen <ole@jlab.org>

	* src/THaCutList.C, src/THaCutList.h: Add ClearAll() and
	ClearBlock() methods that allow clearing cut results.  Edit some
	comments and re-order functions alphabetically.

2004-03-30  Ole Hansen <ole@jlab.org>

	* src/THaCut.C, src/THaCut.h: Add ClearResult() method. Make
	SetBlockname() non-inline.

2004-03-30  Rob Feuerbach <feuerbac@jlab.org>

	* DB/DEFAULT/db_CT.dat, src/THaCoincTime.C, src/THaCoincTime.h,
	src/THaS2CoincTime.C, src/THaS2CoincTime.h: The initial version of
	an improved and simpler coincidence-time (difference between
	vertex-times for a pair of spectrometers) calculation. This
	supercedes the THaCoincidenceTime class. THaS2CoincTime permits one
	to calculate the time difference from one a single pair of
	detectors.

2004-03-29  Ole Hansen <ole@jlab.org>

	* src/THaFilter.C, src/THaFilter.h: Use a private cut object instead
	of a reference to an existing cut for more flexibility.

2004-03-29  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C: In vme_decode, replace sequential,
	exclusive if's with a switch block.  Add decoder code for CAEN 775
	and 792 (from Olivier Gayou).

2004-03-29  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C: From Olivier Gayou: Add CAEN 775 and 792 to list
	of known modules.

2004-03-26  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaAnalysisObject.C,
	src/THaAnalysisObject.h, src/THaAnalyzer.C, src/THaAnalyzer.h,
	src/THaGlobals.h, src/THaInterface.C, src/THaPostProcess.h,
	src/THaPrimaryKine.C: Modifications for new THaRun class hierarchy.
	Basically replace all references to THaRun with THaRunBase.

2004-03-26  Ole Hansen <ole@jlab.org>

	* src/THaCodaRun.C, src/THaCodaRun.h, src/THaOnlRun.C,
	src/THaOnlRun.h, src/THaRun.C, src/THaRun.h, src/THaRunBase.C,
	src/THaRunBase.h: Change the inheritance tree of the THaRun
	hierarchy. All run data access should be done through the new ABC
	THaRunBase. Another ABC, THaCodaRun, specializes THaRunBase to CODA
	data. Specific implemetations are THaRun (CODA disk file) and
	THaOnlRun (CODA data via ET).  The naming of the classes is somewhat
	inconsistent (THaRunBase should be THaRun, THaRun should be
	THaCodaRun or similar), but in this way we maintain backward
	compatibility and don't break any existing scripts.

2004-03-26  Ole Hansen <ole@jlab.org>

	* src/THaIORun.C, src/THaIORun.h: Remove unnecessary class THaIORun,
	which breaks the THaRun class design.

2004-03-26  Ole Hansen <ole@jlab.org>

	* src/THaFilter.C, src/THaFilter.h: Handle CODA output directly
	through THaCodaFile, not unnecessary intermediate class THaIORun.

2004-03-26  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Print descriptive error if required
	parameters missing in ReadDatabase.

2004-03-26  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.h: Make assignment operator virtual after
	all.

2004-03-26  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C, hana_decode/THaCodaFile.h,
	hana_decode/evio.C, hana_decode/evio.h: Make buffer argument for
	CODA write functions const since the buffer is never modified, just
	written out.

2004-03-25  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaVDC.C: Fix the prior fix -- the matrix for computing the
	pathlength IS in terms of the 'rotated' focal plane variables.

2004-03-23  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: Possibly useful features for
	special applications: - Support explicit enabling/disabling of individual trigger classes   (physics, scalers, etc.) - Implement several methods for counting events to determine events   to analyze within the requested event range: physics events only,   all events, or raw decoder event number.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C: Bugfixes discovered during checkout.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Print some messages only if verbosity level
	sufficiently high.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: - Modify physics event processing to include two additional analysis   stages, CoarseTrack and Tracking (=FineTrack).  This is backward
	  compatible.  Cuts after the tracking stages can be used to skip
	  expensive detector processing (e.g. RICH cluster finding) based on
	tracking cuts.  - Generalize the definition of analysis stages (DefineStage) and   statistics counters (DefineCounter). This is cleaner and
	  simplifies implementation of extensions.  - Add local variables for pointers to the lists of apparatuses,   physics modules, scalers, and PostProcess modules.  Handle
	  PostProcess modules completely within the analyzer
	(AddPostProcess).  - Implement the actual analysis in a set of virtual functions called   from the event loop. This greatly simplifies
	  extension/modification of the analyzer through inheritance.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaFilter.C, src/THaFilter.h, src/THaPostProcess.C,
	src/THaPostProcess.h: Modify API of PostProcess modules to match
	THaAnalyzer changes.  Remove global gHaPostProcess list in favor of
	static member variable.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C, src/THaSpectrometer.h: Add analysis methods
	CoarseTrack() and Track(). These will be called automatically during
	Reconstruct() unless called explicitly earlier.  Add "status" global
	variable that indicates which analysis stages done.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaCutList.C, src/THaCutList.h: Make IntDigits a global
	function since it is useful elsewhere.

2004-03-22  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Add comments for Begin() and End()
	methods.

2004-03-11  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaScintillator.C: Bug fix in calculating y-pos from l/r time
	difference.

2004-03-11  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Add /sbin path to ldconfig. Most users don't have /sbin
	in their path.

2004-03-03  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h: - Add Begin() and End() methods that can be used to notify a module   of the beginning and end of a replay.  - Make most non-critical and virtual functions non-inline to cut
	  down on compile time and compatibility issues.  - Re-order functions in the implementation file.

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaOnlRun.C, src/THaOnlRun.h: Implement operator= and copy
	ctor. Fix memory leak in ctors (THaRun base class already assigns
	fCodaData).

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaIORun.C, src/THaIORun.h: Implement operator= and copy ctor.

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.h: Make operator= non-virtual. Virtual
	operator= does not make sense.

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaRun.C: Remove OpenFile(const char*). (The class hierarchy
	of THaRun needs review.) Protect Copmare() against comparison with
	non-THaRun objects.

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaRun.h: Make operator= non-virtual. Virtual does not make
	sense.  Remove OpenFile(const char*) which clashes with derived
	classes.

2004-02-27  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C, src/THaSecondaryKine.C: Ensure that data
	from input modules are valid before doing any calculations.

2004-02-27  Ole Hansen <ole@jlab.org>

	* .exclude, Makefile, hana_decode/Makefile,
	hana_decode/THaCrateMap.C, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, hana_scaler/Makefile,
	hana_scaler/THaScaler.C, src/THaAnalysisObject.C,
	src/THaAnalysisObject.h, src/THaAnalyzer.C, src/THaAnalyzer.h,
	src/THaCherenkov.C, src/THaCutList.C, src/THaDebugModule.C,
	src/THaDebugModule.h, src/THaDetector.C, src/THaFormula.C,
	src/THaHRS.C, src/THaNamedList.C, src/THaOutput.C, src/THaOutput.h,
	src/THaPrintOption.C, src/THaPrintOption.h, src/THaRTTI.C,
	src/THaReactionPoint.C, src/THaReactionPoint.h, src/THaRun.C,
	src/THaScintillator.C, src/THaScintillator.h,
	src/THaSecondaryKine.C, src/THaShower.C, src/THaSpectrometer.C,
	src/THaSubDetector.C, src/THaTotalShower.C, src/THaVDC.C,
	src/THaVDC.h, src/THaVDCPlane.C, src/THaVarList.C, src/THaVhist.C: 
	Merge bugfixes between Releases 1.1.2 and 1.1.12 into trunk.

2004-02-19  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaVDC.C: Fixed a misunderstanding about the track-length
	matrix elements. They are for a calculation to the transport plane,
	not the (curved) focal plane.  Likewise, the matrix elements are for
	use with the transport-plane parameters.

2004-02-17  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Add new classes for Filtering.

2004-02-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: A few changes:  1. Removed EStage and ESkipReason 'enum' types, since they got in
	    the way of a derived class from adding more cuts. Likewise,
	    kMaxStage and kMaxSkip are now fMaxStage and fMaxSkip. The
	    stage-preparation has been moved to the virtual method
	'InitStagess()'  2. Added loops to initialize/process/cleanup THaPostProcess
	    objects, which are used in the CODA event filter.

2004-02-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/HallA_LinkDef.h, src/THaFilter.C, src/THaFilter.h,
	src/THaIORun.C, src/THaIORun.h, src/THaPostProcess.C,
	src/THaPostProcess.h: Add functionality for a raw (CODA) event
	filter output.

2004-01-27  Ole Hansen <ole@jlab.org>

	* src/THaCoincidenceTime.C, src/THaHRS.C: Use TMath::C only if ROOT
	>= 3.4, not 3.3

2003-12-19  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaVform.C, src/THaVform.h: Work-around to an
	apparent bug in TTree::Draw() that a THaFormula or THaVform in the
	Tree cannot be Draw()n unless one also adds to the tree those
	variables upone which the formula depends (so if formula=2x+y one
	must add x and y or Draw() fails).  Note, the data are in the Tree,
	its just that Draw() fails. I had already realized this bug for
	formulas of arrays but did not realize it was a general problem.
	Easy to fix by silently adding all variables (not just if they are
	arrays) to the tree.  We should eventually tell the ROOT team what
	is wrong with TTree::Draw().  Note, this updates the 1.1 release
	that has scalers and epics data, so probably not compatible with
	ADAQ version.

2003-12-12  Ole Hansen <ole@jlab.org>

	* src/THaRun.C: Print warnings but do not quit prescan of run file
	if LoadData fails.

2003-12-07  Ole Hansen <ole@jlab.org>

	* SDK/Makefile, SDK/README, SDK/UserApparatus.cxx,
	SDK/UserApparatus.h, SDK/UserDetector.cxx, SDK/UserDetector.h,
	SDK/UserModule.cxx, SDK/UserModule.h, SDK/UserScintillator.cxx,
	SDK/UserScintillator.h, SDK/User_LinkDef.h, SDK/db_R.s1.dat,
	SDK/db_u1.dat: Initial version of the User Software Development Kit.

2003-12-07  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: Drop the requirement in LoadDBvalue that
	at least one timestamp be present in the database file before
	entries are considered valid. Database files without internal
	timestamps are now simply valid for all times (within the time
	period implied by the name of the directory in which they reside,
	that is). This is the expected behavior. The prior behavior was
	unintended.

2003-12-03  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaDetMap.h: Minor code cleanup. Prefix
	constants with "k". Make test functions static.

2003-12-02  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCrateMap.C, hana_decode/THaCrateMap.h: A half-step
	to a more manageable cratemap initialization. The hard-coded
	init(UInt_t tloc) crate-map has been moved to init_hc(UInt_t).
	init(UInt_t tloc) NOW looks for a 'db_cratemap.dat' file.  If it is NOT STANDALONE, the file is opened with   THaAnalysisObject::OpenFile to look in the normal directory path
	OTHERWISE   it looks for 'db_cratemap.dat' in the current directory.  If the file is not found, the fall-back is to initialize with the
	hard-coded crate-map via init_hc.

2003-11-27  Ole Hansen <ole@jlab.org>

	* Makefile, src/THaInterface.C: Pass VERSION from Makefile to
	THaInterface via ha_compiledata.h

2003-11-26  Ole Hansen <ole@jlab.org>

	* Makefile, RELEASE_NOTES, docs/RELEASE_NOTES.html,
	docs/RELEASE_NOTES_v1.0.txt, docs/add-det.html,
	docs/apparatus.html, docs/bpm.html, docs/database.html,
	docs/design.html, docs/detector.html, docs/index.html,
	docs/install.html, docs/preinstalled.html, docs/quickstart.html,
	docs/standard-analyzer.html, docs/test-guide.html,
	docs/user-setup.html, examples/cutdef.dat, examples/histdef.dat,
	examples/rich.dat, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, src/HallA_LinkDef.h,
	src/THaAnalysisObject.C, src/THaAnalysisObject.h,
	src/THaAnalyzer.C, src/THaAnalyzer.h, src/THaBPM.h, src/THaBeam.C,
	src/THaBeam.h, src/THaCherenkov.h, src/THaInterface.C,
	src/THaRaster.h, src/THaScintillator.h, src/THaShower.h,
	src/THaSpectrometer.C, src/THaTotalShower.h, src/THaVDC.C,
	src/THaVDCPlane.C, src/THaVDCPlane.h: Merge bugfixes from Release
	1.1.2 into trunk.

2003-11-25  Bob Michaels <rom@jlab.org>

	* src/THaVform.C: two bug fixes:  1) various typo errors in
	output.def could lead to array access violation / segfault -- array
	fVectSform is protected now; and 2) A variable like R.cer.asum_c was
	interpreted as a prefix rule ("SUM:") -- easy to fix by requiring
	the colon in SUM: AND: OR: prefixes

2003-11-25  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C: clarify the error message if cratemap is
	wrong for scalers

2003-11-18  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCrateMap.C: Explicity use TString::Data() to get
	char*

2003-11-18  Bob Michaels <rom@jlab.org>

	* examples/output_example.def: update the example of output.def
	file.  Added scalers and EPICS data.  Also, one of the variables had
	become a variable-sized array in the code development, leading to a
	syntax error.  Fixed it.

2003-11-18  Bob Michaels <rom@jlab.org>

	* docs/output.html: update the documentation about output.html.  New
	ability to add scaler and EPICS data

2003-11-18  Bob Michaels <rom@jlab.org>

	* src/THaAnalyzer.C, src/THaOutput.C, src/THaOutput.h: Add scaler
	and EPICS data to the output

2003-11-18  Bob Michaels <rom@jlab.org>

	* src/HallA_LinkDef.h: add class THaScalerKey (a small utility class
	imbedded in THaOutput.h for organizing scaler data)

2003-11-18  Bob Michaels <rom@jlab.org>

	* src/THaVhist.C: small improvements to ErrPrint

2003-11-18  Bob Michaels <rom@jlab.org>

	* hana_decode/Makefile, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, hana_decode/THaSlotData.C,
	hana_decode/haDecode_LinkDef.h: Better handling of EPICS data.  Job
	is relegated to THaEpics, public methods to access these data.  In
	THaEvData, fixed handling of unitialized scaler slots (infrequent
	warning is better than silent failure resulting in zero data),
	updated comments on this in THaSlotData

2003-11-18  Bob Michaels <rom@jlab.org>

	* hana_decode/epics_main.C: Test code to check epics decoding.
	Similar style to the other *main* codes.  Compiled if STANDALONE=1
	in Makefile, otherwise ignored

2003-11-18  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEpics.C, hana_decode/THaEpics.h: new class THaEpics
	to handle EPICS data, replaces the obsolete THaEpicsStack

2003-11-18  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEpicsStack.C, hana_decode/THaEpicsStack.h: removed
	obsolete class in THaEpicsStack.C and .h and it will be replaced by
	THaEpics

2003-11-18  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.h, hana_scaler/tscalgui_main.C: update
	xscaler GUI.  The using-namespace-std line, and use L-arm instead of
	RCS scalers by default

2003-11-12  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCrateMap.C, hana_decode/THaCrateMap.h: New method
	to initialize the CrateMap from a TString as input (a long,
	multi-line string) so the configuration can be passed in from some
	outside database.  The format of the TString is the same as THaCrateMap::print's
	output.

2003-11-12  Ole Hansen <ole@jlab.org>

	* Makefile: Release is 1.2-cvs.

2003-11-12  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: Various bug fixes and
	usability improvements: - Don't terminate event loop on CODA_ERROR, but actually skip such
	  events as was intended.  - Open output file in Init(), not in Process(), so that the tree and   histograms of THaOutput are created on disk.  - Don't Write() the output file explicitly after the event loop. All
	  output objects are already written by fOutput->End().  - Refuse to overwrite an existing output file if fOverwrite is
	false.  - Actually set the fAnalysisStarted flag.  - Add new methods EnableRunUpdate() and EnableOverwrite(). Both
	  already enabled by default, but can be reset through these functions
	as well.  - Add Print() method. Currently simply prints info of the last
	analyzed run.  - Add HasStarted() method. True if analysis started and not yet
	  closed, so further replay will append to the current output file.  - Fix incorrect test for overlapping event ranges.  - Split off PrintSummary() function from Process().  - Support different verbosity levels.  - Print CODA event number, not event counter during analysis.  - New counter nev_analyzed for "data" events (physics, scalers,
	  EPICS) as opposed to CODA control events.  - Copy run object to local variable after end of replay to save
	  updated run parameters.  - Allow only one instance of this object (since it modifies global   program variables, gHaCuts, gHaRun). Inherit from TObject.  - Disable copy ctor and assignment.

2003-11-12  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: - Remove "analyzed event range" variables and replace with a simple
	  counter of number of physics events analyzed. (The analyzed event
	  range might not be contiguous and so should be a list.) - Improve Print(). Display nearly all info about the run, or just a   small subset if "STARTINFO" option is given.  - Clear() only resets a subset of variables if "INIT" option is
	given.  - Clear relevant variables in Init() for proper re-inititialization.

2003-11-12  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Open database file with debug=0 to
	suppress printing the database file name.  (This should probably be
	controlled by a global gHaDebug level.)

2003-11-12  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Minor changes to error/warning messages.

2003-11-12  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h, src/THaInterface.C, src/THaInterface.h: Don't
	allow access to gHaDecoder from CINT, but only through
	THaInterface::Get/SetDecoder().

2003-11-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: another trivial fix.  The detector swap
	was on Sept 15, 2000 but the bug had month=15, day=9 (at least the
	year was right).

2003-11-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: If the scaler event contains nothing for
	that crate, it is nonsense to process that crate.  Leads to
	erroneous zeros.  This affected LoadData(THaEvData& evdata) and was
	only noticeable during event-by-event analysis using THaAnalyzer.
	Standalone codes which typically did not use this particular
	LoadData method did not notice the bug.

2003-11-11  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C: Add missing initialization of fVar pointer.

2003-11-10  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C: Implement Print().

2003-11-10  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaData.h, hana_decode/THaEvData.h: Change
	CODA_ERROR, HED_ERR, HED_OK values. CODA_ERROR and HED_ERR were
	clashing with EOF. HED_OK should be zero for consistency with other
	classes.

2003-11-07  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h, src/THaRunParameters.C,
	src/THaRunParameters.h: Add Get/Set methods for some of the new
	member variables.  Add Clear() method.

2003-11-07  Ole Hansen <ole@jlab.org>

	* src/THaCoincidenceTime.C, src/THaHRS.C, src/THaRun.C,
	src/THaSpectrometer.C: Add preprocessor conditionals to support
	older versions of ROOT.

2003-11-07  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add new class THaRunParameters.

2003-11-07  Ole Hansen <ole@jlab.org>

	* src/THaDBFile.C, src/THaDBFile.h, src/THaFileDB.C,
	src/THaFileDB.h, src/THaVDC.C, src/THaVDC.h: Fix compilation
	warnings/errors with gcc3.2/RH9.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: - Support new THaRun interface.  - Instantiate decoder object (THaEvData) through the ROOT TClass
	  interface, using the new global pointer gHaDecoder. This gives the
	  user flexibility to use a different decoder (inheriting from
	  THaEvData) if desired, e.g.  for analyzing simulated data.  - Use pointers instead of references to evdata and run objects.  - Get rid of global variable "nev" which was used for debugging.  - Change the interface of internal function InitModules() so we
	  don't have to pass in the list iterator.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C: Use new THaRun interface to get beam
	parameters.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: Extensive changes to support new
	THaRunParameters class and to provide more initialization options.
	Init() now scals for prescale factors as well.  Update() function
	provides extensible method to extract run parameters during replay.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaGlobals.h, src/THaInterface.C: Add new global pointer
	gHaDecoder.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C, src/THaVDCPlane.h, src/THaVDCUVPlane.h: Include
	ThaEvData.h in the implementation file, not in the header.

2003-11-06  Ole Hansen <ole@jlab.org>

	* src/THaRunParameters.C, src/THaRunParameters.h: First version of
	new base class for storing global run parameters (e.g. beam energy,
	target mass, prescale factors).

2003-11-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: Make
	HED_OK/HED_ERR and MAX_PSFACT enums instead of statics to avoid
	numerous compilation problems. Make MAX_PSFACT public.

2003-11-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C, hana_decode/THaCodaFile.h: Replace
	TString& in member function arguments with char*.  Initialize
	handle=0.  Simplify constructors by using default arguments.  Return
	evio status codes instead of generic CODA_ERROR where possible.

2003-11-06  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaData.h, hana_decode/THaEtClient.C,
	hana_decode/THaEtClient.h: Replace TString& in function arguments
	with char*.

2003-10-31  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.h: Include evio.h so that clients get the
	definitions of the status return codes.

2003-10-31  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: - Put initialization into a separate Init() method, which can either
	  be called explicitly or will be called implicitly by Process() if
	  necessary (backwards compatible).  - Significantly expand the initialization logic to detect most
	  common analysis scenarios. Continuation of analysis (accumulating
	  data from several CODA runs into one ROOT output file) supported.  - Save a copy of the run object locally to be able to detect whether   analysis of a new run is requested.  - Make interval in which event number is printed during replay a
	variable.

2003-10-31  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: - Add Init() method. Init() opens the run file and uses the decoder   (THaEvData) to search for the timestamp in the prestart event.
	  Also reads the database.  - Add several status flags: fAssumeDate, fIsInit. If date is
	  excplicitly set via SetDate, it is taken to be the run imestamp no
	  matter what the CODa file says, and searching for a prestart event
	is skipped in Init().  - Add several support functions, and make some functions virtual for   more control by derived classes:     ClearDate() - reset date set by SetDate()     IsInit()    - check if successfully initialized

2003-10-29  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: Add IsOpen() method.

2003-10-29  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaFile.C, hana_decode/THaCodaFile.h: Add isOpen()
	method to indicate the status of the file.  Ensure that old file is
	closed if codaOpen() called with a new file name.

2003-10-29  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCodaData.h, hana_decode/THaEtClient.C,
	hana_decode/THaEtClient.h: Add isOpen() function to indicate status
	of the file or connection.

2003-10-27  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaAnalyzer.C,
	src/THaOnlRun.C, src/THaOnlRun.h, src/THaRun.C, src/THaRun.h: The
	THaOnlRun class connects THaRun to the ET-client. Developed by Bob
	Michaels. To accomodate whether we 'know' the time/date of a run, a
	THaRun object now has its date automatically set to 1995-1-1, and
	THaAnalyzer considers any date before 1997 as unset.  THaOnlRun sets its date to 'now' (since the data is from the ET
	buffer).  THaOnlRun included only if ONLINE_ET is set during the make.

2003-10-20  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: Make comparision operators virtual and
	non-inline (they are not time-critical).  Get rid of comparision
	operators with Int_t to keep things general.  (Can always compare
	run.GetNumber().) Fix oversight: GetNumber() now returns Int_t
	instead of UInt_t.

2003-10-20  Ole Hansen <ole@jlab.org>

	* src/THaRun.C, src/THaRun.h: Make run number (fNumber) an Int_t
	instead of UInt_t. Humans might prefer it.  Define various
	comparison operators.

2003-10-20  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Reset TRANSPORT to lab rotation matrix
	before setting the new axes. This allows
	re-initialization/re-reading of the run database of the
	spectrometer.

2003-10-20  Ole Hansen <ole@jlab.org>

	* src/THaSecondaryKine.C, src/THaSecondaryKine.h: Initial version of
	secondary particle kinematics module (coincidence kinematics).

2003-10-20  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C: Initialize/reset data members to kBig
	instead of zero.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Updated to include routines merged from rob_db branch
	related to DB and Coincidence times.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/HallA_LinkDef.h, src/THaCoincidenceTime.C,
	src/THaCoincidenceTime.h: Merge from rob_db branch. Readout of
	coincidence-timing TDC's and, using track-length information,
	calculation of the time-difference of tracks from a set of
	spectrometers at the target.  Generalized form to permit for additional spectrometers (eg:
	BigBite) to be added without hopefully too much more effort.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaHRS.C, src/THaHRS.h: Merge from rob_db. Define plane (s1)
	that track-length is calculated to.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSpectrometer.C: Merge from rob_db branch. Add track-length
	and track-time information stored for each track.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaScintillator.C, src/THaScintillator.h, src/THaTrackProj.C,
	src/THaTrackProj.h: Merge from rob_db branch. Each track gets a
	'THaTrackProj' object for each scintillator (and potentially each
	outer detector) recording the intercept of the track with the plane.
	THaScintillator contains timewalk corrections, and a more complete
	reconstruction of the hit (y-pos based upon time, 'real' time of hit
	at the detector plane, etc.).

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaSpectrometerDetector.C: Fix (again) the use of cos/sin of
	the rotation angle when computing the detector's x-axis.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDetMap.C: More informative Print routine.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaEvent.h: Move ClassDef to public, to satisfy
	compilers/rootcint better.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C, src/THaDB.h, src/THaDBFile.C, src/THaDBFile.h,
	src/THaFileDB.C, src/THaFileDB.h: Merge from rob_db. New generic
	database API (THaDB class) and a file-based implementation
	(THaDBFile). See THaScintillator for a partial example of how to use
	the API.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaApparatus.h: Merge from rob_db branch. Can get a const
	TList of detectors.

2003-10-17  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h, src/VarDef.h: 
	Merging from rob_db branch. Changes to these files are:   - changed VarDef's TagDef struct to use a void* as opposed to
	    Double_t* so different types may be read in.
	    THaAnalysisObject::LoadDB is modified to recognize the different
	  types (only Double_t for now).  - Added ReadComment routine to just read and return lines that are     'comments' based upon the old-file standard (space in first
	    character means data, otherwise a comment). Just for simplicity
	    in parsing the files  ( can do  while ( ReadComment(...) ); to skip
	comments ).

2003-10-16  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaTrack.h, src/THaVDC.C, src/THaVDC.h: Read the matrices
	describing the relation between focal plane and target coordinates a
	bit more flexibly. Also, permit reading in the track-length matrix,
	and store the path-length information with the track.

2003-10-16  Rob Feuerbach <feuerbac@jlab.org>

	* DB/DEFAULT/db_D.dat: Added coincidence timing module listings
	(ctimel and ctimer).

2003-10-16  Rob Feuerbach <feuerbac@jlab.org>

	* DB/20030101/db_L.cer.dat, DB/20030101/db_L.prl1.dat,
	DB/20030101/db_L.prl2.dat, DB/20030101/db_L.s1.dat,
	DB/20030101/db_L.s2.dat, DB/20030101/db_R.cer.dat,
	DB/20030101/db_R.ps.dat, DB/20030101/db_R.s1.dat,
	DB/20030101/db_R.s2.dat, DB/20030101/db_R.sh.dat: Changed comments
	to reflect the proper units (meters, not centimeters.)

2003-10-14  Ole Hansen <ole@jlab.org>

	* src/THaPrimaryKine.C: Bugfix: Actually use the projectile mass in
	the kinematics calculation.

2003-10-14  Ole Hansen <ole@jlab.org>

	* DB/20000901/db_s1.dat, DB/20000901/db_sh.dat: Remove obsolete
	database files.

2003-10-14  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaElectronKine.C,
	src/THaElectronKine.h, src/THaPrimaryKine.C, src/THaPrimaryKine.h: 
	Generalized THaElectronKine to THaPrimaryKine, which can have any
	projectile mass. THaElectronKine is a THaPrimaryKine with electron
	mass. Mass can either be specified in the constructor or in the run
	database.  Also change the TLorenzVectors used in Process() to
	member variables and make them accessible via Get functions.

2003-10-14  Ole Hansen <ole@jlab.org>

	* src/THaPhysicsModule.C, src/THaPhysicsModule.h: Add DataValid()
	method.

2003-09-29  Bob Michaels <rom@jlab.org>

	* hana_decode/etclient_main.C, hana_decode/prfact_main.C,
	hana_decode/tdecex_main.C, hana_decode/tdecpr_main.C,
	hana_decode/tstcoda_main.C, hana_decode/tstio_main.C: using
	namespace std

2003-09-25  Ole Hansen <ole@jlab.org>

	* hana_decode/THaUsrstrutils.C: Improved string_from_evbuffer. In
	addition to \n, also allow \0 to terminate the configstring.  We
	should probably use the original C-code here instead of these
	higher-level versions. Still, I thought I'd record it for
	completeness.

2003-09-25  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaBeam.C: Second part of the fixes to THaBeam. Do not create
	ANOTHER fDetectors TList.

2003-09-25  Rob Feuerbach <feuerbac@jlab.org>

	* DB/20000901/db_CT.dat, DB/20000901/db_L.s1.dat,
	DB/20000901/db_L.s2.dat, DB/20000901/db_L.vdc.dat,
	DB/20000901/db_R.s1.dat, DB/20000901/db_R.s2.dat,
	DB/20000901/db_R.vdc.dat, DB/20000901/db_run.dat: Updated maps,
	using some of Bodo's constants.

2003-09-24  Rob Feuerbach <feuerbac@jlab.org>

	* DB/20020101/db_CT.dat, DB/20020101/db_D.dat,
	DB/20020101/db_L.aero1.dat, DB/20020101/db_L.aero2.dat,
	DB/20020101/db_L.cer.dat, DB/20020101/db_L.s1.dat,
	DB/20020101/db_L.s2.dat, DB/20020101/db_L.vdc.dat,
	DB/20020101/db_R.aero1.dat, DB/20020101/db_R.cer.dat,
	DB/20020101/db_R.ps.dat, DB/20020101/db_R.s1.dat,
	DB/20020101/db_R.s2.dat, DB/20020101/db_R.sh.dat,
	DB/20020101/db_R.ts.dat, DB/20020101/db_R.vdc.dat,
	DB/20020101/db_run.dat: Checkin of databases, valid at least for
	E98-108 (Mar 2002) and probably E94-104.

2003-09-11  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C: - Search for database files in the current directory first, then
	  look in the database directory tree.  - If debug level is 1, print only the full file name of the database
	  file that was actually successfully opened. If level is >1, print
	  full file name of all database files that OpenFile() tries to open.

2003-09-11  Ole Hansen <ole@jlab.org>

	* src/THaAnalysisObject.C, src/THaAnalysisObject.h,
	src/THaReactionPoint.C, src/THaSpectrometerDetector.C,
	src/THaSpectrometerDetector.h, src/THaTwoarmVertex.C: - New static function THaAnalysisObject::IntersectPlaneWithRay()   that calculates intersection point of a plane with a ray in 3d.  - Use this new function for the intersection point calculations in   THaSpectrometerDetector, THeReactionPoint, THaTwoarmVertex.  - THaMatrix now unused, but let's keep it around.

2003-09-10  Ole Hansen <ole@jlab.org>

	* src/THaString.C: Fix warning about deprecated strstream header.
	Use stringstreams if supported by host system.

2003-09-10  Ole Hansen <ole@jlab.org>

	* hana_decode/swap_util.C, src/THaBPM.C, src/THaBeam.h,
	src/THaEvent.C, src/THaOutput.C, src/THaRaster.C, src/THaVform.C,
	src/THaVform.h, src/THaVhist.C: Fix compilation warnings.

2003-09-10  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Inherit
	system-dependent compiler and linker options from top-level Makefile
	unless compiled standalone.

2003-09-10  Ole Hansen <ole@jlab.org>

	* Makefile, gcc-version: For Linux, determine version of gcc (using
	utility script gcc-version) and define HAS_SSTREAM for gcc 3.x.
	Split CXXFLAGS into CXXFLG and DEFINES that can be passed to
	subdirectory Makefiles.

2003-09-02  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaBeam.h: Removed erroneous/redundant 'TList *fDetectors'.
	The fDetectors list is already present in THaApparatus. The
	compilers didn't notice the error, but after compilation with gcc
	3.0.4 the THaRastered Beam code and the AddDetector method were
	accessing different copies of the list. (?!?!)

2003-08-12  Ole Hansen <ole@jlab.org>

	* hana_decode/THaCrateMap.C, hana_decode/THaCrateMap.h,
	hana_decode/THaSlotData.C, hana_decode/THaSlotData.h: Fix
	compilation errors on Solaris (scope problem).

2003-08-12  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaBPM.C, src/THaBPM.h, src/THaCherenkov.C,
	src/THaCherenkov.h, src/THaDetMap.C, src/THaDetMap.h,
	src/THaRaster.C, src/THaRaster.h: The THaDetMap class and its child
	'Module' structure have been upgraded to include
	first-logical-channel number information as well as the model number
	of the module. This removes the need for parallel 'fFirstChan'
	arrays. Also, a short list of model numbers (1872, 1875, 1877, 1881)
	has been included so a module can be tested to be an ADC or TDC with
	the 'THaDetMap::IsADC(Module *d)' and 'THaDetMap::IsTDC(Module *d)'
	methods.  This removes the detector-map-listing requirement to have an equal
	number of ADC and TDC entries. The THaBPM, THaCherenkov, THaRaster
	and THaScintillator classes have been modified to take advantage of
	these features. The model-number is always OPTIONAL, and if not
	given the ADC/TDC determination is done in the old way (ie: backward
	compatible).

2003-08-01  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaScintillator.C, src/THaScintillator.h: Added global
	variables for the number of _COMPLETE_ paddle TDC hits, as well as a
	list. To ease studies of which paddle could have fired the trigger.

2003-07-24  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaEvData.C: Default to setting run_time to NOW, such
	that initialization of THaCrateMap works for ET-buffer data.  Also switch to doing a fixed-format printing of the VERBOSE/debug
	information.

2003-07-15  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaCrateMap.C: Add 1875 and 1881 for S2m to ROC 4.

2003-07-03  Bob Michaels <rom@jlab.org>

	* docs/output.html: fix typos

2003-07-01  Bob Michaels <rom@jlab.org>

	* docs/output.html: mod URL that this file is

2003-07-01  Bob Michaels <rom@jlab.org>

	* examples/output_example.def: new output_examples.def, more
	complete with examples of new capabilities

2003-07-01  Bob Michaels <rom@jlab.org>

	* examples/output.def: removed output.def since output_examples.def
	is sufficient.  Anyway, output.def was slightly wrong.

2003-07-01  Bob Michaels <rom@jlab.org>

	* docs/output.html: new and more complete documentation about output

2003-07-01  Bob Michaels <rom@jlab.org>

	* src/HallA_LinkDef.h: add THaVform and THaVhist

2003-07-01  Bob Michaels <rom@jlab.org>

	* Makefile: add THaVhist, THaVform and with VERSION = 1.1-cvs as it
	was

2003-07-01  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: improved THaOutput to include
	vectorized formula and histograms, the [I] variable, prefixes SUM:,
	OR:, AND:, global cuts, and with a more modern OO coding style

2003-07-01  Bob Michaels <rom@jlab.org>

	* src/THaVform.C, src/THaVform.h, src/THaVhist.C, src/THaVhist.h: 
	new classes THaVform and THaVhist used by THaOutput

2003-07-01  Bob Michaels <rom@jlab.org>

	* src/THaVar.C, src/THaVar.h: need HasSameSize() method for vector
	formula

2003-07-01  Ole Hansen <ole@jlab.org>

	* Makefile, src/THaInterface.C: Version is 1.1-cvs.

2003-07-01  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.h, src/THaHelicity.h: set HELDEBUG=0 on
	Main CVS Branch

2003-06-30  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: Added sign-change to
	helicity so we agree with the Moller measurement and ESPACE.

2003-06-26  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: Make certain to set the
	q1_present_helicity after recovering from lost Qrt's. Also, added
	more debugging on a Qrt-by-qrt level.

2003-06-26  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Copy libraries to
	$(LIBDIR) using cp -p, preserving mod time.

2003-06-26  Ole Hansen <ole@jlab.org>

	* Makefile: Make $(PROGRAMS) explicitly AFTER making subdirs.  This
	makes the build process thread-safe AND stops unnecessary relinking
	of the analyzer even if nothing changed.

2003-06-26  Ole Hansen <ole@jlab.org>

	* Makefile, hana_decode/Makefile, hana_scaler/Makefile: Another
	attempt at a thread-safe Makefile.  - Subdirectory Makefiles copy the libs to $LIBDIR - analyzer depends on subdirs explicitly, so it never gets linked
	  before the subdirectories are built Also, changed incorrect $^ in
	analyzer link line to $< (first prereq)

2003-06-25  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: Improved determination of
	timing of the beginning of the 4-part Qrt, based upon evt9

2003-06-23  Ole Hansen <ole@jlab.org>

	* RELEASE_NOTES, docs/RELEASE_NOTES_v1.0.txt: Add note that most
	physics modules only operate on Golden Track.

2003-06-20  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: Removed the
	stipulation that a Event 9 occurs at the beginning of a Qrt.  Due to
	the signal timing, often the evt 9 came at the very END of the
	previous Qrt, leading to the need for just-the-right timing in order
	for the first-portion of the new Qrt to be recognized (and it often
	wasn't).  So, to start a new Qrt all that is needed is sufficient elasped time
	and a Qrt signal.

2003-06-19  Ole Hansen <ole@jlab.org>

	* docs/detector.html, docs/quickstart.html, docs/test-guide.html: 
	Fix typos and HTML errors.

2003-06-19  Ole Hansen <ole@jlab.org>

	* docs/FAQ.html: Add more information about bizarre comiler
	warnings/errors.  Remove some material that is now in the
	Installation Guide.

2003-06-19  Ole Hansen <ole@jlab.org>

	* docs/install.html: First revision of Installation Guide.

2003-06-18  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Fix warnings about uninitialized variables (1 real,
	1 spurious).

2003-06-18  Ole Hansen <ole@jlab.org>

	* Makefile: Let "analyzer", not "all", depend on the shared
	libraries again, otherwise rebuilding may fail if usig more than one
	make threak (make -j2).

2003-06-16  Ole Hansen <ole@jlab.org>

	* docs/index.html: First version of documentation index.

2003-06-16  Ole Hansen <ole@jlab.org>

	* src/THaBpm.C: Remove obsolete file THaBpm.C, apparently forgotten
	in earlier cleanup.

2003-06-16  Ole Hansen <ole@jlab.org>

	* .cvsignore, .exclude, DB/20000901/db_run.dat,
	DB/20030101/db_L.cer.dat, DB/20030101/db_L.prl1.dat,
	DB/20030101/db_L.prl2.dat, DB/20030101/db_L.s1.dat,
	DB/20030101/db_L.s2.dat, DB/20030101/db_R.cer.dat,
	DB/20030101/db_R.ps.dat, DB/20030101/db_R.s1.dat,
	DB/20030101/db_R.s2.dat, DB/20030101/db_R.sh.dat,
	DB/20030101/db_R.ts.dat, DB/20030101/db_run.dat,
	DB/20030415/db_L.cer.dat, DB/20030415/db_L.s1.dat,
	DB/20030415/db_L.s2.dat, DB/20030415/db_L.vdc.dat,
	DB/20030415/db_R.cer.dat, DB/20030415/db_R.ps.dat,
	DB/20030415/db_R.s1.dat, DB/20030415/db_R.s2.dat,
	DB/20030415/db_R.sh.dat, DB/20030415/db_R.vdc.dat,
	DB/20030415/db_beam.dat, DB/20030415/db_run.dat,
	DB/DEFAULT/db_D.dat, DB/DEFAULT/db_run.dat, Makefile,
	RELEASE_NOTES, docs/FAQ.html, docs/RELEASE_NOTES_v1.0.txt,
	docs/add-det.html, docs/apparatus.html, docs/cvs.html,
	docs/design.html, docs/detector.html, docs/output.html,
	docs/quickstart.html, docs/standard-analyzer.html,
	docs/test-guide.html, examples/analyze_scaler.C,
	examples/cuts_example.def, examples/doit.C, examples/output.def,
	examples/output_example.def, examples/setup.C,
	examples/setup_demo.C, hana_decode/.cvsignore,
	hana_decode/Makefile, hana_decode/THaBenchmark.h,
	hana_decode/THaCodaFile.C, hana_decode/THaCrateMap.C,
	hana_decode/THaCrateMap.h, hana_decode/THaEpicsStack.C,
	hana_decode/THaEpicsStack.h, hana_decode/THaEvData.C,
	hana_decode/THaEvData.h, hana_decode/THaFastBusWord.C,
	hana_decode/THaFastBusWord.h, hana_decode/THaHelicity.C,
	hana_decode/THaHelicity.h, hana_decode/THaSlotData.C,
	hana_decode/THaSlotData.h, hana_decode/THaUsrstrutils.C,
	hana_decode/THaUsrstrutils.h, hana_decode/haDecode_LinkDef.h,
	hana_decode/swap_util.C, hana_scaler/.cvsignore,
	hana_scaler/Makefile, hana_scaler/README,
	hana_scaler/THaNormScaler.C, hana_scaler/THaNormScaler.h,
	hana_scaler/THaScaler.C, hana_scaler/THaScaler.h,
	hana_scaler/THaScalerBank.C, hana_scaler/THaScalerBank.h,
	hana_scaler/THaScalerDB.C, hana_scaler/THaScalerDB.h,
	hana_scaler/tscalasy_main.C, hana_scaler/tscaldtime_main.C,
	hana_scaler/tscalevt_main.C, hana_scaler/tscalfile_main.C,
	hana_scaler/tscalhist_main.C, hana_scaler/tscalntup_main.C,
	hana_scaler/tscalonl_main.C, hana_scaler/tscalring_main.C,
	src/.cvsignore, src/HallA_LinkDef.h, src/THaAnalysisObject.C,
	src/THaAnalysisObject.h, src/THaAnalyzer.C, src/THaAnalyzer.h,
	src/THaApparatus.C, src/THaApparatus.h, src/THaArrayString.C,
	src/THaArrayString.h, src/THaAvgVertex.C, src/THaAvgVertex.h,
	src/THaBPM.C, src/THaBPM.h, src/THaBeam.C, src/THaBeam.h,
	src/THaBeamDet.C, src/THaBeamDet.h, src/THaBpm.C, src/THaBpm.h,
	src/THaCherenkov.C, src/THaCherenkov.h, src/THaCluster.C,
	src/THaCutList.C, src/THaCutList.h, src/THaDB.C, src/THaDB.h,
	src/THaDebugModule.C, src/THaDebugModule.h, src/THaDecData.C,
	src/THaDecData.h, src/THaDetMap.C, src/THaDetMap.h,
	src/THaDetector.C, src/THaDetector.h, src/THaDetectorBase.C,
	src/THaDetectorBase.h, src/THaElectronKine.C,
	src/THaElectronKine.h, src/THaEpicsData.C, src/THaEpicsData.h,
	src/THaEvent.C, src/THaEvent.h, src/THaExtTarCor.C,
	src/THaExtTarCor.h, src/THaFormula.C, src/THaFormula.h,
	src/THaGlobals.h, src/THaGoldenTrack.C, src/THaGoldenTrack.h,
	src/THaHRS.C, src/THaHRS.h, src/THaHelicity.C, src/THaHelicity.h,
	src/THaIdealBeam.C, src/THaIdealBeam.h, src/THaInterface.C,
	src/THaLeftHRS.C, src/THaLeftHRS.h, src/THaNamedList.C,
	src/THaNamedList.h, src/THaNonTrackingDetector.h, src/THaOutput.C,
	src/THaOutput.h, src/THaPIDinfo.C, src/THaPIDinfo.h,
	src/THaParticleInfo.C, src/THaParticleInfo.h,
	src/THaPhysicsModule.C, src/THaPhysicsModule.h,
	src/THaPidDetector.h, src/THaPrintOption.h, src/THaRTTI.C,
	src/THaRaster.C, src/THaRaster.h, src/THaRasteredBeam.C,
	src/THaRasteredBeam.h, src/THaRawEvent.C, src/THaRawEvent.h,
	src/THaReactionPoint.C, src/THaReactionPoint.h, src/THaRightHRS.C,
	src/THaRightHRS.h, src/THaRun.C, src/THaRun.h,
	src/THaScalerGroup.C, src/THaScalerGroup.h, src/THaScintillator.C,
	src/THaScintillator.h, src/THaShower.C, src/THaShower.h,
	src/THaSpectrometer.C, src/THaSpectrometer.h,
	src/THaSpectrometerDetector.C, src/THaSpectrometerDetector.h,
	src/THaString.C, src/THaString.h, src/THaSubDetector.h,
	src/THaTotalShower.C, src/THaTotalShower.h, src/THaTrack.C,
	src/THaTrack.h, src/THaTrackInfo.C, src/THaTrackInfo.h,
	src/THaTrackingDetector.C, src/THaTrackingDetector.h,
	src/THaTrackingModule.C, src/THaTrackingModule.h,
	src/THaTwoarmVertex.C, src/THaTwoarmVertex.h,
	src/THaUnRasteredBeam.C, src/THaUnRasteredBeam.h, src/THaVDC.C,
	src/THaVDC.h, src/THaVDCCluster.C, src/THaVDCCluster.h,
	src/THaVDCHit.C, src/THaVDCHit.h, src/THaVDCLookupTTDConv.C,
	src/THaVDCLookupTTDConv.h, src/THaVDCPlane.C, src/THaVDCPlane.h,
	src/THaVDCT0CalTable.C, src/THaVDCT0CalTable.h,
	src/THaVDCTrackID.C, src/THaVDCTrackPair.C, src/THaVDCUVPlane.C,
	src/THaVDCUVPlane.h, src/THaVDCWire.C, src/THaVDCWire.h,
	src/THaVar.C, src/THaVar.h, src/THaVarList.C, src/THaVarList.h,
	src/THaVertexModule.C, src/THaVertexModule.h, src/VarDef.h: Move
	Release-070 branch onto the CVS trunk.

2003-05-15  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.h: Slightly modified API:   - dropped writing/reading from arrays of strings for now   - Use Get/Put instead of (less consistent) Get/Write   - Changed TagDef to DBTagDef, to prevent name-clash with other
	    TagDef current floating around.  When this is official, DBTagDef should be moved to VarDef.h

2003-05-15  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C: THaDB.h

2003-04-17  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaCut.C, src/THaCut.h,
	src/THaCutList.C, src/THaCutList.h, src/THaFormula.C,
	src/THaFormula.h, src/THaInterface.C, src/THaNamedList.C,
	src/THaNamedList.h: Merge changes to cut/formula classes from
	Release-070 branch.

2003-04-15  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: quad_calibrated
	needs to wake up in a defined state

2003-04-15  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: delete validTime and
	validHel in destructor (I forgot about that)

2003-04-14  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: If the helicity and timestamp
	data from one spectrometer is valid, report that to the consumer
	classes so that fEvtHdr.fHelicity and fEvtHdr.fEvtTime are ok.  If
	helicity is available from both spectrometers, check for consistency

2003-04-13  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.h: fixed index bug in InCrate method

2003-04-12  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalroc11_main.C: fix the decoding bug that relied on
	fixed data structure -- should use headers -- the fix is forward and
	backward compatible

2003-04-12  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: an addition of flag
	data for GDH exposed a decoding bug -- should have looked for
	headers -- the fix is both forward and backward compatible

2003-04-12  Ole Hansen <ole@jlab.org>

	* src/THaVar.h: New method GetSize(), a synonym for GetLen(), for
	consistency with ROOT containers.

2003-04-10  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h: Rename CompareSize() methods to
	HasSameSize() for better consistency.

2003-04-09  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h: Add CompareSize() methods.  These are
	useful for dealing with array-type THaVars in formulas and cuts.

2003-03-31  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Merge another set of changes
	from Release-070 branch.  Removed unnecessary includes.  Fix
	incorrect typedef for iterator in Print().

2003-03-31  Ole Hansen <ole@jlab.org>

	* src/THaString.h: Add forgotten std::

2003-03-31  Bob Michaels <rom@jlab.org>

	* src/THaAnalyzer.C: Dont try to add fEvent to outputTree if
	fOutput->Init() fails because then outputTree=0

2003-03-28  Ole Hansen <ole@jlab.org>

	* src/THaString.C: Merge cleaned-up code from Release-070 branch.

2003-03-28  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Merge cleaned-up code from
	Release-070 branch.  Protect against re-initialization.  No longer
	die if output.def cannot be found, but act as a dummy.  Replace
	keyword map with more efficient structure.  Remove several static
	member variables in favor of enum.

2003-03-28  Ole Hansen <ole@jlab.org>

	* src/THaString.h: Merge cleaned-up code from Release-070 branch.

2003-03-28  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Added an early 'block'
	statement, which can select groups of gHaVar-type global variables
	through a pattern match. (eg 'L.*')

2003-03-14  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaDB.C, src/THaDB.h: First checkin. THaDetConfig is present
	as well.

2003-03-04  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Fixed THaOdata to properly save
	results in the case of only 1 element in the variable sized array.
	For THaOutput:  - Changed fixed-length char[xx] to strings when building branch
	 names - Fixed the type information to have the name of the correct branch
	   when handling simple types. It had been using the name of the last
	   variable processed, leading to inconsistent results.

2003-02-20  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaCutList.C, src/THaDecData.C, src/THaDecData.h,
	src/THaString.C, src/THaString.h, src/THaVDCUVPlane.C: More std C++
	compliant, by adding 'std::' and 'using namespace std'

2003-02-20  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaBpm.C, src/THaDetMap.C, src/THaDetMap.h, src/THaRaster.C: 
	Changed the format of the THaDetMap::Module to hold
	first-logical-channel information as well, to decrease the need for
	parallel FirstChan arrays.

2003-02-20  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Increased the maximum number of
	  permitted entries per variable/per event, set by THAOMAX, from 50 to
	100.  Reduced the Error messages for exceeding THAOMAX to only once   per variable/per event.  Added "std::" and "using namespace std"
	  to become more (standard) C++ compliant.

2003-02-06  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalntup_main.C: increment iev

2003-02-06  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: fix response to rare corrupted event type
	140

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C: bugfix: GetTime -> GetEvTime

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_decode/ChangeLog: changes Jan 2003

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/ChangeLog: changes Jan 2003

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/asy.macro, hana_scaler/beam.macro,
	hana_scaler/open.macro, hana_scaler/trigger.macro: new macros to
	analyze the root output from the analysis routines tscalntup and
	tscalring, etc

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalring_main.C: new and complete analysis of ring
	buffer data used by spin-duality experiment Jan 2003

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalntup_main.C: improve cuts, update Init() arg, add
	[12]and[13] to farray_ntup (they were erroneously not filled before)

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalevt_main.C: dont skip events by default

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: updated scaler map (Jan 2003)

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C: Fix typo (ts->TS) and obscure bug on
	checking codasat in LoadDataCodaFile (if codastat<0 return 0)

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/README: explain STANDALONE use better

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_scaler/Makefile: Better handling of STANDALONE, add tscalring
	(new analyzer), comment out xscaler

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C: fix checks on indices (thanks R.F.)

2003-01-31  Bob Michaels <rom@jlab.org>

	* hana_decode/Makefile, hana_decode/README,
	hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: better handling of STANDALONE

2003-01-31  Ole Hansen <ole@jlab.org>

	* src/THaHRS.C, src/THaVDC.C, src/THaVDCAnalyticTTDConv.h,
	src/THaVDCPlane.C, src/THaVDCUVTrack.C: Changed some comments.

2003-01-24  Ole Hansen <ole@jlab.org>

	* DB/20030101/db_L.s1.dat, DB/20030101/db_L.s2.dat,
	DB/20030101/db_L.vdc.dat, DB/20030101/db_R.s1.dat,
	DB/20030101/db_R.s2.dat, DB/20030101/db_R.vdc.dat: New database
	files for experiment E01-012 (Jan-Feb 2003).

2003-01-24  Ole Hansen <ole@jlab.org>

	* src/THaRightHRS.C: Removed Cherenkov detectors from default
	spectrometer configuration.  These should be added if needed either
	with AddDetector or with a more specific derived class.

2003-01-17  Ole Hansen <ole@jlab.org>

	* src/THaString.C: Remove superfluous this pointers

2003-01-17  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaAnalyzer.C,
	src/THaAnalyzer.h, src/THaEvent.C, src/THaEvent.h, src/THaOutput.C,
	src/THaOutput.h, src/THaRawEvent.C, src/THaRawEvent.h,
	src/THaVDCEvent.C, src/THaVDCEvent.h: - Restore some of the functionality of THaEvent to allow writing of   event objects as before. Restore old THaRawEvent, and add a new   class THaVDCEvent, containing VDC-specific data only.  - Minor cleanup of THaOutput code.  - THaOutput::LoadFile() no longer requires a space after a comment   character.

2003-01-17  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: New method
	GetTime() returns 100 kHz time stamp from helicity data.  Added
	minimal support for SYNC event type (no longer returns error when
	encountered).  Extract the UNIX time stamps from the CODA run
	control events and save them in member variable evt_time (maybe
	useful in the future).

2003-01-15  Ole Hansen <ole@jlab.org>

	* DB/20000901/db_L.vdc.dat, DB/20000901/db_R.vdc.dat: New TDC offset
	values from Rob

2003-01-13  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaEvData.h: Verify GetRawData does the range check
	correctly before returning buffer[index].

2003-01-09  Rob Feuerbach <feuerbac@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: Changed nb from a static
	variable to an element of the class, so we can use multiple
	THaHelicity objects.

2003-01-02  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCrateMap.C: Solve the Year-2003 problem

2003-01-02  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: initialize fDetMap

2002-12-13  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDCUVPlane.C, src/THaVDCUVPlane.h,
	src/THaVDCUVTrack.C, src/THaVDCUVTrack.h: Modify the calculation of
	the track angles such that global angles (angles derived from the
	cluster positions in the lower and upper UV planes) are used for the
	final coordinates of the THaTrack(s).  Previously, local u,v angles
	were always used for the projection of V clusters into the
	associated U plane, causing loss of resolution.

2002-12-11  Ole Hansen <ole@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: Fix link errors with THaOutput

2002-11-26  Rob Feuerbach <feuerbac@jlab.org>

	* Makefile: Add symbolic link to scaler.map file in DB directory.

2002-11-26  Rob Feuerbach <feuerbac@jlab.org>

	* hana_scaler/THaScalerDB.C: Added reference to DB_DIR environment
	variable to find scaler.map file.

2002-11-26  Rob Feuerbach <feuerbac@jlab.org>

	* src/THaOutput.C: Made error message about too-many variable sized
	data entries more verbose such that it prints out the offending
	variable name.

2002-11-25  Ole Hansen <ole@jlab.org>

	* DB/20000901/db_L.vdc.dat, DB/20000901/db_R.vdc.dat,
	DB/20010101/db_L.vdc.dat, DB/20010101/db_R.vdc.dat, src/THaVDC.C: 
	Update VDC databases with optimized values from E97-111 (Sep 2000).
	Change identifiers of t000, y000, p000 coefficients to lowercase.

2002-11-18  Ole Hansen <ole@jlab.org>

	* DB/20000901/db_L.vdc.dat, DB/20000901/db_R.vdc.dat: Update U2/V2
	z-positions

2002-11-14  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Add detector coordinates to the global
	variables.

2002-11-14  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.h: Add missing initialization of fTimeCorrection
	in constructor.

2002-11-11  Ole Hansen <ole@jlab.org>

	* DB/19970101/db_L.vdc.dat, DB/20000901/db_L.vdc.dat,
	DB/20010101/db_L.vdc.dat: Modify the 'wbeg' parameter for the U2 and
	V2 planes to match the existing databases for ESPACE.

2002-11-11  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Correctly set the 'order' of the matrix elements
	read by ReadDatabase.  This bug caused incorrect target
	reconstruction results.

2002-11-07  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h: Remove redundant argument const
	THaVDCUVTrack from CalcFocalPlaneCoords.  Remove obsolete method
	ProjToTransPlane.

2002-11-04  Ole Hansen <ole@jlab.org>

	* scripts/process.C: Update to latest working version

2002-11-04  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Change ReadDatabase() to read the DB file correctly.
	The prior version crashed at the first matrix element because the
	element indices were not read.

2002-10-15  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalroc11_main.C: more detailed analysis of ring
	buffer

2002-10-10  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalevt_main.C: added option to average over larger
	time intervals

2002-10-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalroc11_main.C: new for G0 helicity mode

2002-10-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/Makefile: add tscalevt

2002-10-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: update of scaler map

2002-10-09  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalevt_main.C: new analysis example for synchronous
	readout

2002-10-09  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCrateMap.C: Update the crate map

2002-10-08  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, src/THaHelicity.C: correct use of
	fgG0delay

2002-10-07  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: improved logic for finding QRT

2002-10-04  Bob Michaels <rom@jlab.org>

	* hana_decode/THaHelicity.C, hana_decode/THaHelicity.h,
	src/THaHelicity.C, src/THaHelicity.h: Implemented G0 helicity mode,
	still backward compatible

2002-09-13  Bob Michaels <rom@jlab.org>

	* hana_decode/evio.C: fix bug (apparently recent) in malloc for fn
	in evOpen

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaOutput.h: improved comments

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C: fix small bug in error handling

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: add coincidence time and
	pulser

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/HallA_LinkDef.h: add THaOutput, THaOdata, THaString, remove
	THaRawEvent

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: use THaOutput class

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: THaRawEvent is obsolete now

2002-09-12  Bob Michaels <rom@jlab.org>

	* examples/output.def: definitions file needed by THaOutput class

2002-09-12  Bob Michaels <rom@jlab.org>

	* examples/setup.C: new example setup (add THaDecData and simplified
	THaEvent

2002-09-12  Bob Michaels <rom@jlab.org>

	* Makefile: added THaOutput and THaString, removed THaRawEvent.
	Also profiling option.

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaEvent.C, src/THaEvent.h: simplfications to THaEvent

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaString.C, src/THaString.h: new THaString utility class

2002-09-12  Bob Michaels <rom@jlab.org>

	* src/THaOutput.C, src/THaOutput.h: new output definition class

2002-09-11  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaFile.C: improved error handling

2002-09-11  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: add PrintOut
	method

2002-09-09  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.C: Trim whitespace from beginning and end of
	filename in evOpen routine.

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Fix memory leak and program bug, and restore debug
	message, for the case when tracks are updated.

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaInterface.C: Update version number and date

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h, src/THaVDC.C,
	src/THaVDC.h: Minor code cleanup

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaPIDinfo.C, src/THaTrack.C, src/THaTrack.h,
	src/THaTrackingDetector.C, src/THaTrackingDetector.h, src/THaVDC.C: 
	Cleanup of THaTrack: - Change order of arguments in constructor and various Set()
	functions.  - Remove fPx etc. momentum components - Get rid of unnecessary inline functions - Delete any references to unused class THaVertex - Make THaTrack independent of THaSpectrometer For consistency, also change the signature of
	THaTrackingDetector::AddTrack.

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaHRS.C, src/THaSpectrometer.C: Move calls to detector
	FindVertices methods into THaHRS class

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C: Reformat for 80-column editors

2002-08-30  Ole Hansen <ole@jlab.org>

	* src/THaCluster.h: Remove redundant call to TObject constructor

2002-08-30  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.C: Remove leading spaces from file name in evOpen

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCCluster.C,
	src/THaVDCCluster.h: Added support for marking tracks that leave the
	spectrometer prematurely and making time-of-flight corrections to
	drift times Both of these functions would be called in FineTrack(), but they are
	currently commented out, as they need more testing (at least the time-of-flight correction causes crashes)

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaScintillator.C: code to initialize detector plane
	orientation added

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDCPlane.C: trivial debug code removed

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaTrack.h: Added support for storing track data in detector
	coordinates

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaDetectorBase.C: removed trivial debug code

2002-08-08  Sean Dobbs <dobbs@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h: Added support for
	calculating intersections of reconstructed tracks with detector
	planes and the associated path length

2002-08-07  Sean Dobbs <dobbs@jlab.org>

	* DB/20010101/db_L.vdc.dat, DB/20010101/db_R.vdc.dat: updated vdc
	data files

2002-08-05  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDC.C, src/THaVDC.h: Cleaned up target reconstruction code

2002-08-05  Sean Dobbs <dobbs@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Added support for outputting
	cluster quantities

2002-08-05  Sean Dobbs <dobbs@jlab.org>

	* scripts/hists.C, scripts/process.C, scripts/rhists.C,
	scripts/rkincor.C: various insubstatial changes

2002-07-25  Sean Dobbs <dobbs@jlab.org>

	* scripts/calct0table.C, scripts/calcttdtable.C,
	scripts/clust_hists.C, scripts/hists.C, scripts/kincor.C,
	scripts/process.C, scripts/rhists.C, scripts/rkincor.C,
	scripts/ttd_hists.C: Scripts used for analyzing particle track
	reconstruction

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* DB/20000901/db_L.vdc.dat, DB/20000901/db_R.vdc.dat,
	DB/20010101/db_L.vdc.dat, DB/20010101/db_R.vdc.dat: Added TTD lookup
	tables and global VDC info all the lookup tables except for 20000901/db_L.vdc.dat need to be
	regenerated, as they have precision problems

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDC.C, src/THaVDC.h: Biggest changes were those to caculate
	target and related coordinate values.  Added ReadDatabase() to read in VDC global variables.  Currently
	loads only recontruction matrix elements and the spacing between
	planes (i.e. between U1 and U2) SetupDetector(): now fSpacing is read in from DB file fVDCAngle is
	calculated from one of the focal plane matrix elements ConstructTracks(): moved calculation of transport system values into
	CalcFocalPlaneCoords() Implements FindVertices() interface now.  The following functions were converted from ESPACE source: CalcFocalPlaneCoords() CalcTargetCoords() CalcMatrix() DoPoly()
	CalcTargetVar()

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Now saves target coordinate
	and rotating transport system values

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDCHit.C, src/THaVDCLookupTTDConv.C,
	src/THaVDCLookupTTDConv.h, src/THaVDCPlane.C: Minor bug fixes
	related to lookup table TTD converter THaVDCLookupTTDConv.C: added experimental code to do theta
	corrections

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaHRS.C, src/THaHRS.h, src/THaSpectrometer.C,
	src/THaSpectrometer.h, src/THaTrackingDetector.h: Added
	FindVertices() interface for reconstructing target coordinates from
	fitted tracks.  THaSpectrometer.C also modified to export target and rotating
	transport frame coordinates.

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDCUVTrack.h: trivial change

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaTrack.h: Added support for storing coordinates in both the
	rotating transport frame and the target frame

2002-07-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaAnalyzer.C: Changed tree creations parameters to something
	more sane Namely block size 16k, split level 99

2002-06-20  Sean Dobbs <dobbs@jlab.org>

	* src/HallA_LinkDef.h, src/THaVDCLookupTTDConv.C,
	src/THaVDCLookupTTDConv.h, src/THaVDCPlane.C, src/THaVDCPlane.h: 
	Added lookup table TTD calculation lookup table stored in VDC plane
	objects

2002-06-20  Sean Dobbs <dobbs@jlab.org>

	* scripts/calcttdtable.C: added to edit DB file

2002-06-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaAnalyzer.C: Now saves a copy of the THaRun object with the
	file to save run metadata (such as number, date, etc.)

2002-06-18  Sean Dobbs <dobbs@jlab.org>

	* src/THaRun.h: Changed so that now instances of this class can be
	written to a TFile with their data elements intact

2002-06-18  Sean Dobbs <dobbs@jlab.org>

	* src/HallA_LinkDef.h: Changed to use new streamers introduced in
	ROOT 3.0

2002-06-18  Sean Dobbs <dobbs@jlab.org>

	* scripts/calcttdtable.C: script to calculate TTD lookup table

2002-06-17  Sean Dobbs <dobbs@jlab.org>

	* scripts/calct0table.C: Changed so that the run date is taken from
	the ROOT file

2002-06-17  Sean Dobbs <dobbs@jlab.org>

	* scripts/calct0table.C: add script to automatically calculate
	toffsets for a VDC plane given a data set

2002-06-16  Ole Hansen <ole@jlab.org>

	* src/THaRun.h: Set class version to 1 to allow THaRun objects to be
	written to file.

2002-06-14  Sean Dobbs <dobbs@jlab.org>

	* src/THaDetectorBase.C, src/THaDetectorBase.h: Made OpenFile() into
	a static function -- extended functionality so that any object can
	get a pointer to a database file for whatever reason

2002-06-14  Sean Dobbs <dobbs@jlab.org>

	* src/THaRawEvent.h: Made all data elements public for easier access This should be okay, since there are a whole lot of elements and
	this is mostly a temporary class

2002-06-14  Sean Dobbs <dobbs@jlab.org>

	* src/THaVDC.h: No major changes

2002-05-11  Bob Michaels <rom@jlab.org>

	* src/THaRun.C: delete fCodaFile in operator=

2002-05-11  Bob Michaels <rom@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: count reasons to skip events
	including truncated events, coda errors, and cut evaluations

2002-05-11  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaFile.C: return all status and do not exit if
	bad status

2002-05-11  Bob Michaels <rom@jlab.org>

	* hana_decode/THaUsrstrutils.C: handling of prescale factors to
	satisfy insure++ complaints

2002-05-11  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaData.C: delete evbuffer in destructor

2002-05-09  Ole Hansen <ole@jlab.org>

	* src/THaDetMap.C, src/THaVar.C: Fix potential memory leak in
	operator=

2002-04-30  Ole Hansen <ole@jlab.org>

	* RELEASE_NOTES, docs/RELEASE_NOTES_v1.0.txt: Test check-in

2002-04-24  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCodaData.h: increase MAXEVLEN to avoid stopping due
	to anomolous ASCII event insertions

2002-04-18  Ole Hansen <ole@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Add drift distance variable
	arrays.

2002-04-18  Ole Hansen <ole@jlab.org>

	* src/THaCluster.C, src/THaCluster.h: Initial check-in.

2002-04-18  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h: Minor code cleanup.

2002-04-18  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h, src/THaVDC.C,
	src/THaVDCCluster.C, src/THaVDCCluster.h, src/THaVDCPlane.h,
	src/THaVDCUVPlane.C, src/THaVDCUVTrack.C, src/THaVDCUVTrack.h: 
	THaVDCUVTracks are the real THaClusters.  Compute cluster centers.
	Add clusters to tracks.

2002-04-16  Ole Hansen <ole@jlab.org>

	* src/THaDetectorBase.h, src/THaVDC.C, src/THaVDCPlane.C,
	src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Set position data
	(fOrigin) of VDC subdetectors.

2002-04-16  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaTrack.C, src/THaTrack.h,
	src/THaTrackingDetector.C, src/THaTrackingDetector.h,
	src/THaVDCCluster.C, src/THaVDCCluster.h: Add generic THaCluster
	class.

2002-04-01  Ole Hansen <ole@jlab.org>

	* hana_decode/haDecode_LinkDef.h: Restore THaEtClient commented out
	by mistake.

2002-04-01  Ole Hansen <ole@jlab.org>

	* hana_decode/haDecode_LinkDef.h: Comment out unused class
	THaEtClient.

2002-04-01  Ole Hansen <ole@jlab.org>

	* .exclude: New file to support generation of source distribution
	tar file.  Used by main Makefile.

2002-04-01  Ole Hansen <ole@jlab.org>

	* Makefile: New target cvsdist containing CVS subdirs for moving
	working directories between machines.  Exclude CVS, src/old,
	src/new. New file .exclude.

2002-04-01  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C, src/THaDecData.C, src/THaDecData.h,
	src/THaInterface.C, src/THaSpectrometer.C, src/THaSpectrometer.h,
	src/THaVDC.h, src/THaVDCCluster.C, src/THaVDCPlane.C,
	src/THaVDCPlane.h, src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Fix
	compilation on Solaris.

2002-04-01  Ole Hansen <ole@jlab.org>

	* RELEASE_NOTES, docs/RELEASE_NOTES_v1.0.txt: Updated for Release
	0.65

2002-04-01  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCPlane.C, src/THaVDCPlane.h,
	src/THaVDCUVPlane.C, src/THaVDCUVPlane.h: Add support for
	controlling VDC analysis with flags stored in THaVDC class.  Minor
	code cleanup.

2002-04-01  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h, src/THaVDCHit.C,
	src/THaVDCHit.h: Minor code cleanup.

2002-03-27  Ole Hansen <ole@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Add cluster slope variables.

2002-03-27  Ole Hansen <ole@jlab.org>

	* DB/20000901/db_L.aero1.dat, DB/20000901/db_L.cer.dat,
	DB/20000901/db_L.s1.dat, DB/20000901/db_L.s2.dat,
	DB/20000901/db_L.vdc.dat, DB/20000901/db_R.aero1.dat,
	DB/20000901/db_R.cer.dat, DB/20000901/db_R.ps.dat,
	DB/20000901/db_R.s1.dat, DB/20000901/db_R.s2.dat,
	DB/20000901/db_R.sh.dat, DB/20000901/db_R.ts.dat,
	DB/20000901/db_R.vdc.dat, DB/20000901/db_s1.dat,
	DB/20000901/db_sh.dat: Initial revision of new data base files for
	E97111.

2002-03-27  Ole Hansen <ole@jlab.org>

	* DB/19970101/db_L.vdc.dat, DB/20010101/db_L.vdc.dat: Fix incorrect
	units of plane z positions (m, not cm)

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaVDC.h: Define analysis status flags to be stored with
	tracks.

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Compress tracks array when tracks are reassigned to
	avoid empty slots.  Store status information in track flag.

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: For VDCs, add hit rawtime
	and track flag.

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaTrackingDetector.C, src/THaTrackingDetector.h: Remove const
	from TClonesArray of clusters.

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: Fix units of position variables.
	Make fFlag unsigned integer.

2002-03-26  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C: Rename global variables.  Fix units in
	descriptions.  Add 'flag' variable.

2002-03-26  Ole Hansen <ole@jlab.org>

	* hana_decode/swapped_intcpy.c: Fix possibly incorrect assembly code
	generation.

2002-03-26  Ole Hansen <ole@jlab.org>

	* hana_decode/evio.C, hana_decode/swap_util.C: Fix compliation
	warnings about signed/unsigned comparisons.

2002-03-26  Ole Hansen <ole@jlab.org>

	* hana_decode/Makefile, hana_scaler/Makefile: Add DEBUG mode.

2002-03-25  Ole Hansen <ole@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Fix bugs related to track
	data arrays.

2002-03-25  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C: Protect against invalid object variables.

2002-03-25  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h: Make code more crash-proof.  Return
	special values kInvalid/kInvalidInt for invalid object variables.

2002-03-18  Ole Hansen <ole@jlab.org>

	* src/THaRawEvent.C, src/THaRawEvent.h: Add VDC variables to output.
	Variable-size arrays for track data still missing.

2002-03-15  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C, src/THaEvent.h: Handle new global variables
	correctly.

2002-03-15  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.h: buffer pointer validity checked

2002-03-15  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C: proper initializatin of buffer

2002-03-15  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h: Add useful functions:
	Compare(), Print(). Other minor improvements.

2002-03-15  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Compile debug messages conditionally and observe
	fDebug flag.

2002-03-14  Ole Hansen <ole@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: Fix memory leak,
	compilation warnings.

2002-03-14  Bob Michaels <rom@jlab.org>

	* src/THaDecData.C: cleaned up some comments

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h: Add FitSimpleTrack, fT0,
	copy constructor, assigment operator.  Don't clear fHits array in
	Clear() since fSize gives number of valid hits.  Clean up header.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Remove breakpoint at each event to keep
	collaborators sane.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDC.h: Debugging version with new ConstructTracks()

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDCTrackPair.h, src/THaVDCUVPlane.C, src/THaVDCUVPlane.h,
	src/THaVDCUVTrack.C, src/THaVDCUVTrack.h: Debug version.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C: In DefineVarsFromList(), actually prepend
	prefix when deleting variables.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Extensive revision of ConstructTracks().

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: Minor recoding of
	initialization routine.  New routine SetupDecData.  Clean up global
	variables in destructor.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/HallA_LinkDef.h: Delete reference to THaBtestEvent.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h, src/THaSpectrometer.C,
	src/THaSpectrometer.h: Make DefineVariable functions non-const.

2002-03-14  Bob Michaels <rom@jlab.org>

	* src/HallA_LinkDef.h: add THaDecData

2002-03-14  Bob Michaels <rom@jlab.org>

	* Makefile: add THaDecData

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaTrackingDetector.C: Suppress nuisance warning about PID
	array index out of bounds.

2002-03-14  Bob Michaels <rom@jlab.org>

	* hana_decode/THaEvData.C, hana_decode/THaEvData.h: mods necessary
	for THaDecData

2002-03-14  Bob Michaels <rom@jlab.org>

	* src/THaDecData.C, src/THaDecData.h: new class for misc decoder
	data

2002-03-14  Bob Michaels <rom@jlab.org>

	* examples/decdata.map: example of map used by THaDecData

2002-03-14  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add THaVDCTrackPair class

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDCHit.C: Protect Compare() against comparison with unlike
	objects.

2002-03-14  Ole Hansen <ole@jlab.org>

	* src/THaVDCTrackPair.C, src/THaVDCTrackPair.h: Implement Analyze()
	and add fStatus

2002-03-13  Ole Hansen <ole@jlab.org>

	* src/THaVDCTrackPair.C, src/THaVDCTrackPair.h: Initial revision.
	Analyze() not yet implemented.

2002-03-13  Ole Hansen <ole@jlab.org>

	* src/THaTrackID.C, src/THaTrackID.h, src/THaVDC.C, src/THaVDC.h,
	src/THaVDCPlane.h, src/THaVDCUVPlane.C, src/THaVDCUVPlane.h,
	src/THaVDCUVTrack.C, src/THaVDCUVTrack.h: Miscellaneous code
	cleanup. Work in progress.

2002-03-13  Ole Hansen <ole@jlab.org>

	* src/THaAnalyzer.C, src/THaAnalyzer.h: Register event number (fNev)
	as a global variable.

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C: Fix a bunch of bugs in ConstructTracks() introduced
	in 1.4

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVTrack.C: Make code more debugger-friendly.

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h, src/THaVDCHit.h,
	src/THaVarList.C: Minor code cleanup.

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaTrackingDetector.C, src/THaTrackingDetector.h,
	src/THaVDC.C, src/THaVDC.h: Change VDC class to eliminate duplicate
	tracks from CoarseTrack and FineTrack stages. Assign unique ID to
	generated tracks.

2002-03-12  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h: Add THaTrackID and THaVDCTrackID
	classes.

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaTrack.C, src/THaTrack.h: Add support for TrackID, flag, and
	Creator.

2002-03-12  Ole Hansen <ole@jlab.org>

	* src/THaTrackID.C, src/THaTrackID.h, src/THaVDCTrackID.C,
	src/THaVDCTrackID.h: Initial version.

2002-03-11  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVTrack.C, src/THaVDCUVTrack.h: Make getters const. Put
	ctor and dtor in header and clean up.

2002-03-08  Ole Hansen <ole@jlab.org>

	* DB/19970101/db_L.vdc.dat, DB/20010101/db_L.vdc.dat: Fix units of
	wire positions and drift velocity

2002-03-08  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C: Fix incorrect slope calculation in
	EstTrackParameters()

2002-03-08  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVPlane.C: Fix incorrect initialization order

2002-03-05  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaRICH.C, src/THaRICH.h,
	src/THaRICHClusterList.C, src/THaRICHClusterList.h: Remove RICH
	code. Will be put in a standalone library.

2002-03-05  Ole Hansen <ole@jlab.org>

	* src/THaSpectrometer.C, src/THaSpectrometer.h: Add global variable
	support and a set of basic global variables for tracks.

2002-03-05  Ole Hansen <ole@jlab.org>

	* src/THaApparatus.C, src/THaApparatus.h: Add global variable
	support.

2002-03-05  Ole Hansen <ole@jlab.org>

	* src/THaVDCHit.h: Make Get functions const.

2002-03-05  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C, src/THaVDCCluster.h: Make Get functions
	const.  Add GetPivotWireNum() required for global variables.

2002-03-05  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCPlane.C: Add more global
	variables

2002-03-04  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C, src/THaVDCPlane.h: Add basic set of global
	variables

2002-03-04  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h: Get correct size of object arrays

2002-03-04  Ole Hansen <ole@jlab.org>

	* src/THaVDCHit.C, src/THaVDCHit.h: Change signature of Compare() to
	match TObject

2002-03-01  Ole Hansen <ole@jlab.org>

	* src/THaRTTI.h: Make IsObject() also return true for pointers to
	objects.

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaBpm.C, src/THaCherenkov.C, src/THaEpicsData.C,
	src/THaRaster.C, src/THaScintillator.C, src/THaShower.C,
	src/THaTotalShower.C: Global variables now defined via RTTI in all
	std detector classes.

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaVDCUVPlane.C: Better error checking in MatchUVClusters()

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaVDCCluster.C: Fix crash in Clear() - bad loop bound

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaVarList.C, src/THaVarList.h: THaVarList: Improved error
	checking, prevent duplicate variable definitions, allow classes that
	don't inherit from TObject.

2002-02-28  Ole Hansen <ole@jlab.org>

	* Makefile, src/HallA_LinkDef.h, src/THaDetectorBase.C,
	src/THaDetectorBase.h, src/THaRTTI.C, src/THaRTTI.h, src/THaVar.C,
	src/THaVar.h, src/THaVarList.C, src/THaVarList.h, src/VarDef.h,
	src/VarType.h: Initial checkin of expanded global variable system
	with support for RTTI.  Works, but not fully tested. Treat as beta
	code for now.

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C, src/THaVDCPlane.h: Fix minor VDC compilation
	bugs

2002-02-28  Ole Hansen <ole@jlab.org>

	* src/THaVDCHit.h, src/THaVDCPlane.C, src/THaVDCPlane.h: Minor VDC
	code modifications. More to come.

2002-02-14  Bob Michaels <rom@jlab.org>

	* hana_decode/THaUsrstrutils.C: fixed a memory problem

2002-01-22  Bob Michaels <rom@jlab.org>

	* hana_scaler/README: explain about THaScalerGui

2002-01-20  Bob Michaels <rom@jlab.org>

	* examples/analyze_scaler.C: modified a comment

2002-01-20  Bob Michaels <rom@jlab.org>

	* examples/analyze_scaler.C: example to analyze scalers

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: updated scaler map

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScalerGui.C, hana_scaler/THaScalerGui.h: scaler is
	now a member instead of using inheritence

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/THaScaler.C, hana_scaler/THaScaler.h: Added RCS and
	synchronous scalers.  Added new_load flag

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/tscalroc11_main.C: new example code, to analyze
	synchronous scalers from roc11

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/Makefile: added another example (analyze the
	synchronous scalers from roc11)

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_scaler/ChangeLog: added ChangeLog

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_decode/ChangeLog: changes Jan 20 2002

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_decode/prfact_main.C, hana_decode/tdecex_main.C,
	hana_decode/tdecpr_main.C, hana_decode/tstio_main.C: added evio.h

2002-01-20  Bob Michaels <rom@jlab.org>

	* hana_decode/THaCrateMap.C, hana_decode/THaCrateMap.h,
	hana_decode/THaEvData.C, hana_decode/THaEvData.h: support for RCS
	and synchronous scalers

2001-12-18  Ole Hansen <ole@jlab.org>

	* src/THaTrack.h: Fix typo in GetPx()

2001-12-12  Ole Hansen <ole@jlab.org>

	* src/THaVar.h: Reorder member initializers to match declaration
	order

2001-12-12  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C, src/THaVarList.C: Use C-style casts from const
	void * to const int** etc.

2001-12-12  Ole Hansen <ole@jlab.org>

	* Makefile: Add DB subdirectory to srcdist

2001-12-06  Ole Hansen <ole@jlab.org>

	* src/THaBpm.C, src/THaCherenkov.C, src/THaRaster.C,
	src/THaScintillator.C, src/THaShower.C: Remove dependency on
	THaVarList.h

2001-12-06  Ole Hansen <ole@jlab.org>

	* src/THaVarList.C, src/THaVarList.h: Add support for arrays of
	pointers. Simplify implementation.  All overloaded Define()
	functions now defined in header.  New function DefineByType() takes
	care of sorting out the type.

2001-12-05  Ole Hansen <ole@jlab.org>

	* src/THaVDCPlane.C, src/THaVDCWire.C, src/THaVDCWire.h: Fix wire
	initialization

2001-12-05  Ole Hansen <ole@jlab.org>

	* DB/19970101/db_L.vdc.dat, DB/19970101/db_R.vdc.dat,
	DB/20010101/db_L.vdc.dat, DB/20010101/db_R.vdc.dat, Makefile,
	src/HallA_LinkDef.h, src/THaRawEvent.C, src/THaRawEvent.h: Initial
	check-in of modifications for high-precision VDC class

2001-12-05  Ole Hansen <ole@jlab.org>

	* src/THaVDC.C, src/THaVDC.h, src/THaVDCAnalyticTTDConv.C,
	src/THaVDCAnalyticTTDConv.h, src/THaVDCCluster.C,
	src/THaVDCCluster.h, src/THaVDCHit.C, src/THaVDCHit.h,
	src/THaVDCPlane.C, src/THaVDCPlane.h, src/THaVDCT0CalTable.C,
	src/THaVDCT0CalTable.h, src/THaVDCTimeToDistConv.C,
	src/THaVDCTimeToDistConv.h, src/THaVDCUVPlane.C,
	src/THaVDCUVPlane.h, src/THaVDCUVTrack.C, src/THaVDCUVTrack.h,
	src/THaVDCWire.C, src/THaVDCWire.h: Initial check-in of
	high-precision VDC class.  No global VDC variables yet.

2001-12-05  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C: Minor code cleanup

2001-12-05  Ole Hansen <ole@jlab.org>

	* src/THaBpm.C, src/THaDetector.C, src/THaDetector.h,
	src/THaDetectorBase.C, src/THaDetectorBase.h, src/THaEpicsData.C,
	src/THaRICH.C, src/THaRaster.C, src/THaSubDetector.C,
	src/THaSubDetector.h, src/THaTotalShower.C: Move MakePrefix() calls
	from THaDetectorBase constructor to Init() so we can use a virtual
	function. Some detectors need special prefixes to get sane global
	variable names.  Add GetDBFileName() function to allow subdetectors to use the same
	database file as their parent detectors.

2001-12-03  Bob Michaels <rom@jlab.org>

	* hana_scaler/scaler.map: corrected scaler.map file

2001-11-30  Ole Hansen <ole@jlab.org>

	* src/THaEvent.C, src/THaEvent.h: Add support for arrays of
	pointers.

2001-11-30  Ole Hansen <ole@jlab.org>

	* src/THaVar.C, src/THaVar.h, src/VarType.h: Add support for arrays
	of pointers (non-contiguous arrays)

2001-11-29  Ole Hansen <ole@jlab.org>

	* src/THaVar.h: Use default argument for GetValue() functions

2001-11-28  Ole Hansen <ole@jlab.org>

	* Makefile: Fix bug with Makefile dependencies

2001-11-14  Ole Hansen <ole@jlab.org>

	* Initial revision

